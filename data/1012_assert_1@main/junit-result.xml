<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
  <testsuite name="facet_grid_formula" timestamp="2024-02-08T12:05:37Z" hostname="844dd23524bf" tests="4" skipped="0" failures="0" errors="0" time="0.055">
    <testcase time="0.0190000000000001" classname="facet_grid_formula" name="facet_grid_formula_works"/>
    <testcase time="0.0219999999999998" classname="facet_grid_formula" name="facet_grid_formula_works"/>
    <testcase time="0.0100000000000002" classname="facet_grid_formula" name="facet_grid_formula_works"/>
    <testcase time="0.004" classname="facet_grid_formula" name="facet_grid_formula_works"/>
  </testsuite>
  <testsuite name="string_ops" timestamp="2024-02-08T12:05:37Z" hostname="844dd23524bf" tests="1" skipped="0" failures="0" errors="0" time="0.018">
    <testcase time="0.0179999999999998" classname="string_ops" name="_as_num_as_a_wide_interpretation_of_input_to_extract_numerics."/>
  </testsuite>
  <testsuite name="substitute_names" timestamp="2024-02-08T12:05:37Z" hostname="844dd23524bf" tests="9" skipped="0" failures="0" errors="0" time="0.082">
    <testcase time="0.0210000000000004" classname="substitute_names" name="substitute_q_works_as_expected"/>
    <testcase time="0.0129999999999999" classname="substitute_names" name="substitute_q_fails_on_unquoted_call"/>
    <testcase time="0.00700000000000012" classname="substitute_names" name="h_subst_lhs_names_works_as_expected"/>
    <testcase time="0.00599999999999978" classname="substitute_names" name="substitute_lhs_names_works_as_expected_with_nested_expressions"/>
    <testcase time="0.00700000000000012" classname="substitute_names" name="substitute_lhs_names_does_not_lead_to_infinite_recursion"/>
    <testcase time="0.00699999999999967" classname="substitute_names" name="substitute_rhs_works_as_expected"/>
    <testcase time="0.00700000000000012" classname="substitute_names" name="substitute_names_works_as_expected"/>
    <testcase time="0.00700000000000012" classname="substitute_names" name="substitute_names_can_also_substitute_other_expressions_if_requested"/>
    <testcase time="0.00700000000000012" classname="substitute_names" name="substitute_names_works_as_expected_with_nested_expressions"/>
  </testsuite>
  <testsuite name="tm_a_gee" timestamp="2024-02-08T12:05:37Z" hostname="844dd23524bf" tests="4" skipped="0" failures="0" errors="4" time="0.143">
    <testcase time="0.0169999999999999" classname="tm_a_gee" name="template_a_gee_t_gee_cov_table_works_as_expected_with_default_input">
      <error type="error" message="Error in `add_expr(list(), substitute(expr = { ('test-tm_a_gee.R:2:3')">Error in `add_expr(list(), substitute(expr = {
    model_fit &lt;- tern.gee::fit_gee(vars = tern.gee::vars_gee(response = as.vector(aval_var), 
        covariates = as.vector(split_covariates), id = as.vector(id_var), 
        arm = as.vector(arm_var), visit = as.vector(visit_var)), 
        data = data_model_fit, regression = "logistic", cor_struct = cor_struct)
}, env = list(data_model_fit = as.name(data_model_fit), aval_var = aval_var, 
    split_covariates = split_covariates, id_var = id_var, arm_var = arm_var, 
    visit_var = visit_var, cor_struct = cor_struct)))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '{'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_a_gee(...) at test-tm_a_gee.R:2:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0470000000000002" classname="tm_a_gee" name="template_a_gee_t_gee_coef_table_works_as_expected_with_default_input">
      <error type="error" message="Error in `add_expr(list(), substitute(expr = { ('test-tm_a_gee.R:17:3')">Error in `add_expr(list(), substitute(expr = {
    model_fit &lt;- tern.gee::fit_gee(vars = tern.gee::vars_gee(response = as.vector(aval_var), 
        covariates = as.vector(split_covariates), id = as.vector(id_var), 
        arm = as.vector(arm_var), visit = as.vector(visit_var)), 
        data = data_model_fit, regression = "logistic", cor_struct = cor_struct)
}, env = list(data_model_fit = as.name(data_model_fit), aval_var = aval_var, 
    split_covariates = split_covariates, id_var = id_var, arm_var = arm_var, 
    visit_var = visit_var, cor_struct = cor_struct)))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '{'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_a_gee(...) at test-tm_a_gee.R:17:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0449999999999999" classname="tm_a_gee" name="template_a_gee_works_as_expected_with_non_default_reference_arm">
      <error type="error" message="Error in `add_expr(list(), substitute(expr = { ('test-tm_a_gee.R:32:3')">Error in `add_expr(list(), substitute(expr = {
    model_fit &lt;- tern.gee::fit_gee(vars = tern.gee::vars_gee(response = as.vector(aval_var), 
        covariates = as.vector(split_covariates), id = as.vector(id_var), 
        arm = as.vector(arm_var), visit = as.vector(visit_var)), 
        data = data_model_fit, regression = "logistic", cor_struct = cor_struct)
}, env = list(data_model_fit = as.name(data_model_fit), aval_var = aval_var, 
    split_covariates = split_covariates, id_var = id_var, arm_var = arm_var, 
    visit_var = visit_var, cor_struct = cor_struct)))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '{'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_a_gee(...) at test-tm_a_gee.R:32:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0339999999999998" classname="tm_a_gee" name="template_a_gee_works_as_expected_when_arm_is_not_considered_in_the_model">
      <error type="error" message="Error in `add_expr(list(), substitute(expr = { ('test-tm_a_gee.R:48:3')">Error in `add_expr(list(), substitute(expr = {
    model_fit &lt;- tern.gee::fit_gee(vars = tern.gee::vars_gee(response = as.vector(aval_var), 
        covariates = as.vector(split_covariates), id = as.vector(id_var), 
        arm = as.vector(arm_var), visit = as.vector(visit_var)), 
        data = data_model_fit, regression = "logistic", cor_struct = cor_struct)
}, env = list(data_model_fit = as.name(data_model_fit), aval_var = aval_var, 
    split_covariates = split_covariates, id_var = id_var, arm_var = arm_var, 
    visit_var = visit_var, cor_struct = cor_struct)))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '{'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_a_gee(...) at test-tm_a_gee.R:48:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
  </testsuite>
  <testsuite name="tm_a_mmrm" timestamp="2024-02-08T12:05:37Z" hostname="844dd23524bf" tests="10" skipped="5" failures="0" errors="0" time="0.134">
    <testcase time="0.0260000000000002" classname="tm_a_mmrm" name="template_fit_mmrm_works_as_expected_when_not_combining_comparison_arms"/>
    <testcase time="0.036" classname="tm_a_mmrm" name="template_fit_mmrm_works_as_expected_when_not_combining_comparison_arms">
      <skipped message="Reason: On CRAN ('test-tm_a_mmrm.R:16:3')"/>
    </testcase>
    <testcase time="0.0149999999999997" classname="tm_a_mmrm" name="template_fit_mmrm_works_as_expected_when_combining_combination_arms"/>
    <testcase time="0.004" classname="tm_a_mmrm" name="template_fit_mmrm_works_as_expected_when_combining_combination_arms">
      <skipped message="Reason: On CRAN ('test-tm_a_mmrm.R:35:3')"/>
    </testcase>
    <testcase time="0.0140000000000002" classname="tm_a_mmrm" name="template_mmrm_tables_works_as_expected"/>
    <testcase time="0.004" classname="tm_a_mmrm" name="template_mmrm_tables_works_as_expected">
      <skipped message="Reason: On CRAN ('test-tm_a_mmrm.R:51:3')"/>
    </testcase>
    <testcase time="0.0129999999999999" classname="tm_a_mmrm" name="template_mmrm_tables_works_as_expected_when_arm_is_not_considered_in_the_model"/>
    <testcase time="0.004" classname="tm_a_mmrm" name="template_mmrm_tables_works_as_expected_when_arm_is_not_considered_in_the_model">
      <skipped message="Reason: On CRAN ('test-tm_a_mmrm.R:67:3')"/>
    </testcase>
    <testcase time="0.0139999999999998" classname="tm_a_mmrm" name="template_mmrm_plots_works_as_expected"/>
    <testcase time="0.004" classname="tm_a_mmrm" name="template_mmrm_plots_works_as_expected">
      <skipped message="Reason: On CRAN ('test-tm_a_mmrm.R:85:3')"/>
    </testcase>
  </testsuite>
  <testsuite name="tm_g_ci" timestamp="2024-02-08T12:05:37Z" hostname="844dd23524bf" tests="8" skipped="4" failures="0" errors="0" time="0.076">
    <testcase time="0.0170000000000003" classname="tm_g_ci" name="1._and_2._Mean_and_95_CIs_for_mean"/>
    <testcase time="0.004" classname="tm_g_ci" name="1._and_2._Mean_and_95_CIs_for_mean">
      <skipped message="Reason: On CRAN ('test-tm_g_ci.R:12:3')"/>
    </testcase>
    <testcase time="0.0139999999999998" classname="tm_g_ci" name="3._Confidence_Interval_Plot_using_different_stratification_variable_"/>
    <testcase time="0.004" classname="tm_g_ci" name="3._Confidence_Interval_Plot_using_different_stratification_variable_">
      <skipped message="Reason: On CRAN ('test-tm_g_ci.R:27:3')"/>
    </testcase>
    <testcase time="0.0140000000000002" classname="tm_g_ci" name="4._Median_and_95_CIs_for_median"/>
    <testcase time="0.004" classname="tm_g_ci" name="4._Median_and_95_CIs_for_median">
      <skipped message="Reason: On CRAN ('test-tm_g_ci.R:42:3')"/>
    </testcase>
    <testcase time="0.0139999999999998" classname="tm_g_ci" name="5._Using_different_alpha_level"/>
    <testcase time="0.00499999999999989" classname="tm_g_ci" name="5._Using_different_alpha_level">
      <skipped message="Reason: On CRAN ('test-tm_g_ci.R:58:3')"/>
    </testcase>
  </testsuite>
  <testsuite name="tm_g_forest_rsp" timestamp="2024-02-08T12:05:38Z" hostname="844dd23524bf" tests="1" skipped="0" failures="0" errors="1" time="0.02">
    <testcase time="0.02" classname="tm_g_forest_rsp" name="template_forest_rsp_generates_correct_expressions">
      <error type="error" message="Error in `add_expr(data_list, substitute(anl &lt;- anl_list, env = list(anl = as.name(dataname),  ('test-tm_g_forest_rsp.R:2:3')">Error in `add_expr(data_list, substitute(anl &lt;- anl_list, env = list(anl = as.name(dataname), 
    anl_list = pipe_expr(anl_list))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_forest_rsp(...) at test-tm_g_forest_rsp.R:2:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
  </testsuite>
  <testsuite name="tm_g_forest_tte" timestamp="2024-02-08T12:05:38Z" hostname="844dd23524bf" tests="1" skipped="0" failures="0" errors="1" time="0.025">
    <testcase time="0.0249999999999999" classname="tm_g_forest_tte" name="template_forest_tte_generates_correct_expressions">
      <error type="error" message="Error in `add_expr(anl_list, substitute_names(expr = { ('test-tm_g_forest_tte.R:2:3')">Error in `add_expr(anl_list, substitute_names(expr = {
    dplyr::mutate(arm_var = combine_levels(arm_var, comp_arm)) %&gt;% 
        dplyr::mutate(is_event = cnsr_var == 0)
}, names = list(arm_var = as.name(arm_var)), others = list(comp_arm = comp_arm, 
    cnsr_var = as.name(cnsr_var))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '{'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_forest_tte(...) at test-tm_g_forest_tte.R:2:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
  </testsuite>
  <testsuite name="tm_g_ipp" timestamp="2024-02-08T12:05:38Z" hostname="844dd23524bf" tests="2" skipped="0" failures="0" errors="2" time="0.052">
    <testcase time="0.024" classname="tm_g_ipp" name="template_g_ipp_works_as_expected_with_default_arguments">
      <error type="error" message="Error in `add_expr(graph_list, substitute(expr = { ('test-tm_g_ipp.R:2:3')">Error in `add_expr(graph_list, substitute(expr = {
    plot &lt;- h_g_ipp(df = anl, xvar = visit, yvar = aval, xlab = xlab_val, 
        ylab = ylab_val, title = title_val, subtitle = subtitle_val, 
        id_var = id, add_baseline_hline = add_baseline_hline, 
        yvar_baseline = base)
}, env = list(xlab_val = all_ggplot2_args$labs$x, ylab_val = all_ggplot2_args$labs$y, 
    title_val = all_ggplot2_args$labs$title, subtitle_val = all_ggplot2_args$labs$subtitle, 
    paramcd = paramcd, visit = visit_var, aval = aval_var, id = id_var, 
    add_baseline_hline = add_baseline_hline, base = baseline_var, 
    avalu = avalu_var, arm = arm_var)))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '{'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_g_ipp(...) at test-tm_g_ipp.R:2:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.028" classname="tm_g_ipp" name="template_g_ipp_works_as_expected_with_non_default_arguments">
      <error type="error" message="Error in `add_expr(graph_list, substitute(expr = { ('test-tm_g_ipp.R:12:3')">Error in `add_expr(graph_list, substitute(expr = {
    plot &lt;- h_g_ipp(df = anl, xvar = visit, yvar = aval, xlab = xlab_val, 
        ylab = ylab_val, title = title_val, subtitle = subtitle_val, 
        id_var = id, add_baseline_hline = add_baseline_hline, 
        yvar_baseline = base)
}, env = list(xlab_val = all_ggplot2_args$labs$x, ylab_val = all_ggplot2_args$labs$y, 
    title_val = all_ggplot2_args$labs$title, subtitle_val = all_ggplot2_args$labs$subtitle, 
    paramcd = paramcd, visit = visit_var, aval = aval_var, id = id_var, 
    add_baseline_hline = add_baseline_hline, base = baseline_var, 
    avalu = avalu_var, arm = arm_var)))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '{'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_g_ipp(...) at test-tm_g_ipp.R:12:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
  </testsuite>
  <testsuite name="tm_g_km" timestamp="2024-02-08T12:05:38Z" hostname="844dd23524bf" tests="3" skipped="0" failures="0" errors="3" time="0.068">
    <testcase time="0.0260000000000002" classname="tm_g_km" name="template_g_km_works_as_expected_with_default_arguments">
      <error type="error" message="Error in `add_expr(graph_list, substitute(expr = { ('test-tm_g_km.R:2:3')">Error in `add_expr(graph_list, substitute(expr = {
    facets &lt;- droplevels(anl$facet_var)
    anl &lt;- split(anl, f = facets)
}, env = list(facet_var = as.name(facet_var))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '{'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_g_km(comp_arm = c("ARM A", "ARM B")) at test-tm_g_km.R:2:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0209999999999999" classname="tm_g_km" name="template_g_km_gives_correct_data_expression_when_we_want_to_compare_versus_reference_arms">
      <error type="error" message="Error in `add_expr(graph_list, substitute(expr = { ('test-tm_g_km.R:9:3')">Error in `add_expr(graph_list, substitute(expr = {
    facets &lt;- droplevels(anl$facet_var)
    anl &lt;- split(anl, f = facets)
}, env = list(facet_var = as.name(facet_var))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '{'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_g_km(...) at test-tm_g_km.R:9:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0209999999999999" classname="tm_g_km" name="template_g_km_gives_correct_data_expression_when_we_want_to_combine_comparison_arms">
      <error type="error" message="Error in `add_expr(graph_list, substitute(expr = { ('test-tm_g_km.R:20:3')">Error in `add_expr(graph_list, substitute(expr = {
    facets &lt;- droplevels(anl$facet_var)
    anl &lt;- split(anl, f = facets)
}, env = list(facet_var = as.name(facet_var))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '{'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_g_km(...) at test-tm_g_km.R:20:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
  </testsuite>
  <testsuite name="tm_g_lineplot" timestamp="2024-02-08T12:05:38Z" hostname="844dd23524bf" tests="2" skipped="0" failures="0" errors="2" time="0.048">
    <testcase time="0.0250000000000004" classname="tm_g_lineplot" name="template_g_lineplot_works_as_expected_with_default_arguments">
      <error type="error" message="Error in `add_expr(graph_list, substitute(expr = { ('test-tm_g_lineplot.R:2:3')">Error in `add_expr(graph_list, substitute(expr = {
    plot &lt;- plot_call
    plot
}, env = list(plot_call = plot_call)))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '{'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_g_lineplot() at test-tm_g_lineplot.R:2:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0229999999999997" classname="tm_g_lineplot" name="template_g_lineplot_gives_correct_data_expression_with_custom_arguments">
      <error type="error" message="Error in `add_expr(graph_list, substitute(expr = { ('test-tm_g_lineplot.R:9:3')">Error in `add_expr(graph_list, substitute(expr = {
    plot &lt;- plot_call
    plot
}, env = list(plot_call = plot_call)))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '{'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_g_lineplot(...) at test-tm_g_lineplot.R:9:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
  </testsuite>
  <testsuite name="tm_t_abnormality" timestamp="2024-02-08T12:05:38Z" hostname="844dd23524bf" tests="3" skipped="0" failures="0" errors="3" time="0.068">
    <testcase time="0.0260000000000002" classname="tm_t_abnormality" name="template_abnormality_generates_correct_expressions_with_default_arguments">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = anl &lt;- df %&gt;% dplyr::filter(treatment_flag_var ==  ('test-tm_t_abnormality.R:2:3')">Error in `add_expr(data_list, substitute(expr = anl &lt;- df %&gt;% dplyr::filter(treatment_flag_var == 
    treatment_flag &amp; !is.na(grade) &amp; grade != na_level), env = list(df = as.name(dataname), 
    grade = as.name(grade), treatment_flag_var = as.name(treatment_flag_var), 
    treatment_flag = treatment_flag, na_level = na_level)))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_abnormality(...) at test-tm_t_abnormality.R:2:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0209999999999999" classname="tm_t_abnormality" name="template_abnormality_generates_correct_expressions_with_custom_arguments">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = anl &lt;- df %&gt;% dplyr::filter(treatment_flag_var ==  ('test-tm_t_abnormality.R:21:3')">Error in `add_expr(data_list, substitute(expr = anl &lt;- df %&gt;% dplyr::filter(treatment_flag_var == 
    treatment_flag &amp; !is.na(grade) &amp; grade != na_level), env = list(df = as.name(dataname), 
    grade = as.name(grade), treatment_flag_var = as.name(treatment_flag_var), 
    treatment_flag = treatment_flag, na_level = na_level)))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_abnormality(...) at test-tm_t_abnormality.R:21:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0209999999999999" classname="tm_t_abnormality" name="template_abnormality_generates_correct_expressions_with_customized_na_level">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = anl &lt;- df %&gt;% dplyr::filter(treatment_flag_var ==  ('test-tm_t_abnormality.R:43:3')">Error in `add_expr(data_list, substitute(expr = anl &lt;- df %&gt;% dplyr::filter(treatment_flag_var == 
    treatment_flag &amp; !is.na(grade) &amp; grade != na_level), env = list(df = as.name(dataname), 
    grade = as.name(grade), treatment_flag_var = as.name(treatment_flag_var), 
    treatment_flag = treatment_flag, na_level = na_level)))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_abnormality(...) at test-tm_t_abnormality.R:43:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
  </testsuite>
  <testsuite name="tm_t_abnormality_by_worst_grade" timestamp="2024-02-08T12:05:38Z" hostname="844dd23524bf" tests="3" skipped="0" failures="0" errors="3" time="0.102">
    <testcase time="0.0249999999999999" classname="tm_t_abnormality_by_worst_grade" name="template_abnormality_by_worst_grade_generates_correct_expressions_with_default_arguments">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = anl_labels &lt;- formatters::var_labels(df,  ('test-tm_t_abnormality_by_worst_grade.R:2:3')">Error in `add_expr(data_list, substitute(expr = anl_labels &lt;- formatters::var_labels(df, 
    fill = FALSE), env = list(df = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_abnormality_by_worst_grade(...) at test-tm_t_abnormality_by_worst_grade.R:2:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0210000000000004" classname="tm_t_abnormality_by_worst_grade" name="template_abnormality_by_worst_grade_generates_correct_expressions_with_custom_arguments">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = anl_labels &lt;- formatters::var_labels(df,  ('test-tm_t_abnormality_by_worst_grade.R:21:3')">Error in `add_expr(data_list, substitute(expr = anl_labels &lt;- formatters::var_labels(df, 
    fill = FALSE), env = list(df = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_abnormality_by_worst_grade(...) at test-tm_t_abnormality_by_worst_grade.R:21:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.056" classname="tm_t_abnormality_by_worst_grade" name="template_abnormality_by_worst_grade_throws_an_error_when_ATOXGR_contains_NA_values">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = anl_labels &lt;- formatters::var_labels(df,  ('test-tm_t_abnormality_by_worst_grade.R:44:3')">Error in `add_expr(data_list, substitute(expr = anl_labels &lt;- formatters::var_labels(df, 
    fill = FALSE), env = list(df = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_abnormality_by_worst_grade(...) at test-tm_t_abnormality_by_worst_grade.R:44:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
  </testsuite>
  <testsuite name="tm_t_ancova" timestamp="2024-02-08T12:05:38Z" hostname="844dd23524bf" tests="7" skipped="0" failures="0" errors="7" time="0.162">
    <testcase time="0.0269999999999997" classname="tm_t_ancova" name="template_ancova_generates_expressions_with_multiple_endpoints">
      <error type="error" message="Error in `add_expr(data_list, substitute(anl &lt;- anl_list, env = list(anl = as.name(dataname),  ('test-tm_t_ancova.R:2:3')">Error in `add_expr(data_list, substitute(anl &lt;- anl_list, env = list(anl = as.name(dataname), 
    anl_list = pipe_expr(anl_list))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_ancova(...) at test-tm_t_ancova.R:2:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0230000000000001" classname="tm_t_ancova" name="template_ancova_generates_expressions_with_multiple_endpoints_with_combined_comparison_arms">
      <error type="error" message="Error in `add_expr(data_list, substitute(anl &lt;- anl_list, env = list(anl = as.name(dataname),  ('test-tm_t_ancova.R:24:3')">Error in `add_expr(data_list, substitute(anl &lt;- anl_list, env = list(anl = as.name(dataname), 
    anl_list = pipe_expr(anl_list))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_ancova(...) at test-tm_t_ancova.R:24:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0230000000000001" classname="tm_t_ancova" name="template_ancova_generates_expressions_with_multiple_endpoints_with_combined_reference_arms">
      <error type="error" message="Error in `add_expr(data_list, substitute(anl &lt;- anl_list, env = list(anl = as.name(dataname),  ('test-tm_t_ancova.R:46:3')">Error in `add_expr(data_list, substitute(anl &lt;- anl_list, env = list(anl = as.name(dataname), 
    anl_list = pipe_expr(anl_list))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_ancova(...) at test-tm_t_ancova.R:46:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0219999999999998" classname="tm_t_ancova" name="template_ancova_generates_expressions_with_single_endpoint">
      <error type="error" message="Error in `add_expr(data_list, substitute(anl &lt;- anl_list, env = list(anl = as.name(dataname),  ('test-tm_t_ancova.R:68:3')">Error in `add_expr(data_list, substitute(anl &lt;- anl_list, env = list(anl = as.name(dataname), 
    anl_list = pipe_expr(anl_list))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_ancova(...) at test-tm_t_ancova.R:68:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0220000000000002" classname="tm_t_ancova" name="template_ancova_generates_expressions_with_multiple_endpoints">
      <error type="error" message="Error in `add_expr(data_list, substitute(anl &lt;- anl_list, env = list(anl = as.name(dataname),  ('test-tm_t_ancova.R:90:3')">Error in `add_expr(data_list, substitute(anl &lt;- anl_list, env = list(anl = as.name(dataname), 
    anl_list = pipe_expr(anl_list))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_ancova(...) at test-tm_t_ancova.R:90:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0229999999999997" classname="tm_t_ancova" name="template_ancova_generates_expressions_with_discrete_interaction_variable">
      <error type="error" message="Error in `add_expr(data_list, substitute(anl &lt;- anl_list, env = list(anl = as.name(dataname),  ('test-tm_t_ancova.R:115:3')">Error in `add_expr(data_list, substitute(anl &lt;- anl_list, env = list(anl = as.name(dataname), 
    anl_list = pipe_expr(anl_list))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_ancova(...) at test-tm_t_ancova.R:115:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0220000000000002" classname="tm_t_ancova" name="template_ancova_generates_expressions_with_continuous_interaction_variable">
      <error type="error" message="Error in `add_expr(data_list, substitute(anl &lt;- anl_list, env = list(anl = as.name(dataname),  ('test-tm_t_ancova.R:140:3')">Error in `add_expr(data_list, substitute(anl &lt;- anl_list, env = list(anl = as.name(dataname), 
    anl_list = pipe_expr(anl_list))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_ancova(...) at test-tm_t_ancova.R:140:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
  </testsuite>
  <testsuite name="tm_t_binary_outcome" timestamp="2024-02-08T12:05:38Z" hostname="844dd23524bf" tests="16" skipped="8" failures="0" errors="0" time="0.176">
    <testcase time="0.0269999999999997" classname="tm_t_binary_outcome" name="template_binary_outcome_generates_standard_expressions"/>
    <testcase time="0.004" classname="tm_t_binary_outcome" name="template_binary_outcome_generates_standard_expressions">
      <skipped message="Reason: On CRAN ('test-tm_t_binary_outcome.R:16:3')"/>
    </testcase>
    <testcase time="0.016" classname="tm_t_binary_outcome" name="template_binary_outcome_generates_right_expressions_with_non_default"/>
    <testcase time="0.00500000000000034" classname="tm_t_binary_outcome" name="template_binary_outcome_generates_right_expressions_with_non_default">
      <skipped message="Reason: On CRAN ('test-tm_t_binary_outcome.R:35:3')"/>
    </testcase>
    <testcase time="0.016" classname="tm_t_binary_outcome" name="template_binary_outcome_generates_expression_without_arm_comparison"/>
    <testcase time="0.004" classname="tm_t_binary_outcome" name="template_binary_outcome_generates_expression_without_arm_comparison">
      <skipped message="Reason: On CRAN ('test-tm_t_binary_outcome.R:52:3')"/>
    </testcase>
    <testcase time="0.0169999999999999" classname="tm_t_binary_outcome" name="template_binary_outcome_generates_expression_with_non_default_controls_and_strata."/>
    <testcase time="0.0089999999999999" classname="tm_t_binary_outcome" name="template_binary_outcome_generates_expression_with_non_default_controls_and_strata.">
      <skipped message="Reason: On CRAN ('test-tm_t_binary_outcome.R:76:3')"/>
    </testcase>
    <testcase time="0.016" classname="tm_t_binary_outcome" name="template_binary_outcome_can_combine_comparison_arms"/>
    <testcase time="0.00499999999999989" classname="tm_t_binary_outcome" name="template_binary_outcome_can_combine_comparison_arms">
      <skipped message="Reason: On CRAN ('test-tm_t_binary_outcome.R:94:3')"/>
    </testcase>
    <testcase time="0.0150000000000001" classname="tm_t_binary_outcome" name="template_binary_outcome_can_combine_comparison_arms_when_compare_arms_is_FALSE"/>
    <testcase time="0.00499999999999989" classname="tm_t_binary_outcome" name="template_binary_outcome_can_combine_comparison_arms_when_compare_arms_is_FALSE">
      <skipped message="Reason: On CRAN ('test-tm_t_binary_outcome.R:112:3')"/>
    </testcase>
    <testcase time="0.0129999999999999" classname="tm_t_binary_outcome" name="split_col_expr_prepare_the_right_four_possible_expressions"/>
    <testcase time="0.004" classname="tm_t_binary_outcome" name="split_col_expr_prepare_the_right_four_possible_expressions">
      <skipped message="Reason: On CRAN ('test-tm_t_binary_outcome.R:124:3')"/>
    </testcase>
    <testcase time="0.016" classname="tm_t_binary_outcome" name="template_binary_outcome_can_combine_refs"/>
    <testcase time="0.004" classname="tm_t_binary_outcome" name="template_binary_outcome_can_combine_refs">
      <skipped message="Reason: On CRAN ('test-tm_t_binary_outcome.R:141:3')"/>
    </testcase>
  </testsuite>
  <testsuite name="tm_t_coxreg" timestamp="2024-02-08T12:05:38Z" hostname="844dd23524bf" tests="3" skipped="0" failures="0" errors="3" time="0.065">
    <testcase time="0.0210000000000004" classname="tm_t_coxreg" name="template_coxreg_generates_correct_univariate_cox_regression_expressions">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = anl &lt;- data_pipe, env = list(data_pipe = pipe_expr(data_pipe))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'. ('test-tm_t_coxreg.R:2:3')">Error in `add_expr(data_list, substitute(expr = anl &lt;- data_pipe, env = list(data_pipe = pipe_expr(data_pipe))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_coxreg_u(...) at test-tm_t_coxreg.R:2:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0219999999999998" classname="tm_t_coxreg" name="template_coxreg_generates_correct_univariate_cox_regression_expressions_with_interactions">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = anl &lt;- data_pipe, env = list(data_pipe = pipe_expr(data_pipe))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'. ('test-tm_t_coxreg.R:25:3')">Error in `add_expr(data_list, substitute(expr = anl &lt;- data_pipe, env = list(data_pipe = pipe_expr(data_pipe))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_coxreg_u(...) at test-tm_t_coxreg.R:25:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0219999999999998" classname="tm_t_coxreg" name="template_coxreg_generates_correct_multivariate_cox_regression_expressions">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = anl &lt;- data_pipe, env = list(data_pipe = pipe_expr(data_pipe))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'. ('test-tm_t_coxreg.R:49:3')">Error in `add_expr(data_list, substitute(expr = anl &lt;- data_pipe, env = list(data_pipe = pipe_expr(data_pipe))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_coxreg_m(...) at test-tm_t_coxreg.R:49:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
  </testsuite>
  <testsuite name="tm_t_events" timestamp="2024-02-08T12:05:38Z" hostname="844dd23524bf" tests="6" skipped="0" failures="0" errors="6" time="0.134">
    <testcase time="0.0260000000000002" classname="tm_t_events" name="template_events_generates_correct_expressions">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = anl &lt;- df, env = list(df = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'. ('test-tm_t_events.R:2:3')">Error in `add_expr(data_list, substitute(expr = anl &lt;- df, env = list(df = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_events(...) at test-tm_t_events.R:2:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0209999999999999" classname="tm_t_events" name="template_events_generates_correct_expressions_for_nested_columns">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = anl &lt;- df, env = list(df = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'. ('test-tm_t_events.R:19:3')">Error in `add_expr(data_list, substitute(expr = anl &lt;- df, env = list(df = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_events(...) at test-tm_t_events.R:19:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0209999999999999" classname="tm_t_events" name="template_events_can_generate_customized_table">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = anl &lt;- df, env = list(df = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'. ('test-tm_t_events.R:36:3')">Error in `add_expr(data_list, substitute(expr = anl &lt;- df, env = list(df = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_events(...) at test-tm_t_events.R:36:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.02" classname="tm_t_events" name="template_events_can_generate_customized_table_with_alphabetical_sorting">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = anl &lt;- df, env = list(df = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'. ('test-tm_t_events.R:54:3')">Error in `add_expr(data_list, substitute(expr = anl &lt;- df, env = list(df = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_events(...) at test-tm_t_events.R:54:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0210000000000004" classname="tm_t_events" name="template_events_can_generate_customized_table_with_pruning">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = anl &lt;- df, env = list(df = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'. ('test-tm_t_events.R:73:3')">Error in `add_expr(data_list, substitute(expr = anl &lt;- df, env = list(df = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_events(...) at test-tm_t_events.R:73:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0249999999999999" classname="tm_t_events" name="template_events_can_generate_customized_table_with_pruning_for_nested_column">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = anl &lt;- df, env = list(df = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'. ('test-tm_t_events.R:93:3')">Error in `add_expr(data_list, substitute(expr = anl &lt;- df, env = list(df = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_events(...) at test-tm_t_events.R:93:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
  </testsuite>
  <testsuite name="tm_t_events_by_grade" timestamp="2024-02-08T12:05:38Z" hostname="844dd23524bf" tests="8" skipped="0" failures="0" errors="8" time="0.173">
    <testcase time="0.0269999999999997" classname="tm_t_events_by_grade" name="template_events_by_grade_generates_standard_expressions">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = anl &lt;- dataname, env = list(dataname = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'. ('test-tm_t_events_by_grade.R:2:3')">Error in `add_expr(data_list, substitute(expr = anl &lt;- dataname, env = list(dataname = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_events_by_grade(...) at test-tm_t_events_by_grade.R:2:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0210000000000004" classname="tm_t_events_by_grade" name="template_events_by_grade_generates_standard_expressions_with_pruning_conditions">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = anl &lt;- dataname, env = list(dataname = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'. ('test-tm_t_events_by_grade.R:21:3')">Error in `add_expr(data_list, substitute(expr = anl &lt;- dataname, env = list(dataname = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_events_by_grade(...) at test-tm_t_events_by_grade.R:21:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0209999999999999" classname="tm_t_events_by_grade" name="template_events_by_grade_without_adding_total_column_option_works_as_expected">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = anl &lt;- dataname, env = list(dataname = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'. ('test-tm_t_events_by_grade.R:42:3')">Error in `add_expr(data_list, substitute(expr = anl &lt;- dataname, env = list(dataname = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_events_by_grade(...) at test-tm_t_events_by_grade.R:42:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0209999999999999" classname="tm_t_events_by_grade" name="template_events_by_grade_with_hlt_only_works">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = anl &lt;- dataname, env = list(dataname = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'. ('test-tm_t_events_by_grade.R:61:3')">Error in `add_expr(data_list, substitute(expr = anl &lt;- dataname, env = list(dataname = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_events_by_grade(...) at test-tm_t_events_by_grade.R:61:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0209999999999999" classname="tm_t_events_by_grade" name="template_events_col_by_grade_generates_standard_expressions">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = anl &lt;- df, env = list(df = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'. ('test-tm_t_events_by_grade.R:80:3')">Error in `add_expr(data_list, substitute(expr = anl &lt;- df, env = list(df = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_events_col_by_grade(...) at test-tm_t_events_by_grade.R:80:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0209999999999999" classname="tm_t_events_by_grade" name="template_events_col_by_grade_works_with_custom_values">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = anl &lt;- df, env = list(df = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'. ('test-tm_t_events_by_grade.R:99:3')">Error in `add_expr(data_list, substitute(expr = anl &lt;- df, env = list(df = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_events_col_by_grade(...) at test-tm_t_events_by_grade.R:99:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0210000000000004" classname="tm_t_events_by_grade" name="template_events_col_by_grade_without_adding_total_column_option_works_as_expected">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = anl &lt;- df, env = list(df = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'. ('test-tm_t_events_by_grade.R:118:3')">Error in `add_expr(data_list, substitute(expr = anl &lt;- df, env = list(df = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_events_col_by_grade(...) at test-tm_t_events_by_grade.R:118:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.02" classname="tm_t_events_by_grade" name="template_events_col_by_grade_without_dropping_arm_levels_option_works_as_expected">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = anl &lt;- df, env = list(df = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'. ('test-tm_t_events_by_grade.R:137:3')">Error in `add_expr(data_list, substitute(expr = anl &lt;- df, env = list(df = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_events_col_by_grade(...) at test-tm_t_events_by_grade.R:137:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
  </testsuite>
  <testsuite name="tm_t_events_patyear" timestamp="2024-02-08T12:05:39Z" hostname="844dd23524bf" tests="3" skipped="0" failures="0" errors="3" time="0.07">
    <testcase time="0.024" classname="tm_t_events_patyear" name="template_events_patyear_generates_standard_expressions">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = anl &lt;- df, env = list(df = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'. ('test-tm_t_events_patyear.R:2:3')">Error in `add_expr(data_list, substitute(expr = anl &lt;- df, env = list(df = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_events_patyear(...) at test-tm_t_events_patyear.R:2:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0209999999999999" classname="tm_t_events_patyear" name="template_events_patyear_generates_right_expressions_with_non_default">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = anl &lt;- df, env = list(df = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'. ('test-tm_t_events_patyear.R:19:3')">Error in `add_expr(data_list, substitute(expr = anl &lt;- df, env = list(df = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_events_patyear(...) at test-tm_t_events_patyear.R:19:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0249999999999999" classname="tm_t_events_patyear" name="template_events_patyear_generates_right_expressions_with_non_default_controls">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = anl &lt;- df, env = list(df = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'. ('test-tm_t_events_patyear.R:36:3')">Error in `add_expr(data_list, substitute(expr = anl &lt;- df, env = list(df = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_events_patyear(...) at test-tm_t_events_patyear.R:36:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
  </testsuite>
  <testsuite name="tm_t_events_summary" timestamp="2024-02-08T12:05:39Z" hostname="844dd23524bf" tests="2" skipped="0" failures="0" errors="2" time="0.047">
    <testcase time="0.0249999999999999" classname="tm_t_events_summary" name="template_events_summary_generates_minimal_table">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = anl &lt;- anl_name, env = list(anl_name = as.name(anl_name))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'. ('test-tm_t_events_summary.R:2:3')">Error in `add_expr(data_list, substitute(expr = anl &lt;- anl_name, env = list(anl_name = as.name(anl_name))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_events_summary(...) at test-tm_t_events_summary.R:2:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0220000000000002" classname="tm_t_events_summary" name="template_events_summary_generates_table_with_multiple_flags">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = anl &lt;- anl_name, env = list(anl_name = as.name(anl_name))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'. ('test-tm_t_events_summary.R:13:3')">Error in `add_expr(data_list, substitute(expr = anl &lt;- anl_name, env = list(anl_name = as.name(anl_name))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_events_summary(...) at test-tm_t_events_summary.R:13:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
  </testsuite>
  <testsuite name="tm_t_exposure" timestamp="2024-02-08T12:05:39Z" hostname="844dd23524bf" tests="3" skipped="0" failures="0" errors="3" time="0.066">
    <testcase time="0.024" classname="tm_t_exposure" name="template_exposure_generates_correct_expressions_with_default_arguments">
      <error type="error" message="Error in `add_expr(data_list, substitute(anl &lt;- dataname, env = list(dataname = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'. ('test-tm_t_exposure.R:2:3')">Error in `add_expr(data_list, substitute(anl &lt;- dataname, env = list(dataname = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_exposure(...) at test-tm_t_exposure.R:2:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0209999999999999" classname="tm_t_exposure" name="template_exposure_generates_correct_expressions_with_custom_arguments">
      <error type="error" message="Error in `add_expr(data_list, substitute(anl &lt;- dataname, env = list(dataname = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'. ('test-tm_t_exposure.R:21:3')">Error in `add_expr(data_list, substitute(anl &lt;- dataname, env = list(dataname = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_exposure(...) at test-tm_t_exposure.R:21:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0209999999999999" classname="tm_t_exposure" name="template_exposure_generates_correct_expressions_with_paramcd_label">
      <error type="error" message="Error in `add_expr(data_list, substitute(anl &lt;- dataname, env = list(dataname = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'. ('test-tm_t_exposure.R:40:3')">Error in `add_expr(data_list, substitute(anl &lt;- dataname, env = list(dataname = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_exposure(...) at test-tm_t_exposure.R:40:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
  </testsuite>
  <testsuite name="tm_t_logisitic" timestamp="2024-02-08T12:05:39Z" hostname="844dd23524bf" tests="3" skipped="0" failures="0" errors="3" time="0.068">
    <testcase time="0.0249999999999999" classname="tm_t_logisitic" name="template_logistic_generates_correct_expressions">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = ANL &lt;- data_pipe, env = list(data_pipe = pipe_expr(data_pipe))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'. ('test-tm_t_logisitic.R:2:3')">Error in `add_expr(data_list, substitute(expr = ANL &lt;- data_pipe, env = list(data_pipe = pipe_expr(data_pipe))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_logistic(...) at test-tm_t_logisitic.R:2:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0209999999999999" classname="tm_t_logisitic" name="template_logistic_generates_correct_expressions_for_no_arm_variable">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = ANL &lt;- df %&gt;% dplyr::mutate(Response = aval_var %in%  ('test-tm_t_logisitic.R:23:3')">Error in `add_expr(data_list, substitute(expr = ANL &lt;- df %&gt;% dplyr::mutate(Response = aval_var %in% 
    responder_val) %&gt;% df_explicit_na(na_level = "_NA_"), env = list(df = as.name("ANL"), 
    aval_var = as.name(aval_var), responder_val = responder_val)))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_logistic(...) at test-tm_t_logisitic.R:23:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0220000000000002" classname="tm_t_logisitic" name="template_logistic_generates_correct_expressions">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = ANL &lt;- data_pipe, env = list(data_pipe = pipe_expr(data_pipe))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'. ('test-tm_t_logisitic.R:42:3')">Error in `add_expr(data_list, substitute(expr = ANL &lt;- data_pipe, env = list(data_pipe = pipe_expr(data_pipe))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_logistic(...) at test-tm_t_logisitic.R:42:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
  </testsuite>
  <testsuite name="tm_t_mult_events" timestamp="2024-02-08T12:05:39Z" hostname="844dd23524bf" tests="6" skipped="0" failures="0" errors="6" time="0.136">
    <testcase time="0.0250000000000004" classname="tm_t_mult_events" name="template_mult_events_generates_correct_expressions_with_1_HLT_parameter">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = anl &lt;- df, env = list(df = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'. ('test-tm_t_mult_events.R:2:3')">Error in `add_expr(data_list, substitute(expr = anl &lt;- df, env = list(df = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_mult_events(...) at test-tm_t_mult_events.R:2:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0209999999999999" classname="tm_t_mult_events" name="template_mult_events_generates_correct_expressions_with_2_HLT_parameters_and_drop_arm_levels_FALSE">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = anl &lt;- df, env = list(df = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'. ('test-tm_t_mult_events.R:21:5')">Error in `add_expr(data_list, substitute(expr = anl &lt;- df, env = list(df = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_mult_events(...) at test-tm_t_mult_events.R:21:5
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0199999999999996" classname="tm_t_mult_events" name="template_mult_events_generates_correct_expressions_with_3_HLT_parameters">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = anl &lt;- df, env = list(df = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'. ('test-tm_t_mult_events.R:39:3')">Error in `add_expr(data_list, substitute(expr = anl &lt;- df, env = list(df = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_mult_events(...) at test-tm_t_mult_events.R:39:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0259999999999998" classname="tm_t_mult_events" name="template_mult_events_generates_correct_expressions_with_4_HLT_parameters">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = anl &lt;- df, env = list(df = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'. ('test-tm_t_mult_events.R:56:3')">Error in `add_expr(data_list, substitute(expr = anl &lt;- df, env = list(df = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_mult_events(...) at test-tm_t_mult_events.R:56:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0220000000000002" classname="tm_t_mult_events" name="template_mult_events_generates_correct_expressions_with_no_HLT_parameters">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = anl &lt;- df, env = list(df = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'. ('test-tm_t_mult_events.R:73:3')">Error in `add_expr(data_list, substitute(expr = anl &lt;- df, env = list(df = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_mult_events(...) at test-tm_t_mult_events.R:73:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0220000000000002" classname="tm_t_mult_events" name="template_mult_events_generates_correct_expressions_with_1_HLT_parameter_and_without_All_Patients_column">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = anl &lt;- df, env = list(df = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'. ('test-tm_t_mult_events.R:92:5')">Error in `add_expr(data_list, substitute(expr = anl &lt;- df, env = list(df = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_mult_events(...) at test-tm_t_mult_events.R:92:5
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
  </testsuite>
  <testsuite name="tm_t_pp_medical_history" timestamp="2024-02-08T12:05:39Z" hostname="844dd23524bf" tests="3" skipped="0" failures="0" errors="3" time="0.075">
    <testcase time="0.0249999999999995" classname="tm_t_pp_medical_history" name="template_medical_history_outputs_a_list_with_one_named_element">
      <error type="error" message="Error in `add_expr(list(), substitute(expr = { ('test-tm_t_pp_medical_history.R:2:3')">Error in `add_expr(list(), substitute(expr = {
    labels &lt;- formatters::var_labels(dataname, fill = FALSE)[c(mhbodsys_char, 
        mhterm_char, mhdistat_char)]
    mhbodsys_label &lt;- labels[mhbodsys_char]
    result_raw &lt;- dataname %&gt;% dplyr::select(mhbodsys, mhterm, 
        mhdistat) %&gt;% dplyr::arrange(mhbodsys) %&gt;% dplyr::mutate_if(is.character, 
        as.factor) %&gt;% dplyr::mutate_if(is.factor, function(x) explicit_na(x, 
        "UNKNOWN")) %&gt;% dplyr::distinct() %&gt;% `colnames&lt;-`(labels)
    result &lt;- rtables::basic_table() %&gt;% rtables::split_cols_by_multivar(colnames(result_raw)[2:3]) %&gt;% 
        rtables::split_rows_by(colnames(result_raw)[1], split_fun = rtables::drop_split_levels) %&gt;% 
        rtables::split_rows_by(colnames(result_raw)[2], split_fun = rtables::drop_split_levels, 
            child_labels = "hidden") %&gt;% rtables::analyze_colvars(function(x) x[seq_along(x)]) %&gt;% 
        rtables::build_table(result_raw)
    main_title(result) &lt;- paste("Patient ID:", patient_id)
    result
}, env = list(dataname = as.name(dataname), mhbodsys = as.name(mhbodsys), 
    mhterm = as.name(mhterm), mhdistat = as.name(mhdistat), mhbodsys_char = mhbodsys, 
    mhterm_char = mhterm, mhdistat_char = mhdistat, patient_id = patient_id)))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '{'.
Backtrace:
     x
  1. +-testthat::expect_silent(...) at test-tm_t_pp_medical_history.R:2:3
  2. | \-testthat:::quasi_capture(enquo(object), NULL, evaluate_promise)
  3. |   +-testthat (local) .capture(...)
  4. |   | +-withr::with_output_sink(...)
  5. |   | | \-base::force(code)
  6. |   | +-base::withCallingHandlers(...)
  7. |   | \-base::withVisible(code)
  8. |   \-rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
  9. \-teal.modules.clinical:::template_medical_history(...)
 10.   \-teal.modules.clinical::add_expr(...)
 11.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 12.       \-checkmate::makeAssertion(x, res, .var.name, add)
 13.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0250000000000004" classname="tm_t_pp_medical_history" name="template_medical_history_s_output_has_element_table_which_is_of_class_call">
      <error type="error" message="Error in `add_expr(list(), substitute(expr = { ('test-tm_t_pp_medical_history.R:9:3')">Error in `add_expr(list(), substitute(expr = {
    labels &lt;- formatters::var_labels(dataname, fill = FALSE)[c(mhbodsys_char, 
        mhterm_char, mhdistat_char)]
    mhbodsys_label &lt;- labels[mhbodsys_char]
    result_raw &lt;- dataname %&gt;% dplyr::select(mhbodsys, mhterm, 
        mhdistat) %&gt;% dplyr::arrange(mhbodsys) %&gt;% dplyr::mutate_if(is.character, 
        as.factor) %&gt;% dplyr::mutate_if(is.factor, function(x) explicit_na(x, 
        "UNKNOWN")) %&gt;% dplyr::distinct() %&gt;% `colnames&lt;-`(labels)
    result &lt;- rtables::basic_table() %&gt;% rtables::split_cols_by_multivar(colnames(result_raw)[2:3]) %&gt;% 
        rtables::split_rows_by(colnames(result_raw)[1], split_fun = rtables::drop_split_levels) %&gt;% 
        rtables::split_rows_by(colnames(result_raw)[2], split_fun = rtables::drop_split_levels, 
            child_labels = "hidden") %&gt;% rtables::analyze_colvars(function(x) x[seq_along(x)]) %&gt;% 
        rtables::build_table(result_raw)
    main_title(result) &lt;- paste("Patient ID:", patient_id)
    result
}, env = list(dataname = as.name(dataname), mhbodsys = as.name(mhbodsys), 
    mhterm = as.name(mhterm), mhdistat = as.name(mhdistat), mhbodsys_char = mhbodsys, 
    mhterm_char = mhterm, mhdistat_char = mhdistat, patient_id = patient_id)))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '{'.
Backtrace:
     x
  1. +-testthat::expect_silent(...) at test-tm_t_pp_medical_history.R:9:3
  2. | \-testthat:::quasi_capture(enquo(object), NULL, evaluate_promise)
  3. |   +-testthat (local) .capture(...)
  4. |   | +-withr::with_output_sink(...)
  5. |   | | \-base::force(code)
  6. |   | +-base::withCallingHandlers(...)
  7. |   | \-base::withVisible(code)
  8. |   \-rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
  9. \-teal.modules.clinical:::template_medical_history(...)
 10.   \-teal.modules.clinical::add_expr(...)
 11.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 12.       \-checkmate::makeAssertion(x, res, .var.name, add)
 13.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0250000000000004" classname="tm_t_pp_medical_history" name="template_medical_history_non_default_parameters">
      <error type="error" message="Error in `add_expr(list(), substitute(expr = { ('test-tm_t_pp_medical_history.R:14:3')">Error in `add_expr(list(), substitute(expr = {
    labels &lt;- formatters::var_labels(dataname, fill = FALSE)[c(mhbodsys_char, 
        mhterm_char, mhdistat_char)]
    mhbodsys_label &lt;- labels[mhbodsys_char]
    result_raw &lt;- dataname %&gt;% dplyr::select(mhbodsys, mhterm, 
        mhdistat) %&gt;% dplyr::arrange(mhbodsys) %&gt;% dplyr::mutate_if(is.character, 
        as.factor) %&gt;% dplyr::mutate_if(is.factor, function(x) explicit_na(x, 
        "UNKNOWN")) %&gt;% dplyr::distinct() %&gt;% `colnames&lt;-`(labels)
    result &lt;- rtables::basic_table() %&gt;% rtables::split_cols_by_multivar(colnames(result_raw)[2:3]) %&gt;% 
        rtables::split_rows_by(colnames(result_raw)[1], split_fun = rtables::drop_split_levels) %&gt;% 
        rtables::split_rows_by(colnames(result_raw)[2], split_fun = rtables::drop_split_levels, 
            child_labels = "hidden") %&gt;% rtables::analyze_colvars(function(x) x[seq_along(x)]) %&gt;% 
        rtables::build_table(result_raw)
    main_title(result) &lt;- paste("Patient ID:", patient_id)
    result
}, env = list(dataname = as.name(dataname), mhbodsys = as.name(mhbodsys), 
    mhterm = as.name(mhterm), mhdistat = as.name(mhdistat), mhbodsys_char = mhbodsys, 
    mhterm_char = mhterm, mhdistat_char = mhdistat, patient_id = patient_id)))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '{'.
Backtrace:
     x
  1. +-testthat::expect_silent(...) at test-tm_t_pp_medical_history.R:14:3
  2. | \-testthat:::quasi_capture(enquo(object), NULL, evaluate_promise)
  3. |   +-testthat (local) .capture(...)
  4. |   | +-withr::with_output_sink(...)
  5. |   | | \-base::force(code)
  6. |   | +-base::withCallingHandlers(...)
  7. |   | \-base::withVisible(code)
  8. |   \-rlang::eval_bare(quo_get_expr(.quo), quo_get_env(.quo))
  9. \-teal.modules.clinical:::template_medical_history(...)
 10.   \-teal.modules.clinical::add_expr(...)
 11.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 12.       \-checkmate::makeAssertion(x, res, .var.name, add)
 13.         \-checkmate:::mstop(...)</error>
    </testcase>
  </testsuite>
  <testsuite name="tm_t_shift_by_arm" timestamp="2024-02-08T12:05:39Z" hostname="844dd23524bf" tests="3" skipped="0" failures="0" errors="3" time="0.07">
    <testcase time="0.0279999999999996" classname="tm_t_shift_by_arm" name="template_shift_by_arm_generates_correct_expressions_with_default_arguments">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = parentname &lt;- df_explicit_na(parentname,  ('test-tm_t_shift_by_arm.R:2:3')">Error in `add_expr(data_list, substitute(expr = parentname &lt;- df_explicit_na(parentname, 
    na_level = na_str), env = list(parentname = as.name(parentname), 
    na_str = na_level)))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_shift_by_arm(...) at test-tm_t_shift_by_arm.R:2:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0209999999999999" classname="tm_t_shift_by_arm" name="template_shift_by_arm_generates_correct_expressions_with_add_total_being_TRUE">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = parentname &lt;- df_explicit_na(parentname,  ('test-tm_t_shift_by_arm.R:18:3')">Error in `add_expr(data_list, substitute(expr = parentname &lt;- df_explicit_na(parentname, 
    na_level = na_str), env = list(parentname = as.name(parentname), 
    na_str = na_level)))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_shift_by_arm(...) at test-tm_t_shift_by_arm.R:18:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0209999999999999" classname="tm_t_shift_by_arm" name="template_shift_by_arm_generates_correct_expressions_with_na.rm_being_TRUE">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = parentname &lt;- df_explicit_na(parentname,  ('test-tm_t_shift_by_arm.R:35:3')">Error in `add_expr(data_list, substitute(expr = parentname &lt;- df_explicit_na(parentname, 
    na_level = na_str), env = list(parentname = as.name(parentname), 
    na_str = na_level)))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_shift_by_arm(...) at test-tm_t_shift_by_arm.R:35:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
  </testsuite>
  <testsuite name="tm_t_shift_by_arm_by_worst" timestamp="2024-02-08T12:05:39Z" hostname="844dd23524bf" tests="3" skipped="0" failures="0" errors="3" time="0.071">
    <testcase time="0.024" classname="tm_t_shift_by_arm_by_worst" name="template_shift_by_arm_generates_correct_expressions_with_default_arguments">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = parentname &lt;- df_explicit_na(parentname,  ('test-tm_t_shift_by_arm_by_worst.R:2:3')">Error in `add_expr(data_list, substitute(expr = parentname &lt;- df_explicit_na(parentname, 
    na_level = na_str), env = list(parentname = as.name(parentname), 
    na_str = na_level)))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_shift_by_arm_by_worst(...) at test-tm_t_shift_by_arm_by_worst.R:2:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0259999999999998" classname="tm_t_shift_by_arm_by_worst" name="template_shift_by_arm_generates_correct_expressions_with_add_total_being_TRUE">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = parentname &lt;- df_explicit_na(parentname,  ('test-tm_t_shift_by_arm_by_worst.R:19:3')">Error in `add_expr(data_list, substitute(expr = parentname &lt;- df_explicit_na(parentname, 
    na_level = na_str), env = list(parentname = as.name(parentname), 
    na_str = na_level)))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_shift_by_arm_by_worst(...) at test-tm_t_shift_by_arm_by_worst.R:19:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0210000000000008" classname="tm_t_shift_by_arm_by_worst" name="template_shift_by_arm_generates_correct_expressions_with_na.rm_being_TRUE">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = parentname &lt;- df_explicit_na(parentname,  ('test-tm_t_shift_by_arm_by_worst.R:37:3')">Error in `add_expr(data_list, substitute(expr = parentname &lt;- df_explicit_na(parentname, 
    na_level = na_str), env = list(parentname = as.name(parentname), 
    na_str = na_level)))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_shift_by_arm_by_worst(...) at test-tm_t_shift_by_arm_by_worst.R:37:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
  </testsuite>
  <testsuite name="tm_t_shift_by_grade" timestamp="2024-02-08T12:05:39Z" hostname="844dd23524bf" tests="4" skipped="0" failures="0" errors="3" time="0.106">
    <testcase time="0.0249999999999995" classname="tm_t_shift_by_grade" name="template_shift_by_grade_generates_correct_expressions_with_default_arguments">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = anl &lt;- df %&gt;% dplyr::filter(worst_flag_var ==  ('test-tm_t_shift_by_grade.R:2:3')">Error in `add_expr(data_list, substitute(expr = anl &lt;- df %&gt;% dplyr::filter(worst_flag_var == 
    worst_flag_indicator), env = list(df = as.name(dataname), 
    worst_flag_var = as.name(worst_flag_var), worst_flag_indicator = worst_flag_indicator)))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_shift_by_grade(...) at test-tm_t_shift_by_grade.R:2:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0209999999999999" classname="tm_t_shift_by_grade" name="template_shift_by_grade_generates_correct_expressions_with_custom_arguments">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = anl &lt;- df %&gt;% dplyr::filter(worst_flag_var ==  ('test-tm_t_shift_by_grade.R:24:3')">Error in `add_expr(data_list, substitute(expr = anl &lt;- df %&gt;% dplyr::filter(worst_flag_var == 
    worst_flag_indicator), env = list(df = as.name(dataname), 
    worst_flag_var = as.name(worst_flag_var), worst_flag_indicator = worst_flag_indicator)))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_shift_by_grade(...) at test-tm_t_shift_by_grade.R:24:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0220000000000002" classname="tm_t_shift_by_grade" name="template_shift_by_grade_throws_an_error_when_worst_flag_var_is_not_one_of_WGRLOVFL_WGRLOFL_WGRHIVFL_WGRHIFL"/>
    <testcase time="0.0380000000000003" classname="tm_t_shift_by_grade" name="template_shift_by_grade_keeps_the_same_number_of_missing_data_Missing_after_preprocessing">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = anl &lt;- df %&gt;% dplyr::filter(worst_flag_var ==  ('test-tm_t_shift_by_grade.R:77:5')">Error in `add_expr(data_list, substitute(expr = anl &lt;- df %&gt;% dplyr::filter(worst_flag_var == 
    worst_flag_indicator), env = list(df = as.name(dataname), 
    worst_flag_var = as.name(worst_flag_var), worst_flag_indicator = worst_flag_indicator)))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_shift_by_grade(...) at test-tm_t_shift_by_grade.R:77:5
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
  </testsuite>
  <testsuite name="tm_t_smq" timestamp="2024-02-08T12:05:39Z" hostname="844dd23524bf" tests="2" skipped="0" failures="0" errors="2" time="0.046">
    <testcase time="0.0249999999999995" classname="tm_t_smq" name="template_smq_generates_correct_expressions_with_default_arguments">
      <error type="error" message="Error in `add_expr(data_list, substitute(anl &lt;- dataname, env = list(dataname = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'. ('test-tm_t_smq.R:2:3')">Error in `add_expr(data_list, substitute(anl &lt;- dataname, env = list(dataname = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_smq(...) at test-tm_t_smq.R:2:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0209999999999999" classname="tm_t_smq" name="template_smq_generates_correct_expressions_with_custom_arguments">
      <error type="error" message="Error in `add_expr(data_list, substitute(anl &lt;- dataname, env = list(dataname = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'. ('test-tm_t_smq.R:21:3')">Error in `add_expr(data_list, substitute(anl &lt;- dataname, env = list(dataname = as.name(dataname))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_smq(...) at test-tm_t_smq.R:21:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
  </testsuite>
  <testsuite name="tm_t_summary" timestamp="2024-02-08T12:05:39Z" hostname="844dd23524bf" tests="5" skipped="0" failures="0" errors="5" time="0.114">
    <testcase time="0.0250000000000004" classname="tm_t_summary" name="template_summary_generates_correct_expressions">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = anl &lt;- df %&gt;% df_explicit_na(omit_columns = setdiff(names(df),  ('test-tm_t_summary.R:2:3')">Error in `add_expr(data_list, substitute(expr = anl &lt;- df %&gt;% df_explicit_na(omit_columns = setdiff(names(df), 
    c(sum_vars)), na_level = na_str), env = list(df = as.name(dataname), 
    sum_vars = sum_vars, na_str = na_level)))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_summary(...) at test-tm_t_summary.R:2:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0209999999999999" classname="tm_t_summary" name="template_summary_can_generate_customized_table">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = anl &lt;- df %&gt;% df_explicit_na(omit_columns = setdiff(names(df),  ('test-tm_t_summary.R:20:3')">Error in `add_expr(data_list, substitute(expr = anl &lt;- df %&gt;% df_explicit_na(omit_columns = setdiff(names(df), 
    c(sum_vars)), na_level = na_str), env = list(df = as.name(dataname), 
    sum_vars = sum_vars, na_str = na_level)))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_summary(...) at test-tm_t_summary.R:20:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0209999999999999" classname="tm_t_summary" name="template_summary_generates_correct_expressions_for_multiple_grouping_variables">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = anl &lt;- df %&gt;% df_explicit_na(omit_columns = setdiff(names(df),  ('test-tm_t_summary.R:38:3')">Error in `add_expr(data_list, substitute(expr = anl &lt;- df %&gt;% df_explicit_na(omit_columns = setdiff(names(df), 
    c(sum_vars)), na_level = na_str), env = list(df = as.name(dataname), 
    sum_vars = sum_vars, na_str = na_level)))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_summary(...) at test-tm_t_summary.R:38:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0259999999999998" classname="tm_t_summary" name="template_summary_generates_correct_expressions_for_multiple_grouping_variables_and_all_patients">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = anl &lt;- df %&gt;% df_explicit_na(omit_columns = setdiff(names(df),  ('test-tm_t_summary.R:58:5')">Error in `add_expr(data_list, substitute(expr = anl &lt;- df %&gt;% df_explicit_na(omit_columns = setdiff(names(df), 
    c(sum_vars)), na_level = na_str), env = list(df = as.name(dataname), 
    sum_vars = sum_vars, na_str = na_level)))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_summary(...) at test-tm_t_summary.R:58:5
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0209999999999999" classname="tm_t_summary" name="template_summary_generates_correct_expressions_for_customized_numeric_statistics">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = anl &lt;- df %&gt;% df_explicit_na(omit_columns = setdiff(names(df),  ('test-tm_t_summary.R:77:3')">Error in `add_expr(data_list, substitute(expr = anl &lt;- df %&gt;% df_explicit_na(omit_columns = setdiff(names(df), 
    c(sum_vars)), na_level = na_str), env = list(df = as.name(dataname), 
    sum_vars = sum_vars, na_str = na_level)))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_summary(...) at test-tm_t_summary.R:77:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
  </testsuite>
  <testsuite name="tm_t_summary_by" timestamp="2024-02-08T12:05:39Z" hostname="844dd23524bf" tests="5" skipped="0" failures="0" errors="5" time="0.108">
    <testcase time="0.0259999999999998" classname="tm_t_summary_by" name="template_summary_by_generates_correct_expressions">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = anl &lt;- df %&gt;% df_explicit_na(omit_columns = setdiff(names(df),  ('test-tm_t_summary_by.R:2:3')">Error in `add_expr(data_list, substitute(expr = anl &lt;- df %&gt;% df_explicit_na(omit_columns = setdiff(names(df), 
    c(by_vars, sum_vars)), na_level = na_str), env = list(df = as.name(dataname), 
    by_vars = by_vars, sum_vars = sum_vars, na_str = na_level)))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_summary_by(...) at test-tm_t_summary_by.R:2:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0200000000000005" classname="tm_t_summary_by" name="template_summary_by_generates_correct_expressions_when_parallel_vars_is_true">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = anl &lt;- df %&gt;% df_explicit_na(omit_columns = setdiff(names(df),  ('test-tm_t_summary_by.R:21:3')">Error in `add_expr(data_list, substitute(expr = anl &lt;- df %&gt;% df_explicit_na(omit_columns = setdiff(names(df), 
    c(by_vars, sum_vars)), na_level = na_str), env = list(df = as.name(dataname), 
    by_vars = by_vars, sum_vars = sum_vars, na_str = na_level)))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_summary_by(...) at test-tm_t_summary_by.R:21:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0209999999999999" classname="tm_t_summary_by" name="template_summary_by_generates_correct_expressions_when_row_groups_is_true">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = anl &lt;- df %&gt;% df_explicit_na(omit_columns = setdiff(names(df),  ('test-tm_t_summary_by.R:41:3')">Error in `add_expr(data_list, substitute(expr = anl &lt;- df %&gt;% df_explicit_na(omit_columns = setdiff(names(df), 
    c(by_vars, sum_vars)), na_level = na_str), env = list(df = as.name(dataname), 
    by_vars = by_vars, sum_vars = sum_vars, na_str = na_level)))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_summary_by(...) at test-tm_t_summary_by.R:41:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0200000000000005" classname="tm_t_summary_by" name="template_summary_by_generates_correct_expressions_for_customized_numeric_statistics">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = anl &lt;- df %&gt;% df_explicit_na(omit_columns = setdiff(names(df),  ('test-tm_t_summary_by.R:62:3')">Error in `add_expr(data_list, substitute(expr = anl &lt;- df %&gt;% df_explicit_na(omit_columns = setdiff(names(df), 
    c(by_vars, sum_vars)), na_level = na_str), env = list(df = as.name(dataname), 
    by_vars = by_vars, sum_vars = sum_vars, na_str = na_level)))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_summary_by(...) at test-tm_t_summary_by.R:62:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0209999999999999" classname="tm_t_summary_by" name="template_summary_by_generates_correct_expressions_for_drop_zero_levels_is_true">
      <error type="error" message="Error in `add_expr(data_list, substitute(expr = anl &lt;- df %&gt;% df_explicit_na(omit_columns = setdiff(names(df),  ('test-tm_t_summary_by.R:82:3')">Error in `add_expr(data_list, substitute(expr = anl &lt;- df %&gt;% df_explicit_na(omit_columns = setdiff(names(df), 
    c(by_vars, sum_vars)), na_level = na_str), env = list(df = as.name(dataname), 
    by_vars = by_vars, sum_vars = sum_vars, na_str = na_level)))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical:::template_summary_by(...) at test-tm_t_summary_by.R:82:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
  </testsuite>
  <testsuite name="tm_t_tte" timestamp="2024-02-08T12:05:40Z" hostname="844dd23524bf" tests="8" skipped="4" failures="0" errors="0" time="0.091">
    <testcase time="0.024" classname="tm_t_tte" name="template_tte_produces_healthy_standard_output"/>
    <testcase time="0.00499999999999989" classname="tm_t_tte" name="template_tte_produces_healthy_standard_output">
      <skipped message="Reason: On CRAN ('test-tm_t_tte.R:25:3')"/>
    </testcase>
    <testcase time="0.0149999999999997" classname="tm_t_tte" name="template_tte_produces_correct_data_expression_when_not_comparing_arms"/>
    <testcase time="0.00499999999999989" classname="tm_t_tte" name="template_tte_produces_correct_data_expression_when_not_comparing_arms">
      <skipped message="Reason: On CRAN ('test-tm_t_tte.R:52:3')"/>
    </testcase>
    <testcase time="0.0150000000000006" classname="tm_t_tte" name="template_tte_produces_correct_data_expression_when_comparing_and_combining_arms"/>
    <testcase time="0.00499999999999989" classname="tm_t_tte" name="template_tte_produces_correct_data_expression_when_comparing_and_combining_arms">
      <skipped message="Reason: On CRAN ('test-tm_t_tte.R:79:3')"/>
    </testcase>
    <testcase time="0.0169999999999995" classname="tm_t_tte" name="template_tte_produces_correct_data_expression_when_comparing_arms"/>
    <testcase time="0.00499999999999989" classname="tm_t_tte" name="template_tte_produces_correct_data_expression_when_comparing_arms">
      <skipped message="Reason: On CRAN ('test-tm_t_tte.R:106:3')"/>
    </testcase>
  </testsuite>
  <testsuite name="utils" timestamp="2024-02-08T12:05:40Z" hostname="844dd23524bf" tests="48" skipped="9" failures="0" errors="2" time="0.397">
    <testcase time="0.0180000000000007" classname="utils" name="h_concat_expr_returns_a_string_for_long_expression"/>
    <testcase time="0.00399999999999956" classname="utils" name="h_concat_expr_returns_a_string_for_long_expression">
      <skipped message="Reason: On CRAN ('test-utils.R:13:3')"/>
    </testcase>
    <testcase time="0.0190000000000001" classname="utils" name="pipe_expr_concatenate_expressions_into_a_single_pipeline_"/>
    <testcase time="0.00499999999999989" classname="utils" name="add_expr_adds_expressions_to_expression_list"/>
    <testcase time="0.00499999999999989" classname="utils" name="add_expr_adds_expressions_to_expression_list">
      <skipped message="Reason: On CRAN ('test-utils.R:44:3')"/>
    </testcase>
    <testcase time="0.0129999999999999" classname="utils" name="add_expr_manages_expression_list_which_can_be_used_by_pipe_expr"/>
    <testcase time="0.00400000000000045" classname="utils" name="add_expr_manages_expression_list_which_can_be_used_by_pipe_expr">
      <skipped message="Reason: On CRAN ('test-utils.R:65:3')"/>
    </testcase>
    <testcase time="0.0149999999999997" classname="utils" name="bracket_expr_concatenates_expressions_into_a_single_expression"/>
    <testcase time="0.00400000000000045" classname="utils" name="bracket_expr_concatenates_expressions_into_a_single_expression">
      <skipped message="Reason: On CRAN ('test-utils.R:83:3')"/>
    </testcase>
    <testcase time="0.0149999999999997" classname="utils" name="bracket_expr_returns_a_single_evaluable_expression"/>
    <testcase time="0.00499999999999989" classname="utils" name="bracket_expr_returns_a_single_evaluable_expression">
      <skipped message="Reason: On CRAN ('test-utils.R:91:3')"/>
    </testcase>
    <testcase time="0.0140000000000002" classname="utils" name="prepare_arm_with_standard_inputs"/>
    <testcase time="0.00399999999999956" classname="utils" name="prepare_arm_with_standard_inputs">
      <skipped message="Reason: On CRAN ('test-utils.R:104:3')"/>
    </testcase>
    <testcase time="0.0140000000000002" classname="utils" name="prepare_arm_combine_ref_arms"/>
    <testcase time="0.00400000000000045" classname="utils" name="prepare_arm_combine_ref_arms">
      <skipped message="Reason: On CRAN ('test-utils.R:116:3')"/>
    </testcase>
    <testcase time="0.0139999999999993" classname="utils" name="prepare_arm_combine_ref_arms_and_use_new_level"/>
    <testcase time="0.00400000000000045" classname="utils" name="prepare_arm_combine_ref_arms_and_use_new_level">
      <skipped message="Reason: On CRAN ('test-utils.R:129:3')"/>
    </testcase>
    <testcase time="0.0140000000000002" classname="utils" name="prepare_arm_does_not_do_anything_when_we_don_t_want_to_compare_or_drop_arms"/>
    <testcase time="0.00299999999999923" classname="utils" name="prepare_arm_does_not_do_anything_when_we_don_t_want_to_compare_or_drop_arms"/>
    <testcase time="0.00800000000000001" classname="utils" name="prepare_arm_levels_with_standard_inputs">
      <error type="error" message="Error in `add_expr(data_list, substitute_names(expr = dataname &lt;- dataname %&gt;%  ('test-utils.R:160:3')">Error in `add_expr(data_list, substitute_names(expr = dataname &lt;- dataname %&gt;% 
    dplyr::mutate(arm_var = droplevels(arm_var)), names = list(dataname = as.name(dataname), 
    arm_var = as.name(arm_var))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical::prepare_arm_levels(...) at test-utils.R:160:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0210000000000008" classname="utils" name="prepare_arm_levels_can_use_parentname_arm_levels">
      <error type="error" message="Error in `add_expr(data_list, substitute_names(expr = parentname &lt;- parentname %&gt;%  ('test-utils.R:172:3')">Error in `add_expr(data_list, substitute_names(expr = parentname &lt;- parentname %&gt;% 
    dplyr::mutate(arm_var = droplevels(arm_var)), names = list(parentname = as.name(parentname), 
    arm_var = as.name(arm_var))))`: Assertion on 'new_expr' failed: Must inherit from class 'call'/'name', but has class '&lt;-'.
Backtrace:
    x
 1. \-teal.modules.clinical::prepare_arm_levels(...) at test-utils.R:172:3
 2.   \-teal.modules.clinical::add_expr(...)
 3.     \-checkmate::assert_multi_class(new_expr, c("call", "name"))
 4.       \-checkmate::makeAssertion(x, res, .var.name, add)
 5.         \-checkmate:::mstop(...)</error>
    </testcase>
    <testcase time="0.0179999999999998" classname="utils" name="color_lab_values_main"/>
    <testcase time="0.00499999999999989" classname="utils" name="color_lab_values_main">
      <skipped message="Reason: On CRAN ('test-utils.R:188:3')"/>
    </testcase>
    <testcase time="0.0140000000000002" classname="utils" name="color_lab_values_neutral_for_none_characters"/>
    <testcase time="0.00300000000000011" classname="utils" name="color_lab_values_neutral_for_none_characters"/>
    <testcase time="0.00599999999999934" classname="utils" name="clean_description"/>
    <testcase time="0.00300000000000011" classname="utils" name="clean_description"/>
    <testcase time="0.00700000000000056" classname="utils" name="get_g_forest_obj_var_name"/>
    <testcase time="0.00699999999999967" classname="utils" name="cs_to_select_spec_single_choices_selected_is_converted_to_select_spec"/>
    <testcase time="0.00600000000000023" classname="utils" name="cs_to_select_spec_single_choices_selected_is_converted_to_select_spec_with_multiple_TRUE"/>
    <testcase time="0.00599999999999934" classname="utils" name="cs_to_select_spec_single_choices_selected_is_converted_to_select_spec_with_ordered_TRUE"/>
    <testcase time="0.00800000000000001" classname="utils" name="cs_to_select_spec_accepts_choices_selected_only"/>
    <testcase time="0.00800000000000001" classname="utils" name="cs_to_select_spec_accepts_multiple_as_flag_only"/>
    <testcase time="0.0129999999999999" classname="utils" name="cs_to_select_spec_accepts_ordered_as_flag_only"/>
    <testcase time="0.00900000000000034" classname="utils" name="cs_to_filter_spec_fails_if_doesn_t_have_var_choices"/>
    <testcase time="0.0170000000000003" classname="utils" name="cs_to_filter_spec_creates_filter_spec_from_choices_selected"/>
    <testcase time="0.00599999999999934" classname="utils" name="cs_to_des_select_creates_data_extract_spec_with_single_select_and_no_filter"/>
    <testcase time="0.00700000000000056" classname="utils" name="cs_to_des_select_returns_the_input_if_data_extract_spec_is_provided"/>
    <testcase time="0.00600000000000023" classname="utils" name="cs_to_des_select_creates_data_extract_spec_with_multiple_TRUE"/>
    <testcase time="0.00699999999999967" classname="utils" name="cs_to_des_select_creates_data_extract_spec_with_ordered_TRUE"/>
    <testcase time="0.00600000000000023" classname="utils" name="as_numeric_from_comma_sep_str_returns_NULL_if_blank_string_or_NULL_entered"/>
    <testcase time="0.00199999999999978" classname="utils" name="as_numeric_from_comma_sep_str_returns_NULL_if_blank_string_or_NULL_entered"/>
    <testcase time="0.00600000000000023" classname="utils" name="as_numeric_from_comma_sep_str_returns_numeric_vector_of_numbers"/>
    <testcase time="0.00300000000000011" classname="utils" name="as_numeric_from_comma_sep_str_returns_numeric_vector_of_numbers"/>
    <testcase time="0.00599999999999934" classname="utils" name="as_numeric_from_comma_sep_str_respects_sep_argument"/>
    <testcase time="0.00300000000000011" classname="utils" name="as_numeric_from_comma_sep_str_respects_sep_argument"/>
    <testcase time="0.00499999999999989" classname="utils" name="default_total_label_works_properly"/>
    <testcase time="0.00300000000000011" classname="utils" name="default_total_label_works_properly"/>
  </testsuite>
  <testsuite name="validate_standard_inputs" timestamp="2024-02-08T12:05:40Z" hostname="844dd23524bf" tests="6" skipped="0" failures="0" errors="0" time="0.034">
    <testcase time="0.0110000000000001" classname="validate_standard_inputs" name="validate_arm_throws_shiny_error_if_arm_vec_is_not_a_factor"/>
    <testcase time="0.00399999999999956" classname="validate_standard_inputs" name="validate_arm_throws_shiny_error_if_arm_vec_is_not_a_factor"/>
    <testcase time="0.00800000000000001" classname="validate_standard_inputs" name="validate_arm_throws_specific_shiny_error_if_arm_vec_has_just_whitespace_strings"/>
    <testcase time="0.00500000000000078" classname="validate_standard_inputs" name="validate_arm_throws_specific_shiny_error_if_arm_vec_has_just_whitespace_strings"/>
    <testcase time="0.00499999999999989" classname="validate_standard_inputs" name="validate_arm_throws_no_error_if_arm_vec_is_a_factor"/>
    <testcase time="0.000999999999999446" classname="validate_standard_inputs" name="validate_arm_throws_no_error_if_arm_vec_is_a_factor"/>
  </testsuite>
</testsuites>

[{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others‚Äô private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired Mozilla‚Äôs code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contribution Guidelines","title":"Contribution Guidelines","text":"üôè Thank taking time contribute! input deeply valued, whether issue, pull request, even feedback, regardless size, content scope.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/CONTRIBUTING.html","id":"table-of-contents","dir":"","previous_headings":"","what":"Table of contents","title":"Contribution Guidelines","text":"üë∂ Getting started üìî Code Conduct üóÉ License üìú Issues üö© Pull requests üëó Style guide üèÜ Recognition model ‚ùì Questions","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/CONTRIBUTING.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Contribution Guidelines","text":"Please refer project documentation brief introduction. Please also see articles within project documentation additional information.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contribution Guidelines","text":"Code Conduct governs project. Participants contributors expected follow rules outlined therein.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/CONTRIBUTING.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Contribution Guidelines","text":"contributions covered project‚Äôs license.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/CONTRIBUTING.html","id":"issues","dir":"","previous_headings":"","what":"Issues","title":"Contribution Guidelines","text":"use GitHub track issues, feature requests, bugs. submitting new issue, please check issue already reported. issue already exists, please upvote existing issue üëç. new feature requests, please elaborate context benefit feature users, developers, relevant personas.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/CONTRIBUTING.html","id":"github-flow","dir":"","previous_headings":"Pull requests","what":"Github flow","title":"Contribution Guidelines","text":"repository uses Github flow model collaboration. submit pull request: Create branch. Please see branch naming convention . don‚Äôt write access repository, please fork . Make changes. Make sure code: passes checks imposed GitHub Actions well documented well tested unit tests sufficiently covering changes introduced Create pull request (PR). pull request description, please link relevant issue (), provide detailed description change, include assumptions. Address review comments, . Receive approval. Merge PR write access. Otherwise, reviewer merge PR behalf. Pat back. Congratulations! üéâ now official contributor project! grateful contribution.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/CONTRIBUTING.html","id":"branch-naming-convention","dir":"","previous_headings":"Pull requests","what":"Branch naming convention","title":"Contribution Guidelines","text":"Suppose changes related current issue current project; please name branch follows: <issue_id>_<short_description>. Please use underscore (_) delimiter word separation. example, 420_fix_ui_bug suitable branch name change resolving UI-related bug reported issue number 420 current project. change affects multiple repositories, please name branches follows: <issue_id>_<issue_repo>_<short description>. example, 69_awesomeproject_fix_spelling_error reference issue 69 reported project awesomeproject aims resolve one spelling errors multiple (likely related) repositories.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/CONTRIBUTING.html","id":"monorepo-and-stageddependencies","dir":"","previous_headings":"Pull requests","what":"monorepo and staged.dependencies","title":"Contribution Guidelines","text":"Sometimes might need change upstream dependent package(s) able submit meaningful change. using staged.dependencies functionality simulate monorepo behavior. dependency configuration already specified project‚Äôs staged_dependencies.yaml file. need name feature branches appropriately. exception branch naming convention described . Please refer staged.dependencies package documentation details.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/CONTRIBUTING.html","id":"r--package-versions","dir":"","previous_headings":"Pull requests > Recommended development environment & tools","what":"R & package versions","title":"Contribution Guidelines","text":"continuously test packages newest R version along recent dependencies CRAN BioConductor. recommend working environment also set way. can find details R version packages used R CMD check GitHub Action execution log - step prints R sessionInfo(). discover bugs older R versions older set dependencies, please create relevant bug reports.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/CONTRIBUTING.html","id":"pre-commit","dir":"","previous_headings":"Pull requests > Recommended development environment & tools","what":"pre-commit","title":"Contribution Guidelines","text":"highly recommend use pre-commit tool combined R hooks pre-commit execute checks committing pushing changes. Pre-commit hooks already available repository‚Äôs .pre-commit-config.yaml file.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/CONTRIBUTING.html","id":"style-guide","dir":"","previous_headings":"","what":"Style guide","title":"Contribution Guidelines","text":"repository follows standard tidyverse style guide uses lintr lint checks. Customized lint configurations available repository‚Äôs .lintr file.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/CONTRIBUTING.html","id":"recognition-model","dir":"","previous_headings":"","what":"Recognition model","title":"Contribution Guidelines","text":"mentioned previously, contributions deeply valued appreciated. contribution data available part repository insights, recognize significant contribution hence add contributor package authors list, following rules enforced: Minimum 5% lines code authored* (determined git blame query) top 5 contributors terms number commits lines added lines removed* *Excluding auto-generated code, including limited roxygen comments renv.lock files. package maintainer also reserves right adjust criteria recognize contributions.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/CONTRIBUTING.html","id":"questions","dir":"","previous_headings":"","what":"Questions","title":"Contribution Guidelines","text":"questions regarding contribution guidelines, please contact package/repository maintainer.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/SECURITY.html","id":"reporting-security-issues","dir":"","previous_headings":"","what":"Reporting Security Issues","title":"Security Policy","text":"believe found security vulnerability repositories organization, please report us coordinated disclosure. Please report security vulnerabilities public GitHub issues, discussions, pull requests. Instead, please send email vulnerability.management[@]roche.com. Please include much information listed can help us better understand resolve issue: type issue (e.g., buffer overflow, SQL injection, cross-site scripting) Full paths source file(s) related manifestation issue location affected source code (tag/branch/commit direct URL) special configuration required reproduce issue Step--step instructions reproduce issue Proof--concept exploit code (possible) Impact issue, including attacker might exploit issue information help us triage report quickly.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/SECURITY.html","id":"data-security-standards-dss","dir":"","previous_headings":"","what":"Data Security Standards (DSS)","title":"Security Policy","text":"Please make sure reporting issues form bug, feature, pull request, sensitive information PII, PHI, PCI completely removed text attachments, including pictures videos.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/articles/quickstart_substitute.html","id":"section","dir":"Articles","previous_headings":"","what":"Quick start: `substitute` for NSE","title":"Quick start: `substitute` for NSE","text":"Considering expression, R usually evaluates returns value. Instead focusing value, also possible work code generated value. non standard evaluation, NSE, starts. function substitute important element non-standard evaluation. instance, consider defined <- 5, expression returns 5, substitute() returns code obtain value: . principle relies teal : generate expressions. return result expression result panel app. return corresponding code (expression) Show R Code. expression returning displayed value must reactive. information encoding one hand filtering panel hand modify expression displayed value. , teal needs work expressions values relies heavily NSE. NSE advanced notion mixing Shiny app development source difficulties: hindered efficient coding Shiny app must run check good execution code. limited possibilities testing. alternative, possible focus first NSE aspects plain R, secondly, ready, integrate Shiny App. Hereafter, practical examples demonstrating NSE works. choice made focus substitute.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/articles/quickstart_substitute.html","id":"principle","dir":"Articles","previous_headings":"Basic","what":"Principle","title":"Quick start: `substitute` for NSE","text":"happened? substitute returns code value, even try code, therefore possible return expression make sense (yet), instance involving two non defined objects. values b exist, expression can run without error (). Now, function name substitute reason. returning expression, also operates substitutions terms within given expression. happened? objects b exist function environment substitute called. terms expression within substitute replaced values b. Indeed, returning expression, substitute verifies b don‚Äôt value existing evaluation environment. , values b used expression. also possible use second argument substitute, env, environment (list) containing objects. expression submitted substitute corresponding objects env, terms within expression substituted provided values: happened? environment values b taken directly declared within substitute expression (argument expr) values substituted (argument env). substitute returned non-evaluated expression, use eval() evaluate . slightly elaborated expression:  Note : x argument name plot preserved, x object replaced.","code":"non_evaluated_expression <- substitute(expr = a + b) non_evaluated_expression ## a + b eval(non_evaluated_expression) ## Error in eval(non_evaluated_expression): object 'b' not found a <- 1 b <- 5 eval(non_evaluated_expression) ## [1] 6 fun <- function(a, b) {   substitute(expr = a + b) } non_evaluated_expression <- fun(5, -2) non_evaluated_expression ## 5 + -2 eval(non_evaluated_expression) ## [1] 3 non_evaluated_expression <- substitute(   expr = a + b,   env = list(a = 5, b = 5) ) non_evaluated_expression ## 5 + 5 eval(non_evaluated_expression) ## [1] 10 non_evaluated_expression <- substitute(   expr = plot(x = x, y = exp(x), main = text),   env = list(x = 0:10, text = \"A graph\") ) non_evaluated_expression ## plot(x = 0:10, y = exp(0:10), main = \"A graph\") eval(non_evaluated_expression)"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/articles/quickstart_substitute.html","id":"replace-an-object-name","dir":"Articles","previous_headings":"Basic","what":"Replace an object name","title":"Quick start: `substitute` for NSE","text":"formulas, character strings accepted, operate substitution? object names special name class; .names coerces character string object name (alternatively, .symbol provides identical result):","code":"# Error expected: plot_expr <- substitute(   expr = plot(y ~ x, data = iris, main = text),   env = list(     x = Sepal.Length,     y = Sepal.Width,     text = \"Iris, again ...\"   ) ) ## Error in eval(expr, envir, enclos): object 'Sepal.Length' not found # Error expected: plot_expr <- substitute(   expr = plot(y ~ x, data = iris, main = text),   env = list(     x = \"Sepal.Length\",     y = \"Sepal.Width\",     text = \"Iris, again ...\"   ) ) plot_expr ## plot(\"Sepal.Width\" ~ \"Sepal.Length\", data = iris, main = \"Iris, again ...\") eval(plot_expr) ## Error in terms.formula(formula, data = data): invalid term in model formula plot_expr <- substitute(   expr = plot(y ~ x, data = iris, main = text),   env = list(     x = as.name(\"Sepal.Length\"),     y = as.symbol(\"Sepal.Width\"),     text = \"Iris, again ...\"   ) ) plot_expr ## plot(Sepal.Width ~ Sepal.Length, data = iris, main = \"Iris, again ...\") eval(plot_expr)"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/articles/quickstart_substitute.html","id":"what-with-dataframe-name","dir":"Articles","previous_headings":"Basic","what":"What with dataframe name?","title":"Quick start: `substitute` for NSE","text":"Lets imagine pipe-flavored expression, df term corresponding dataframe substituted: df %>% plot(y ~ x, data = ., main = text). principle exposed can work directly without addition. However, df expression replaced directly value object provided expression generating dataframe: pipeline working humanly readable.  can replace value expression generating value? pretty much topic vignette: substitute.","code":"library(magrittr) short_iris <- head(iris) plot_expr <- substitute(   expr = df %>% plot(y ~ x, data = ., main = text),   env = list(     df = short_iris,     x = as.name(\"Sepal.Length\"),     y = as.symbol(\"Sepal.Width\"),     text = \"Iris, again ...\"   ) ) eval(plot_expr) plot_expr ## list(Sepal.Length = c(5.1, 4.9, 4.7, 4.6, 5, 5.4), Sepal.Width = c(3.5,  ## 3, 3.2, 3.1, 3.6, 3.9), Petal.Length = c(1.4, 1.4, 1.3, 1.5,  ## 1.4, 1.7), Petal.Width = c(0.2, 0.2, 0.2, 0.2, 0.2, 0.4), Species = c(1L,  ## 1L, 1L, 1L, 1L, 1L)) %>% plot(Sepal.Width ~ Sepal.Length, data = .,  ##     main = \"Iris, again ...\") plot_expr <- substitute(   expr = df %>% plot(y ~ x, data = ., main = text),   env = list(     df = substitute(iris),     x = as.name(\"Sepal.Length\"),     y = as.symbol(\"Sepal.Width\"),     text = \"Iris, again ...\"   ) ) plot_expr ## iris %>% plot(Sepal.Width ~ Sepal.Length, data = ., main = \"Iris, again ...\") eval(plot_expr)"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/articles/quickstart_substitute.html","id":"in-a-nutshell","dir":"Articles","previous_headings":"Basic","what":"In a nutshell","title":"Quick start: `substitute` for NSE","text":"expr expression (eventually) substituted. env environment potential replacement value might needed. object name (like formulas e.g.¬†y ~ x) , use .name .symbol. data frame name (like iris) , use substitute.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/articles/quickstart_substitute.html","id":"direct-use-of-substitute","dir":"Articles","previous_headings":"rtables","what":"Direct use of substitute","title":"Quick start: `substitute` for NSE","text":"substitute approach can used new rtables pipelines. Lets prepare example reporting data LB domain. example based template LBT01; target report columns lab test result per study arm, values (AVAL) changes baseline (CHG), per analysis visit rows. data can prepared follows: rtables expression obtained : expression valid ‚Ä¶ : ‚Ä¶ easily readable ‚Ä¶: ‚Ä¶ can arranged:","code":"library(scda) ##  library(rtables) ## Loading required package: formatters library(dplyr) ##  ## Attaching package: 'dplyr' ## The following objects are masked from 'package:stats': ##  ##     filter, lag ## The following objects are masked from 'package:base': ##  ##     intersect, setdiff, setequal, union library(tern) ## Registered S3 method overwritten by 'tern': ##   method   from  ##   tidy.glm broom adlb <- synthetic_cdisc_data(\"latest\")$adlb adlb_f <- adlb %>%   filter(     PARAM == \"Alanine Aminotransferase Measurement\" &       ARMCD %in% c(\"ARM A\", \"ARM B\") & AVISIT == \"WEEK 1 DAY 8\"   ) rtables_expr <- substitute(   expr = basic_table() %>%     split_cols_by(arm, split_fun = drop_split_levels) %>%     split_rows_by(visit, split_fun = drop_split_levels) %>%     split_cols_by_multivar(       vars = c(\"AVAL\", \"CHG\"),       varlabels = c(\"Value\", \"Change\")     ) %>%     summarize_colvars() %>%     build_table(df = df),   env = list(     df = substitute(adlb_f),     arm = \"ARM\",     visit = \"AVISIT\"   ) ) eval(rtables_expr) ##                        A: Drug X                  B: Placebo         ##                  Value         Change        Value         Change    ## ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî ## WEEK 1 DAY 8                                                         ##   n               134           134           134           134      ##   Mean (SD)    19.3 (4.0)    -0.5 (5.9)    20.2 (4.0)    0.1 (6.0)   ##   Median          19.2          -0.5          20.1          -0.7     ##   Min - Max    8.9 - 27.3   -12.5 - 19.7   5.8 - 28.8   -12.3 - 17.4 rtables_expr ## basic_table() %>% split_cols_by(\"ARM\", split_fun = drop_split_levels) %>%  ##     split_rows_by(\"AVISIT\", split_fun = drop_split_levels) %>%  ##     split_cols_by_multivar(vars = c(\"AVAL\", \"CHG\"), varlabels = c(\"Value\",  ##         \"Change\")) %>% summarize_colvars() %>% build_table(df = adlb_f) library(teal) #' Stylish code #' #' Deparse an expression and display the code following NEST conventions. #' #' @param expr (`call`)\\cr or possibly understood as so. #' styled_expr <- function(expr) {   styler:::print.vertical(     styler::style_text(text = deparse(expr)),     colored = FALSE   ) } #' #' @examples styled_expr(rtables_expr) ## basic_table() %>% ##   split_cols_by(\"ARM\", split_fun = drop_split_levels) %>% ##   split_rows_by(\"AVISIT\", split_fun = drop_split_levels) %>% ##   split_cols_by_multivar(vars = c(\"AVAL\", \"CHG\"), varlabels = c( ##     \"Value\", ##     \"Change\" ##   )) %>% ##   summarize_colvars() %>% ##   build_table(df = adlb_f)"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/articles/quickstart_substitute.html","id":"substitute-in-a-function","dir":"Articles","previous_headings":"rtables","what":"substitute in a function","title":"Quick start: `substitute` for NSE","text":"Moving , substitute can actually wrapped function, way rtables pipelines programmatically obtained: results obtained ‚Ä¶ , fine tuning easier. instance, variable designating study arm visit can changed, expected feature teal module encoding panel.","code":"rtables_expr <- function(df,                          arm,                          visit) {   substitute(     expr = basic_table() %>%       split_cols_by(arm, split_fun = drop_split_levels) %>%       split_rows_by(visit, split_fun = drop_split_levels) %>%       split_cols_by_multivar(         vars = c(\"AVAL\", \"CHG\"),         varlabels = c(\"Value\", \"Change\")       ) %>%       summarize_colvars() %>%       build_table(df = df),     env = list(       df = substitute(df),       arm = arm,       visit = visit     )   ) } result <- rtables_expr(df = adlb_f, arm = \"ARM\", visit = \"AVISIT\") styled_expr(result) ## basic_table() %>% ##   split_cols_by(\"ARM\", split_fun = drop_split_levels) %>% ##   split_rows_by(\"AVISIT\", split_fun = drop_split_levels) %>% ##   split_cols_by_multivar(vars = c(\"AVAL\", \"CHG\"), varlabels = c( ##     \"Value\", ##     \"Change\" ##   )) %>% ##   summarize_colvars() %>% ##   build_table(df = adlb_f) eval(result) ##                        A: Drug X                  B: Placebo         ##                  Value         Change        Value         Change    ## ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî ## WEEK 1 DAY 8                                                         ##   n               134           134           134           134      ##   Mean (SD)    19.3 (4.0)    -0.5 (5.9)    20.2 (4.0)    0.1 (6.0)   ##   Median          19.2          -0.5          20.1          -0.7     ##   Min - Max    8.9 - 27.3   -12.5 - 19.7   5.8 - 28.8   -12.3 - 17.4 result <- rtables_expr(df = adlb_f, arm = \"ARMCD\", visit = \"AVISITN\") eval(result) ## Split var [AVISITN] was not character or factor. Converting to factor ##                         ARM A                       ARM B           ##                 Value         Change        Value         Change    ## ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî ## 1                                                                   ##   n              134           134           134           134      ##   Mean (SD)   19.3 (4.0)    -0.5 (5.9)    20.2 (4.0)    0.1 (6.0)   ##   Median         19.2          -0.5          20.1          -0.7     ##   Min - Max   8.9 - 27.3   -12.5 - 19.7   5.8 - 28.8   -12.3 - 17.4 styled_expr(result) ## basic_table() %>% ##   split_cols_by(\"ARMCD\", split_fun = drop_split_levels) %>% ##   split_rows_by(\"AVISITN\", split_fun = drop_split_levels) %>% ##   split_cols_by_multivar(vars = c(\"AVAL\", \"CHG\"), varlabels = c( ##     \"Value\", ##     \"Change\" ##   )) %>% ##   summarize_colvars() %>% ##   build_table(df = adlb_f)"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/articles/quickstart_substitute.html","id":"chain-expressions-in-a-pipeline","dir":"Articles","previous_headings":"rtables","what":"Chain expressions in a pipeline","title":"Quick start: `substitute` for NSE","text":"also possible manipulate expressions, instance, expressions might chained pipeline. Expressions can arranged list, way, possible conditional editing expressions. context rtables, layers enclosing analyze call handle .stats option. lean expression include .stats option, default value changed. expected feature teal module rendering code Show R Code: First application standard statistics: statistics specifications:","code":"#' Expressions as a pipeline #' #' Accepts expressions to be chained using the `magrittr` pipeline-flavor. #' @param ... (`call`)\\cr or object which can be interpreted as so. #'    (e.g. `name`) #' pipe_expr <- function(...) {   exprs <- unlist(list(...))   exprs <- lapply(     exprs,     function(x) {       x <- deparse(x)       paste(x, collapse = \" \")     }   )   exprs <- unlist(exprs)   exprs <- paste(exprs, collapse = \" %>% \")   str2lang(exprs) }  #' @examples result <- pipe_expr(   expr1 = substitute(df),   expr2 = substitute(head) ) result ## df %>% head rtables_expr <- function(df,                          arm,                          visit,                          .stats = NULL) {   # The rtables layout is decomposed into a list of expressions.   lyt <- list()   # 1. First the columns and rows:   lyt$structure <- substitute(     expr = basic_table() %>%       split_cols_by(arm, split_fun = drop_split_levels) %>%       split_rows_by(visit, split_fun = drop_split_levels) %>%       split_cols_by_multivar(         vars = c(\"AVAL\", \"CHG\"),         varlabels = c(\"Value\", \"Change\")       ),     env = list(       arm = arm,       visit = visit     )   )   # 2. The analyze layer which depends on the use of .stats.   lyt$analyze <- if (is.null(.stats)) {     substitute(       summarize_colvars()     )   } else {     substitute(       summarize_colvars(.stats = .stats),       list(.stats = .stats)     )   }   # 3. And finishing with rtables::build_table.   lyt$build <- substitute(     build_table(df = df),     list(df = substitute(df))   )   # As previously demonstrated, expressions can be manipulated and   # chained in a pipeline.   pipe_expr(lyt) } result <- rtables_expr(df = adlb_f, arm = \"ARM\", visit = \"AVISIT\") styled_expr(result) ## basic_table() %>% ##   split_cols_by(\"ARM\", split_fun = drop_split_levels) %>% ##   split_rows_by(\"AVISIT\", split_fun = drop_split_levels) %>% ##   split_cols_by_multivar(vars = c(\"AVAL\", \"CHG\"), varlabels = c( ##     \"Value\", ##     \"Change\" ##   )) %>% ##   summarize_colvars() %>% ##   build_table(df = adlb_f) eval(result) ##                        A: Drug X                  B: Placebo         ##                  Value         Change        Value         Change    ## ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî ## WEEK 1 DAY 8                                                         ##   n               134           134           134           134      ##   Mean (SD)    19.3 (4.0)    -0.5 (5.9)    20.2 (4.0)    0.1 (6.0)   ##   Median          19.2          -0.5          20.1          -0.7     ##   Min - Max    8.9 - 27.3   -12.5 - 19.7   5.8 - 28.8   -12.3 - 17.4 result <- rtables_expr(   df = adlb_f, arm = \"ARM\", visit = \"AVISIT\",   .stats = c(\"n\", \"mean_sd\") ) styled_expr(result) ## basic_table() %>% ##   split_cols_by(\"ARM\", split_fun = drop_split_levels) %>% ##   split_rows_by(\"AVISIT\", split_fun = drop_split_levels) %>% ##   split_cols_by_multivar(vars = c(\"AVAL\", \"CHG\"), varlabels = c( ##     \"Value\", ##     \"Change\" ##   )) %>% ##   summarize_colvars(.stats = c(\"n\", \"mean_sd\")) %>% ##   build_table(df = adlb_f) eval(result) ##                       A: Drug X                B: Placebo       ##                  Value        Change       Value       Change   ## ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî ## WEEK 1 DAY 8                                                    ##   n               134          134          134          134    ##   Mean (SD)    19.3 (4.0)   -0.5 (5.9)   20.2 (4.0)   0.1 (6.0)"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/articles/quickstart_substitute.html","id":"including-pre-processing","dir":"Articles","previous_headings":"rtables","what":"Including pre-processing","title":"Quick start: `substitute` for NSE","text":"Finally, also possible wrap several expressions single function. instance, teal module generally includes pre-processing section: now possible modify studied parameter (PARAMCD) addition study arm visit variables names. two expressions consistent: two expressions can executed return rtables:","code":"rtables_expr <- function(df,                          paramcd,                          arm,                          visit,                          .stats = NULL) {   # y is a list which will collect two expressions:   # 1. y$data with the preprocessing steps.   # 2. y$rtables the table layout and build.   y <- list()   # 1. Preprocessing ---   y$data <- substitute(     df <- df %>%       filter(         PARAMCD == paramcd &           ARMCD %in% c(\"ARM A\", \"ARM B\") & AVISIT == \"WEEK 1 DAY 8\"       ),     list(       df = substitute(df),       paramcd = paramcd     )   )   # 2. rtables layout ---   lyt <- list()   lyt$structure <- substitute(     expr = basic_table() %>%       split_cols_by(arm, split_fun = drop_split_levels) %>%       split_rows_by(visit, split_fun = drop_split_levels) %>%       split_cols_by_multivar(         vars = c(\"AVAL\", \"CHG\"),         varlabels = c(\"Value\", \"Change\")       ),     env = list(       arm = arm,       visit = visit     )   )   lyt$analyze <- if (is.null(.stats)) {     substitute(       summarize_colvars()     )   } else {     substitute(       summarize_colvars(.stats = .stats),       list(.stats = .stats)     )   }   lyt$build <- substitute(     build_table(df = df),     list(df = substitute(df))   )   y$rtables <- pipe_expr(lyt)   # Finally returns y as a list with two expressions.   y } adlb <- synthetic_cdisc_data(\"latest\")$adlb result <- rtables_expr(   df = adlb, paramcd = \"CRP\", arm = \"ARM\", visit = \"AVISIT\",   .stats = c(\"n\", \"mean_sd\") ) styled_expr(result$data) ## adlb <- adlb %>% filter(PARAMCD == \"CRP\" & ARMCD %in% c( ##   \"ARM A\", ##   \"ARM B\" ## ) & AVISIT == \"WEEK 1 DAY 8\") styled_expr(result$rtables) ## basic_table() %>% ##   split_cols_by(\"ARM\", split_fun = drop_split_levels) %>% ##   split_rows_by(\"AVISIT\", split_fun = drop_split_levels) %>% ##   split_cols_by_multivar(vars = c(\"AVAL\", \"CHG\"), varlabels = c( ##     \"Value\", ##     \"Change\" ##   )) %>% ##   summarize_colvars(.stats = c(\"n\", \"mean_sd\")) %>% ##   build_table(df = adlb) result_exec <- mapply(eval, result) result_exec$rtables ##                      A: Drug X              B: Placebo       ##                  Value      Change       Value      Change   ## ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî ## WEEK 1 DAY 8                                                 ##   n               134         134         134         134    ##   Mean (SD)    1.0 (0.2)   0.1 (0.3)   1.0 (0.2)   0.0 (0.3)"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/articles/quickstart_substitute.html","id":"in-a-nutshell-1","dir":"Articles","previous_headings":"rtables","what":"In a nutshell","title":"Quick start: `substitute` for NSE","text":"point, possible : generate rtables pipelines. chain expressions pipeline (e.g.¬†pipe_expr) decompose rtables pipeline add conditional layers (e.g.¬†.stats). group expressions single list control pre-processing rtables pipeline.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/articles/teal-modules-clinical.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Getting started with teal.modules.clinical","text":"teal.modules.clinical package implementing number teal modules helpful exploring clinical trials data, specifically targeted data following ADaM standards. teal.modules.clinical modules can used data ADaM standard clinical data features package make little sense . concepts presented require knowledge core features teal, specifically launch teal application pass data . Therefore, highly recommended refer README file introductory vignette teal package.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/articles/teal-modules-clinical.html","id":"main-features","dir":"Articles","previous_headings":"","what":"Main features","title":"Getting started with teal.modules.clinical","text":"package provides ready--use teal modules can embed teal application. modules generate highly customizable tables, plots outputs often used exploratory data analysis, e.g.: ANCOVA - tm_t_ancova() cox regression - tm_t_coxreg() Kaplan-Meier plot - tm_g_km() logistic regression - tm_t_logistic() bar chart - tm_g_barchart_simple() confidence interval plot - tm_g_ci() binary outcome response table - tm_t_binary_outcome() summary adverse events table - tm_t_events_summary() SMQ table - tm_t_smq() time event table - tm_t_tte() library also offers group patient profile modules targeted clinical statisticians physicians want review data per patient basis. modules present data patient‚Äôs adverse events, severity, current therapy, laboratory results . See package functions / modules.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/articles/teal-modules-clinical.html","id":"a-simple-application","dir":"Articles","previous_headings":"","what":"A simple application","title":"Getting started with teal.modules.clinical","text":"teal.modules.clinical module needs embedded inside shiny / teal application interact . simple application including bar chart module look like : teal.modules.clinical exports modules needs support libraries run teal app flesh functionality. example , tm_g_barchart_simple function teal.modules.clinical init teal function, data_extract_spec, select_spec variable_choices teal.transform functions cdisc_dataset cdisc_data teal.data functions. Let‚Äôs break app pieces: lines load libraries used example. scda package containing sample data ADaM format. use scda load data two R objects: nestcolor optional package can loaded apply standardized NEST color palette module plots. need load teal teal.modules.clinical already depends . next step, use teal create shiny ui server functions can launch using shiny. data argument tells teal input data - two ADaM datasets ADSL ADAE - modules argument indicates modules included application. , include one - tm_g_barchart_simple. Ultimately, example uses shiny launch application: teal.modules.clinical modules allow specifying arguments using teal.transform::choices_selected tm_t_summary module example: Refer API reference specific modules examples information level customization available.","code":"library(scda) library(teal.modules.clinical) library(nestcolor)  ADSL <- synthetic_cdisc_data(\"latest\")$adsl ADAE <- synthetic_cdisc_data(\"latest\")$adae  app <- teal::init(   data = teal.data::cdisc_data(     teal.data::cdisc_dataset(\"ADSL\", ADSL, code = \"ADSL <- synthetic_cdisc_data('latest')$adsl\"),     teal.data::cdisc_dataset(\"ADAE\", ADAE, code = \"ADAE <- synthetic_cdisc_data('latest')$adae\"),     check = FALSE   ),   modules = list(     tm_g_barchart_simple(       label = \"ADAE Analysis\",        x = teal.transform::data_extract_spec(         dataname = \"ADAE\",         select = teal.transform::select_spec(           choices = teal.transform::variable_choices(ADAE),           multiple = FALSE         )       )     )   ) )  if (interactive()) shiny::shinyApp(app$ui, app$server) library(teal.modules.clinical) library(scda) library(nestcolor) ADSL <- synthetic_cdisc_data(\"latest\")$adsl ADAE <- synthetic_cdisc_data(\"latest\")$adae app <- teal::init(   data = teal.data::cdisc_data(     teal.data::cdisc_dataset(\"ADSL\", ADSL, code = \"ADSL <- synthetic_cdisc_data('latest')$adsl\"),     teal.data::cdisc_dataset(\"ADAE\", ADAE, code = \"ADAE <- synthetic_cdisc_data('latest')$adae\"),     check = FALSE   ),   modules = list(     tm_g_barchart_simple(       label = \"ADAE Analysis\",        x = teal.transform::data_extract_spec(         dataname = \"ADAE\",         select = teal.transform::select_spec(choices = teal.transform::variable_choices(ADAE), multiple = FALSE)       )     )   ) ) if (interactive()) shiny::shinyApp(app$ui, app$server) adsl <- scda::synthetic_cdisc_data(\"latest\")$adsl app <- teal::init(   data = teal.data::cdisc_data(     teal.data::cdisc_dataset(\"ADSL\", adsl, code = 'ADSL <- synthetic_cdisc_data(\"latest\")$adsl')   ),   modules = list(     tm_t_summary(       label = \"Demographic Table\",       dataname = \"ADSL\",       arm_var = teal.transform::choices_selected(choices = c(\"ARM\", \"ARMCD\"), selected = \"ARM\"),       summarize_vars = teal.transform::choices_selected(         choices = c(\"SEX\", \"RACE\", \"BMRKR2\", \"EOSDY\", \"DCSREAS\", \"AGE\"),         selected = c(\"SEX\", \"RACE\")       )     )   ) ) if (interactive()) shiny::shinyApp(app$ui, app$server)"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joe Zhu. Author, maintainer. Jana Stoilova. Author. Mahmoud Hallal. Author. Dawid Kaledkowski. Author. Konrad Pagacz. Author. Rosemary Li. Author. Heng Wang. Author. Pawel Rucki. Author. Nikolas Burkoff. Author. F. Hoffmann-La Roche AG. Copyright holder, funder. Vaakesan Sundrelingam. Contributor. Francois Collin. Contributor. Imanol Zubizarreta. Contributor.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Zhu J, Stoilova J, Hallal M, Kaledkowski D, Pagacz K, Li R, Wang H, Rucki P, Burkoff N (2022). teal.modules.clinical: Teal Modules Standard Clinical Outputs. R package version 0.8.13.9037, https://github.com/insightsengineering/teal.modules.clinical.","code":"@Manual{,   title = {teal.modules.clinical: Teal Modules for Standard Clinical Outputs},   author = {Joe Zhu and Jana Stoilova and Mahmoud Hallal and Dawid Kaledkowski and Konrad Pagacz and Rosemary Li and Heng Wang and Pawel Rucki and Nikolas Burkoff},   year = {2022},   note = {R package version 0.8.13.9037},   url = {https://github.com/insightsengineering/teal.modules.clinical}, }"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/index.html","id":"tealmodulesclinical","dir":"","previous_headings":"","what":"Teal Modules for Standard Clinical Outputs","title":"Teal Modules for Standard Clinical Outputs","text":"package contains set standard teal modules used CDISC data order generate many standard outputs used clinical trials. modules include, limited :  - data visualizations: - forest plots - line plots - Kaplan-Meier plots - ‚Ä¶ - statistical model fits: - MMRM - logistic regression - Cox regression - ‚Ä¶ - summary tables: - unique patients - exposure across patients - change baseline parameters - ‚Ä¶ - patient-level profile modules - tm_t_pp_basic_info: table basic information chosen patient - tm_g_pp_vitals: plot patient vitals time - tm_g_pp_patient_timeline: general timeline individual patients - ‚Ä¶  modules teal.modules.clinical use functions R package tern order produce output.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Teal Modules for Standard Clinical Outputs","text":"releases August 2022 recommended create use Github PAT install latest version package. PAT, run following: might need manually install package dependencies installing package without dependencies = FALSE argument install_github may produce error. stable release NEST packages June 2022 also available . See package vignettes browseVignettes(package = \"teal.modules.clinical\") usage package.","code":"Sys.setenv(GITHUB_PAT = \"your_access_token_here\") if (!require(\"remotes\")) install.packages(\"remotes\") remotes::install_github(\"insightsengineering/teal.modules.clinical@*release\")"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/index.html","id":"acknowledgment","dir":"","previous_headings":"","what":"Acknowledgment","title":"Teal Modules for Standard Clinical Outputs","text":"package result joint efforts many developers stakeholders. like thank everyone contributed far!","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/pull_request_template.html","id":null,"dir":"","previous_headings":"","what":"Pull Request","title":"Pull Request","text":"Fixes #nnn","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/add_expr.html","id":null,"dir":"Reference","previous_headings":"","what":"Expression List ‚Äî add_expr","title":"Expression List ‚Äî add_expr","text":"Add new expression list (expressions).","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/add_expr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expression List ‚Äî add_expr","text":"","code":"add_expr(expr_ls, new_expr)"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/add_expr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expression List ‚Äî add_expr","text":"expr_ls (list call) list new expression added. new_expr (call) new expression add.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/add_expr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expression List ‚Äî add_expr","text":"list call.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/add_expr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Expression List ‚Äî add_expr","text":"Offers stricter control add new expressions existing list. list expressions can later used generate pipeline, instance pipe_expr.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/add_expr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expression List ‚Äî add_expr","text":"","code":"lyt <- list() lyt <- teal.modules.clinical:::add_expr(lyt, substitute(rtables::basic_table())) lyt <- teal.modules.clinical:::add_expr(   lyt, substitute(rtables::split_cols_by(var = arm), env = list(armcd = \"ARMCD\")) ) lyt <- teal.modules.clinical:::add_expr(   lyt,   substitute(     test_proportion_diff(       vars = \"rsp\", method = \"cmh\", variables = list(strata = \"strat\")     )   ) ) lyt <- teal.modules.clinical:::add_expr(lyt, quote(rtables::build_table(df = dta))) teal.modules.clinical:::pipe_expr(lyt) #> rtables::basic_table() %>% rtables::split_cols_by(var = arm) %>%  #>     test_proportion_diff(vars = \"rsp\", method = \"cmh\", variables = list(strata = \"strat\")) %>%  #>     rtables::build_table(df = dta)"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/arm_ref_comp_observer.html","id":null,"dir":"Reference","previous_headings":"","what":"Observer for Treatment reference variable ‚Äî arm_ref_comp_observer","title":"Observer for Treatment reference variable ‚Äî arm_ref_comp_observer","text":"Updates reference comparison Treatments selected Treatment variable changes","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/arm_ref_comp_observer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Observer for Treatment reference variable ‚Äî arm_ref_comp_observer","text":"","code":"arm_ref_comp_observer(   session,   input,   output,   id_ref = \"Ref\",   id_comp = \"Comp\",   id_arm_var,   datasets,   dataname = \"ADSL\",   arm_ref_comp,   module,   on_off = shiny::reactive(TRUE),   input_id = \"buckets\",   output_id = \"arms_buckets\" )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/arm_ref_comp_observer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Observer for Treatment reference variable ‚Äî arm_ref_comp_observer","text":"session (environment) shiny session input (character) shiny input output (character) shiny input id_ref (character) id reference Treatment input ui element id_comp (character) id comparison group input ui element id_arm_var (character) id Treatment variable input ui element datasets (FilteredData) object module dataname (character) dataset name arm_ref_comp (unknown) Treatment reference compare variables provided nested list Treatment variable corresponds list specifying default levels reference comparison treatments. module (character) name module called (used produce informative error messages) on_off (logical) reactive can used stop whole observer FALSE. input_id (character) unique id buckets referenced . output_id (character) name UI id output written .","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/arm_ref_comp_observer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Observer for Treatment reference variable ‚Äî arm_ref_comp_observer","text":"","code":"if (FALSE) { ds <- teal:::get_dummy_datasets()  arm_ref_comp <- list(ARMCD = list(ref = \"ARM A\", comp = c(\"ARM B\"))) arm_var <- choices_selected(c(\"ARM\", \"ARMCD\"), \"ARM\") shinyApp(   ui = fluidPage(     teal.widgets::optionalSelectInput(       \"arm\",       \"Treatment Variable\",       choices = arm_var$choices,       selected = arm_var$selected     ),     shiny::uiOutput(\"arms_buckets\"),   ),   server = function(input, output, session) {     shiny::isolate({       teal.modules.clinical:::arm_ref_comp_observer(         session,         input,         output,         id_arm_var = \"arm\",         datasets = ds,         arm_ref_comp = arm_ref_comp,         module = \"example\"       )     })   } ) }"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/as_num.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse text input to numeric vector ‚Äî as_num","title":"Parse text input to numeric vector ‚Äî as_num","text":"Generic parse text numeric vectors. initially designed robust interpretation text input teal modules.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/as_num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse text input to numeric vector ‚Äî as_num","text":"","code":"as_num(str)  # S3 method for default as_num(str)  # S3 method for character as_num(str)  # S3 method for numeric as_num(str)  # S3 method for factor as_num(str)  # S3 method for logical as_num(str)"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/as_num.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse text input to numeric vector ‚Äî as_num","text":"str vector extract numeric .","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/as_num.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse text input to numeric vector ‚Äî as_num","text":"vector numeric directly parsed numeric boolean. list numeric parsed character string, character string associated list item.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/as_num.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parse text input to numeric vector ‚Äî as_num","text":"function intended extract numeric character string, factor levels, boolean return vector numeric.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/as_num.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse text input to numeric vector ‚Äî as_num","text":"","code":"dta <- list(   character = c(\"text10,20.5letter30.!\", \"!-.40$$-50e5[\", NA),   factor    = factor(c(\"]+60e-6, 7.7%%8L\", \"%90sep.100\\\"1L\", NA_character_)),   numeric   = c(1, -5e+2, NA),   logical   = c(TRUE, FALSE, NA) ) lapply(dta, teal.modules.clinical:::as_num) #> $character #> $character[[1]] #> [1] 10.0 20.5 30.0 #>  #> $character[[2]] #> [1] -4e-01 -5e+06 #>  #> $character[[3]] #> [1] NA #>  #>  #> $factor #> $factor[[1]] #> [1] 0.00006 7.70000 8.00000 #>  #> $factor[[2]] #> [1] 90.0  0.1  1.0 #>  #> $factor[[3]] #> [1] NA #>  #>  #> $numeric #> [1]    1 -500   NA #>  #> $logical #> [1]  1  0 NA #>"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/bracket_expr.html","id":null,"dir":"Reference","previous_headings":"","what":"Expressions in Brackets ‚Äî bracket_expr","title":"Expressions in Brackets ‚Äî bracket_expr","text":"Groups several expressions single bracketed expression.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/bracket_expr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expressions in Brackets ‚Äî bracket_expr","text":"","code":"bracket_expr(exprs)"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/bracket_expr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expressions in Brackets ‚Äî bracket_expr","text":"exprs (list call) expressions concatenate single bracketed expression.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/bracket_expr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expressions in Brackets ‚Äî bracket_expr","text":"","code":"library(dplyr) #>  #> Attaching package: ‚Äòdplyr‚Äô #> The following objects are masked from ‚Äòpackage:stats‚Äô: #>  #>     filter, lag #> The following objects are masked from ‚Äòpackage:base‚Äô: #>  #>     intersect, setdiff, setequal, union library(scda) #>  library(tern) adsl <- synthetic_cdisc_data(\"latest\")$adsl adrs <- synthetic_cdisc_data(\"latest\")$adrs  expr1 <- substitute(   expr = anl <- subset(df, PARAMCD == param),   env = list(df = as.name(\"adrs\"), param = \"INVET\") ) expr2 <- substitute(expr = anl$rsp_lab <- d_onco_rsp_label(anl$AVALC)) expr3 <- substitute(   expr = {     anl$is_rsp <- anl$rsp_lab %in%       c(\"Complete Response (CR)\", \"Partial Response (PR)\")   } )  res <- teal.modules.clinical:::bracket_expr(list(expr1, expr2, expr3)) eval(res) table(anl$rsp_lab, anl$is_rsp) #>                            #>                            FALSE TRUE #>   Complete Response (CR)       0  164 #>   Not Evaluable (NE)          18    0 #>   Partial Response (PR)        0  101 #>   Progressive Disease (PD)    73    0 #>   Stable Disease (SD)         44    0"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/call_concatenate.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate expressions via a binary operator ‚Äî call_concatenate","title":"Concatenate expressions via a binary operator ‚Äî call_concatenate","text":"e.g. combine + ggplot without introducing parentheses due associativity","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/call_concatenate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate expressions via a binary operator ‚Äî call_concatenate","text":"","code":"call_concatenate(args, bin_op = \"+\")"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/call_concatenate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatenate expressions via a binary operator ‚Äî call_concatenate","text":"args arguments concatenate operator bin_op binary operator concatenate ","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/call_concatenate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concatenate expressions via a binary operator ‚Äî call_concatenate","text":"","code":"if (FALSE) { # What we want to achieve call(\"+\", quote(f), quote(g)) call(\"+\", quote(f), call(\"+\", quote(g), quote(h))) # parentheses not wanted call(\"+\", call(\"+\", quote(f), quote(g)), quote(h)) # as expected without unnecessary parentheses Reduce(function(existing, new) call(\"+\", existing, new), list(quote(f), quote(g), quote(h)))  # how we do it call_concatenate(list(quote(f), quote(g), quote(h))) call_concatenate(list(quote(f))) call_concatenate(list()) call_concatenate(   list(quote(ggplot2::ggplot(mtcars)), quote(ggplot2::geom_point(ggplot2::aes(wt, mpg)))) )  eval(   call_concatenate(     list(quote(ggplot2::ggplot(mtcars)), quote(ggplot2::geom_point(ggplot2::aes(wt, mpg))))   ) ) }"},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/check_arm_ref_comp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the Treatment variable is reference or compare ‚Äî check_arm_ref_comp","text":"","code":"check_arm_ref_comp(x, df_to_check, module)"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/check_arm_ref_comp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the Treatment variable is reference or compare ‚Äî check_arm_ref_comp","text":"x (character) Name variable df_to_check (data.frame) table check module character teal module ref comp called ","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/check_arm_ref_comp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the Treatment variable is reference or compare ‚Äî check_arm_ref_comp","text":"TRUE FALSE whether variable ref comp","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/clean_description.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean a categorical variable descriptions ‚Äî clean_description","title":"Clean a categorical variable descriptions ‚Äî clean_description","text":"Cleaning categorical variable descriptions presenting.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/clean_description.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean a categorical variable descriptions ‚Äî clean_description","text":"","code":"clean_description(x)"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/clean_description.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean a categorical variable descriptions ‚Äî clean_description","text":"x (character) vector categories descriptions.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/color_lab_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Mapping function for Laboratory Table ‚Äî color_lab_values","title":"Mapping function for Laboratory Table ‚Äî color_lab_values","text":"Map value level characters values proper html tags, colors icons.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/color_lab_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mapping function for Laboratory Table ‚Äî color_lab_values","text":"","code":"color_lab_values(   x,   classes = c(\"HIGH\", \"NORMAL\", \"LOW\"),   colors = list(HIGH = \"red\", NORMAL = \"grey\", LOW = \"blue\"),   default_color = \"black\",   icons = list(HIGH = \"glyphicon glyphicon-arrow-up\", LOW =     \"glyphicon glyphicon-arrow-down\") )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/color_lab_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mapping function for Laboratory Table ‚Äî color_lab_values","text":"x (character) vector elements format (value level). classes (character) classes vector. colors (list) color per class. default_color (character) default color. icons (list) certain icons per level.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/column_annotation_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Get full label, useful for annotating plots ‚Äî column_annotation_label","title":"Get full label, useful for annotating plots ‚Äî column_annotation_label","text":"Get full label, useful annotating plots","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/column_annotation_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get full label, useful for annotating plots ‚Äî column_annotation_label","text":"","code":"column_annotation_label(dataset, column, omit_raw_name = FALSE)"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/column_annotation_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get full label, useful for annotating plots ‚Äî column_annotation_label","text":"dataset data.frame dataset column character column get label omit_raw_name logical omits raw name square brackets label found","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/column_annotation_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get full label, useful for annotating plots ‚Äî column_annotation_label","text":"\"Label [Column name]\" label exists, otherwise \"Column name\"","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/column_annotation_label.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get full label, useful for annotating plots ‚Äî column_annotation_label","text":"","code":"data <- mtcars column_annotation_label(data, \"cyl\") #> [1] \"cyl\" attr(data[[\"cyl\"]], \"label\") <- \"Cylinder\" column_annotation_label(data, \"cyl\") #> [1] \"Cylinder [cyl]\" column_annotation_label(data, \"cyl\", omit_raw_name = TRUE) #> [1] \"Cylinder\" if (FALSE) { ANL <- scda::synthetic_cdisc_data(\"latest\")$adsl column_annotation_label(ANL, \"ACTARM\") }"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/control_tte.html","id":null,"dir":"Reference","previous_headings":"","what":"Control Function for Time-to-Event Teal Module ‚Äî control_tte","title":"Control Function for Time-to-Event Teal Module ‚Äî control_tte","text":"Controls arguments Cox regressions Survival analysis results.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/control_tte.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Control Function for Time-to-Event Teal Module ‚Äî control_tte","text":"","code":"control_tte(   surv_time = list(conf_level = 0.95, conf_type = \"plain\", quantiles = c(0.25, 0.75)),   coxph = list(pval_method = \"log-rank\", ties = \"efron\", conf_level = 0.95),   surv_timepoint = control_surv_timepoint(conf_level = 0.95, conf_type = c(\"plain\",     \"none\", \"log\", \"log-log\")) )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/control_tte.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Control Function for Time-to-Event Teal Module ‚Äî control_tte","text":"surv_time (list) parameters comparison, specified using tern::control_surv_time. coxph (list) parameters comparison, specified using tern::control_coxph. surv_timepoint (list) parameters comparison, specified using tern::control_surv_timepoint.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/cs_to_des_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert choices_selected to data_extract_spec with only filter_spec ‚Äî cs_to_des_filter","title":"Convert choices_selected to data_extract_spec with only filter_spec ‚Äî cs_to_des_filter","text":"Convert choices_selected data_extract_spec filter_spec","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/cs_to_des_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert choices_selected to data_extract_spec with only filter_spec ‚Äî cs_to_des_filter","text":"","code":"cs_to_des_filter(cs, dataname, multiple = FALSE, include_vars = FALSE)"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/cs_to_des_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert choices_selected to data_extract_spec with only filter_spec ‚Äî cs_to_des_filter","text":"cs (choices_selected) object transformed. See teal.transform::choices_selected() details. dataname (character) name data multiple (logical) Whether multiple values shall allowed shiny selectInput. include_vars (flag) whether include filter variables fixed selection result. can useful preserving reuse rtables code e.g.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/cs_to_des_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert choices_selected to data_extract_spec with only filter_spec ‚Äî cs_to_des_filter","text":"(teal.transform::data_extract_spec())","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/cs_to_des_select.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert choices_selected to data_extract_spec with only select_spec ‚Äî cs_to_des_select","title":"Convert choices_selected to data_extract_spec with only select_spec ‚Äî cs_to_des_select","text":"Convert choices_selected data_extract_spec select_spec","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/cs_to_des_select.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert choices_selected to data_extract_spec with only select_spec ‚Äî cs_to_des_select","text":"","code":"cs_to_des_select(cs, dataname, multiple = FALSE, ordered = FALSE)"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/cs_to_des_select.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert choices_selected to data_extract_spec with only select_spec ‚Äî cs_to_des_select","text":"cs (choices_selected) object transformed. See teal.transform::choices_selected() details. dataname (character) name data multiple (logical) Whether multiple values shall allowed shiny selectInput. ordered (logical(1)) Flags whether selection order tracked.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/cs_to_des_select.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert choices_selected to data_extract_spec with only select_spec ‚Äî cs_to_des_select","text":"(teal.transform::data_extract_spec())","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/cs_to_filter_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert choices_selected to filter_spec ‚Äî cs_to_filter_spec","title":"Convert choices_selected to filter_spec ‚Äî cs_to_filter_spec","text":"Convert choices_selected filter_spec","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/cs_to_filter_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert choices_selected to filter_spec ‚Äî cs_to_filter_spec","text":"","code":"cs_to_filter_spec(cs, multiple = FALSE)"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/cs_to_filter_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert choices_selected to filter_spec ‚Äî cs_to_filter_spec","text":"cs (choices_selected) object transformed. See teal.transform::choices_selected() details. multiple (logical) Whether multiple values shall allowed shiny selectInput.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/cs_to_filter_spec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert choices_selected to filter_spec ‚Äî cs_to_filter_spec","text":"(teal.transform::filter_spec())","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/cs_to_select_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert choices_selected to select_spec ‚Äî cs_to_select_spec","title":"Convert choices_selected to select_spec ‚Äî cs_to_select_spec","text":"Convert choices_selected select_spec","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/cs_to_select_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert choices_selected to select_spec ‚Äî cs_to_select_spec","text":"","code":"cs_to_select_spec(cs, multiple = FALSE, ordered = FALSE)"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/cs_to_select_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert choices_selected to select_spec ‚Äî cs_to_select_spec","text":"cs (choices_selected) object transformed. See teal.transform::choices_selected() details. multiple (logical) Whether multiple values shall allowed shiny selectInput. ordered (logical(1)) Flags whether selection order tracked.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/cs_to_select_spec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert choices_selected to select_spec ‚Äî cs_to_select_spec","text":"(select_spec)","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/dyn_assertion.html","id":null,"dir":"Reference","previous_headings":"","what":"Dynamic assertion ‚Äî dyn_assertion","title":"Dynamic assertion ‚Äî dyn_assertion","text":"Verifies assertions dynamic outputs.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/dyn_assertion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dynamic assertion ‚Äî dyn_assertion","text":"","code":"teal_enough_rows(data, min_nrow)  teal_has_element(str, ...)"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/dyn_assertion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dynamic assertion ‚Äî dyn_assertion","text":"data (dataframe). min_nrow (number) minimum number rows valid analysis. str (name) name object must exist. ... (character) label displayed.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/dyn_assertion.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Dynamic assertion ‚Äî dyn_assertion","text":"teal_enough_rows(): dataset large enough. teal_has_element(): element exist.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/dyn_assertion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dynamic assertion ‚Äî dyn_assertion","text":"","code":"library(assertthat) library(testthat) #>  #> Attaching package: ‚Äòtestthat‚Äô #> The following object is masked from ‚Äòpackage:dplyr‚Äô: #>  #>     matches #> The following objects are masked from ‚Äòpackage:magrittr‚Äô: #>  #>     equals, is_less_than, not expect_error(assertthat::assert_that(teal_enough_rows(data = iris, min_nrow = 1500)))  armcd <- NULL expect_error(assertthat::assert_that(teal_has_element(str = armcd, \"ARMCD\")))"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/extract_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracts html id for data_extract_ui ‚Äî extract_input","title":"Extracts html id for data_extract_ui ‚Äî extract_input","text":"data_extract_ui located extended html id. use ns(\"original id\") reference, extended specific suffixes.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/extract_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracts html id for data_extract_ui ‚Äî extract_input","text":"","code":"extract_input(varname, dataname, filter = FALSE)"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/extract_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracts html id for data_extract_ui ‚Äî extract_input","text":"varname (character) original html id.  retrieved ns(\"original id\") ui function session$ns(\"original id\")/\"original id\" server function. dataname (character)dataname data_extract input. might retrieved like data_extract_spec(...)[[1]]$dataname. filter optional, (logical) connected extract_data_spec objects passed filter argument","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/facet_grid_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"Facetting formula x_facet ~ y_facet ‚Äî facet_grid_formula","title":"Facetting formula x_facet ~ y_facet ‚Äî facet_grid_formula","text":"Replaces x_facet y_facet . empty character","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/facet_grid_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Facetting formula x_facet ~ y_facet ‚Äî facet_grid_formula","text":"","code":"facet_grid_formula(x_facet, y_facet)"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/facet_grid_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Facetting formula x_facet ~ y_facet ‚Äî facet_grid_formula","text":"x_facet (character(1)) name x facet, empty, facet along x. y_facet (character(1)) name y facet, empty, facet along y.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/facet_grid_formula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Facetting formula x_facet ~ y_facet ‚Äî facet_grid_formula","text":"facet grid formula formula(x_facet ~ y_facet)","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/facet_grid_formula.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Facetting formula x_facet ~ y_facet ‚Äî facet_grid_formula","text":"","code":"teal.modules.clinical:::facet_grid_formula(\"x\", \"y\") #> y ~ x #> <environment: 0x56188ce75830>"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/get_g_forest_obj_var_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function for extracting paramcd for forest plots ‚Äî get_g_forest_obj_var_name","title":"Utility function for extracting paramcd for forest plots ‚Äî get_g_forest_obj_var_name","text":"Utility function extracting paramcd forest plots","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/get_g_forest_obj_var_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function for extracting paramcd for forest plots ‚Äî get_g_forest_obj_var_name","text":"","code":"get_g_forest_obj_var_name(paramcd, input, filter_idx = 1)"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/get_g_forest_obj_var_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function for extracting paramcd for forest plots ‚Äî get_g_forest_obj_var_name","text":"paramcd teal.transform::data_extract_spec() variable value designating studied parameter. input shinyapp input filter_idx filter section index (default 1)","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/get_paramcd_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the associated param value for paramcd ‚Äî get_paramcd_label","title":"Extract the associated param value for paramcd ‚Äî get_paramcd_label","text":"Utility function extracting param value associated paramcd value label. param value paramcd label, paramcd value returned. used generating title.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/get_paramcd_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the associated param value for paramcd ‚Äî get_paramcd_label","text":"","code":"get_paramcd_label(anl, paramcd)"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/get_paramcd_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the associated param value for paramcd ‚Äî get_paramcd_label","text":"anl Analysis dataset paramcd teal.transform::data_extract_spec() variable value designating studied parameter.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/get_var_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Get variable labels ‚Äî get_var_labels","title":"Get variable labels ‚Äî get_var_labels","text":"Get variable labels","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/get_var_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get variable labels ‚Äî get_var_labels","text":"","code":"get_var_labels(datasets, dataname, vars)"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/get_var_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get variable labels ‚Äî get_var_labels","text":"datasets (teal::FilteredData) Data built teal dataname (character) name dataset vars (character) Column names data","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/get_var_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get variable labels ‚Äî get_var_labels","text":"character variable labels.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/h_concat_expr.html","id":null,"dir":"Reference","previous_headings":"","what":"Expression Deparsing ‚Äî h_concat_expr","title":"Expression Deparsing ‚Äî h_concat_expr","text":"Deparse expression string.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/h_concat_expr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expression Deparsing ‚Äî h_concat_expr","text":"","code":"h_concat_expr(expr)"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/h_concat_expr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expression Deparsing ‚Äî h_concat_expr","text":"expr (call) object can used .","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/h_concat_expr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expression Deparsing ‚Äî h_concat_expr","text":"string.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/h_concat_expr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expression Deparsing ‚Äî h_concat_expr","text":"","code":"expr <- quote(   rtables::basic_table() %>%     rtables::split_cols_by(var = \"ARMCD\") %>%     test_proportion_diff(       vars = \"rsp\", method = \"cmh\", variables = list(strata = \"strat\")     ) %>%     rtables::build_table(df = dta) )  teal.modules.clinical:::h_concat_expr(expr) #> [1] \"rtables::basic_table() %>% rtables::split_cols_by(var = \\\"ARMCD\\\") %>%      test_proportion_diff(vars = \\\"rsp\\\", method = \\\"cmh\\\", variables = list(strata = \\\"strat\\\")) %>%      rtables::build_table(df = dta)\""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/is.cs_or_des.html","id":null,"dir":"Reference","previous_headings":"","what":"Whether object is of class teal.transform::choices_selected() or teal.transform::data_extract_spec() ‚Äî is.cs_or_des","title":"Whether object is of class teal.transform::choices_selected() or teal.transform::data_extract_spec() ‚Äî is.cs_or_des","text":"Whether object class teal.transform::choices_selected() teal.transform::data_extract_spec()","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/is.cs_or_des.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Whether object is of class teal.transform::choices_selected() or teal.transform::data_extract_spec() ‚Äî is.cs_or_des","text":"","code":"is.cs_or_des(x)"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/is.cs_or_des.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Whether object is of class teal.transform::choices_selected() or teal.transform::data_extract_spec() ‚Äî is.cs_or_des","text":"x object checked","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/is.cs_or_des.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Whether object is of class teal.transform::choices_selected() or teal.transform::data_extract_spec() ‚Äî is.cs_or_des","text":"(logical)","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/make_barchart_simple_call.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot2 call to generate simple barchart ‚Äî make_barchart_simple_call","title":"ggplot2 call to generate simple barchart ‚Äî make_barchart_simple_call","text":"ggplot2 call generate simple barchart","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/make_barchart_simple_call.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot2 call to generate simple barchart ‚Äî make_barchart_simple_call","text":"","code":"make_barchart_simple_call(   y_name,   x_name = NULL,   fill_name = NULL,   x_facet_name = NULL,   y_facet_name = NULL,   label_bars = TRUE,   barlayout = c(\"side_by_side\", \"stacked\"),   flip_axis = FALSE,   rotate_bar_labels = FALSE,   rotate_x_label = FALSE,   rotate_y_label = FALSE,   expand_y_range = 0,   ggplot2_args = teal.widgets::ggplot2_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/make_barchart_simple_call.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggplot2 call to generate simple barchart ‚Äî make_barchart_simple_call","text":"fill_name (NULL, character(1)) name variable distinguishing color fill. x_facet_name (NULL, character(1)) name variable facet plot horizontally. y_facet_name (NULL, character(1)) name variable facet plot vertically. label_bars (NULL, logical(1)) whether label bars. barlayout (NULL, character(1))type layout - \"side_by_side\" \"stacked\" (default). flip_axis (NULL, character(1)) whether flip axis. rotate_bar_labels (NULL, logical(1)) whether rotate bar label 45 degrees. rotate_x_label (NULL, logical(1)) whether rotate x-axis label 45 degrees. rotate_y_label (NULL, logical(1)) whether rotate y-axis label 45 degrees. expand_y_range (NULL, numeric(1)) fraction y-axis range expand . ggplot2_args optional, (ggplot2_args) object created teal.widgets::ggplot2_args() settings module plot. argument merged option teal.ggplot2_args default module arguments (hard coded module body). details, see help vignette: vignette(\"custom-ggplot2-arguments\", package = \"teal.widgets\"). yname (NULL, character(1)) name yaxis variable. xname (NULL, character(1)) name xaxis variable.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/make_barchart_simple_call.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggplot2 call to generate simple barchart ‚Äî make_barchart_simple_call","text":"call","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/make_barchart_simple_call.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggplot2 call to generate simple barchart ‚Äî make_barchart_simple_call","text":"","code":"teal.modules.clinical:::make_barchart_simple_call(y_name = \"y\", x_name = \"x\") #> plot <- ggplot2::ggplot(counts) + ggplot2::aes_string(x = \"x\") +  #>     ggplot2::geom_col(ggplot2::aes_string(y = \"y\"), position = ggplot2::position_dodge(0.9),  #>         fill = \"#b6cae9\") + ggplot2::geom_text(ggplot2::aes_string(y = \"y\",  #>     label = \"y\"), stat = \"identity\", angle = 0, position = ggplot2::position_dodge(0.9),  #>     hjust = 0.5, vjust = -1) + ggplot2::labs(x = column_annotation_label(counts,  #>     \"x\"))"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/module_arguments.html","id":null,"dir":"Reference","previous_headings":"","what":"Standard Module Arguments ‚Äî module_arguments","title":"Standard Module Arguments ‚Äî module_arguments","text":"documentation function lists arguments teal modules used repeatedly express analysis.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/module_arguments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standard Module Arguments ‚Äî module_arguments","text":"arm_var (choices_selected data_extract_spec) object available choices preselected option variable names can used arm_var. defines grouping variable(s) results table. two elements selected arm_var, second variable nested first variable. arm_ref_comp optional, (list) specified must named list element corresponding arm variable ADSL element must another list (possibly delayed teal.transform::variable_choices() delayed teal.transform::value_choices() elements named ref comp defined default reference comparison arms arm variable changed. id_var (choices_selected data_extract_spec) object specifying variable name subject id. summarize_vars (choices_selected data_extract_spec) names variables summarized. strata_var (choices_selected data_extract_spec) names variables stratified analysis. parentname (character) parent analysis data used teal module, usually refers ADSL. dataname (character) analysis data used teal module. label (character) menu item label module teal app. paramcd (choices_selected data_extract_spec) variable value designating studied parameter. useNA (character) whether missing data (NA) displayed level. na_level (string) used replace NA empty values character factor variables data. denominator (character) chooses percentages calculated. option N, reference population column total used denominator. option n, number non-missing records row column intersection used denominator. omit chosen, percentage omitted. avisit (choices_selected data_extract_spec) value analysis visit AVISIT interest. cov_var (choices_selected data_extract_spec) object available choices preselected option covariates variables. aval_var (choices_selected data_extract_spec) object available choices preselected option analysis variable. cnsr_var (choices_selected data_extract_spec) object available choices preselected option censoring variable. conf_level (choices_selected) object available choices preselected option confidence level, within range (0, 1). add_total (logical) whether include column total number patients. hlt (choices_selected data_extract_spec) name variable high level term events. llt (choices_selected data_extract_spec) name variable low level term events. visit_var (choices_selected data_extract_spec) object available choices preselected option variable names can used visit variable. Must factor dataname. by_vars (choices_selected data_extract_spec) object available choices preselected option variable names used split summary rows. plot_height optional, (numeric) vector length three c(value, min, max). Specifies height main plot renders slider plot interactively adjust plot height. plot_width optional, (numeric) vector length three c(value, min, max). Specifies width main plot renders slider plot interactively adjust plot width. time_points (choices_selected) object available choices preselected option time points can used tern::surv_timepoint(). time_unit_var (choices_selected data_extract_spec) object available choices preselected option time unit variable. drop_arm_levels (logical) drop unused arm_var levels. TRUE, arm_var levels set used dataname dataset. FALSE, arm_var levels set used parantname dataset. pre_output optional, (shiny.tag) text placed output put output context. example title. post_output optional, (shiny.tag) text placed output put output context. example shiny::helpText() elements useful. subgroup_var (choices_selected data_extract_spec) object available choices preselected option variable names can used default subgroups. treatment_flag_var (choices_selected data_extract_spec) treatment flag variable. treatment_flag (choices_selected] data_extract_spec) value indicating treatment records treatment_flag_var. basic_table_args optional, (basic_table_args) object created teal.widgets::basic_table_args() settings module table. argument merged option teal.basic_table_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-basic-table-arguments\", package = \"teal.widgets\"). ggplot2_args optional, (ggplot2_args) object created teal.widgets::ggplot2_args() settings module plot. argument merged option teal.ggplot2_args default module arguments (hard coded module body). details, see help vignette: vignette(\"custom-ggplot2-arguments\", package = \"teal.widgets\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/module_arguments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standard Module Arguments ‚Äî module_arguments","text":"module object generated teal::module() function.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/module_arguments.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Standard Module Arguments ‚Äî module_arguments","text":"Although function just returns NULL two uses, teal module users provides documentation arguments commonly consistently used framework. developer adds single reference point import roxygen argument description : @inheritParams module_arguments","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/pipe_expr.html","id":null,"dir":"Reference","previous_headings":"","what":"Expressions as a Pipeline ‚Äî pipe_expr","title":"Expressions as a Pipeline ‚Äî pipe_expr","text":"Concatenate expressions single pipeline-flavor expression.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/pipe_expr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expressions as a Pipeline ‚Äî pipe_expr","text":"","code":"pipe_expr(exprs, pipe_str = \"%>%\")"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/pipe_expr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expressions as a Pipeline ‚Äî pipe_expr","text":"exprs (list call) expressions concatenate pipeline (%>%). pipe_str (character) character separates expressions.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/pipe_expr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expressions as a Pipeline ‚Äî pipe_expr","text":"","code":"result <- teal.modules.clinical:::pipe_expr(   list(     expr1 = substitute(df),     expr2 = substitute(head)   ) ) result #> df %>% head"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/prepare_arm.html","id":null,"dir":"Reference","previous_headings":"","what":"Expression: Arm Preparation ‚Äî prepare_arm","title":"Expression: Arm Preparation ‚Äî prepare_arm","text":"function generate standard expression pre-processing dataset teal module applications. especially interest preprocessing steps needs applied similarly several datasets (e.g. ADSL ADRS).","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/prepare_arm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expression: Arm Preparation ‚Äî prepare_arm","text":"","code":"prepare_arm(   dataname,   arm_var,   ref_arm,   comp_arm,   compare_arm = !is.null(ref_arm),   ref_arm_val = paste(ref_arm, collapse = \"/\"),   drop = TRUE )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/prepare_arm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expression: Arm Preparation ‚Äî prepare_arm","text":"dataname (character) analysis data used teal module. arm_var (character) variable names can used arm_var. ref_arm (character) level reference arm case arm comparison. comp_arm (character) level comparison arm case arm comparison. compare_arm (logical) triggers comparison study arms. ref_arm_val (character) replacement name reference level. drop (logical) drop unused variable levels.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/prepare_arm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Expression: Arm Preparation ‚Äî prepare_arm","text":"teal.modules.clinical, user interface includes manipulation study arms. Classically: arm variable (e.g. ARM, ACTARM), reference arm (0 ), comparison arm (1 ) possibility combine comparison arms. Note arms compared , produced expression reduced optionally dropping non-represented levels arm. comparing arms, pre-processing includes three steps: Filtering dataset retain arms interest (reference comparison). Optional, one arm designated reference combined single level. reference explicitly reassigned non-represented levels arm dropped.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/prepare_arm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expression: Arm Preparation ‚Äî prepare_arm","text":"","code":"if (FALSE) { teal.modules.clinical::prepare_arm(   dataname = \"adrs\",   arm_var = \"ARMCD\",   ref_arm = \"ARM A\",   comp_arm = c(\"ARM B\", \"ARM C\") )  teal.modules.clinical::prepare_arm(   dataname = \"adsl\",   arm_var = \"ARMCD\",   ref_arm = c(\"ARM B\", \"ARM C\"),   comp_arm = \"ARM A\" ) }"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/prepare_arm_levels.html","id":null,"dir":"Reference","previous_headings":"","what":"Expression: Prepare Arm Levels ‚Äî prepare_arm_levels","title":"Expression: Prepare Arm Levels ‚Äî prepare_arm_levels","text":"function generates standard expression pre-processing dataset arm levels used apply steps safety teal modules.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/prepare_arm_levels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expression: Prepare Arm Levels ‚Äî prepare_arm_levels","text":"","code":"prepare_arm_levels(dataname, parentname, arm_var, drop_arm_levels = TRUE)"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/prepare_arm_levels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expression: Prepare Arm Levels ‚Äî prepare_arm_levels","text":"dataname (character) analysis data used teal module. parentname (character) parent analysis data used teal module, usually refers ADSL. arm_var (character) variable names can used arm_var. drop_arm_levels (logical) drop unused arm_var levels. TRUE, arm_var levels set used dataname dataset. FALSE, arm_var levels set used parantname dataset.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/prepare_arm_levels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expression: Prepare Arm Levels ‚Äî prepare_arm_levels","text":"","code":"if (FALSE) { teal.modules.clinical::prepare_arm_levels(   dataname = \"adae\",   parentname = \"adsl\",   arm_var = \"ARMCD\",   drop_arm_levels = TRUE )  teal.modules.clinical::prepare_arm_levels(   dataname = \"adae\",   parentname = \"adsl\",   arm_var = \"ARMCD\",   drop_arm_levels = FALSE ) }"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/split_choices.html","id":null,"dir":"Reference","previous_headings":"","what":"Split choices_selected objects with interactions into\ntheir component variables ‚Äî split_choices","title":"Split choices_selected objects with interactions into\ntheir component variables ‚Äî split_choices","text":"Split choices_selected objects interactions component variables","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/split_choices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split choices_selected objects with interactions into\ntheir component variables ‚Äî split_choices","text":"","code":"split_choices(x)"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/split_choices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split choices_selected objects with interactions into\ntheir component variables ‚Äî split_choices","text":"x (choices_selected) object interaction terms","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/split_choices.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Split choices_selected objects with interactions into\ntheir component variables ‚Äî split_choices","text":"uses regex \\\\*|: perform split.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/split_col_expr.html","id":null,"dir":"Reference","previous_headings":"","what":"Split-Column Expression ‚Äî split_col_expr","title":"Split-Column Expression ‚Äî split_col_expr","text":"Renders expression column split rtables depending : expected arm comparison expected arm combination","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/split_col_expr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split-Column Expression ‚Äî split_col_expr","text":"","code":"split_col_expr(compare, combine, ref, arm_var)"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/split_col_expr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split-Column Expression ‚Äî split_col_expr","text":"compare (logical) TRUE reference level included. combine (logical) TRUE group combination included. ref (character) reference level (used combine = TRUE). arm_var (character) arm grouping variable name.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/split_interactions.html","id":null,"dir":"Reference","previous_headings":"","what":"Split interaction terms into their component variables ‚Äî split_interactions","title":"Split interaction terms into their component variables ‚Äî split_interactions","text":"Split interaction terms component variables","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/split_interactions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split interaction terms into their component variables ‚Äî split_interactions","text":"","code":"split_interactions(x, by = \"\\\\*|:\")"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/split_interactions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split interaction terms into their component variables ‚Äî split_interactions","text":"x (character) string representing interaction usually form x:y x*y. (character) regex split interaction term .","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/styled_expr.html","id":null,"dir":"Reference","previous_headings":"","what":"Styled Code Printing ‚Äî styled_expr","title":"Styled Code Printing ‚Äî styled_expr","text":"Deparse expression display code following NEST conventions.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/styled_expr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Styled Code Printing ‚Äî styled_expr","text":"","code":"styled_expr(expr)"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/styled_expr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Styled Code Printing ‚Äî styled_expr","text":"expr (call) possibly understood .","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/styled_expr.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Styled Code Printing ‚Äî styled_expr","text":"package prettycode must installed turn colored output, hence warning.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/styled_expr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Styled Code Printing ‚Äî styled_expr","text":"","code":"expr <- quote(   rtables::basic_table() %>%     rtables::split_cols_by(var = \"ARMCD\") %>%     test_proportion_diff(       vars = \"rsp\", method = \"cmh\", variables = list(strata = \"strat\")     ) %>%     rtables::build_table(df = dta) )  teal.modules.clinical:::styled_expr(expr) #> Warning: Could not use colored = TRUE, as the package prettycode is not installed. Please install it if you want to see colored output or see `?print.vertical` for more information. #> rtables::basic_table() %>% #>   rtables::split_cols_by(var = \"ARMCD\") %>% #>   test_proportion_diff(vars = \"rsp\", method = \"cmh\", variables = list(strata = \"strat\")) %>% #>   rtables::build_table(df = dta)"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/substitute_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Substitute Names in a Quoted Expression ‚Äî substitute_names","title":"Substitute Names in a Quoted Expression ‚Äî substitute_names","text":"function substitutes names left- right-hand sides quoted expression. addition can also standard substitutions right-hand side.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/substitute_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Substitute Names in a Quoted Expression ‚Äî substitute_names","text":"","code":"substitute_names(expr, names, others = list())  h_subst_lhs_names(qexpr, names)  substitute_lhs_names(qexpr, names)  substitute_rhs(qexpr, env)"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/substitute_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Substitute Names in a Quoted Expression ‚Äî substitute_names","text":"expr (language) expression. names (named list name) requested name substitutions. others (named list) requested substitutions happen right-hand side. qexpr (language) quoted expression. env (environment list) requested variable substitutions.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/substitute_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Substitute Names in a Quoted Expression ‚Äî substitute_names","text":"modified expression.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/substitute_names.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Substitute Names in a Quoted Expression ‚Äî substitute_names","text":"h_subst_lhs_names(): Helper function just substitute top-level names left-hand side quoted expression. substitute_lhs_names(): recursively substitutes names left-hand sides quoted expression. substitute_rhs(): substitutes right-hand side quoted expression. Note just synonym substitute_q().","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/substitute_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Substitute Names in a Quoted Expression ‚Äî substitute_names","text":"","code":"teal.modules.clinical:::substitute_names(   mutate(a = a + b, b = c + d),   names = list(a = as.name(\"d\"), b = as.name(\"e\")) ) #> mutate(d = d + e, e = c + d) teal.modules.clinical:::substitute_names(   c(a = fun(a), b = 3),   names = list(a = as.name(\"b\"), b = as.name(\"c\")) ) #> c(b = fun(b), c = 3) teal.modules.clinical:::substitute_names(   c(a = fun(a), b = bla),   names = list(a = as.name(\"b\"), b = as.name(\"c\")),   others = list(bla = \"foo\") ) #> c(b = fun(b), c = \"foo\")"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/substitute_q.html","id":null,"dir":"Reference","previous_headings":"","what":"Substitute in Quoted Expressions ‚Äî substitute_q","title":"Substitute in Quoted Expressions ‚Äî substitute_q","text":"version substitute needed substitute evaluate first argument, often useful able modify quoted expression.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/substitute_q.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Substitute in Quoted Expressions ‚Äî substitute_q","text":"","code":"substitute_q(qexpr, env)"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/substitute_q.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Substitute in Quoted Expressions ‚Äî substitute_q","text":"qexpr (language) quoted expression. env (environment list) requested variable substitutions.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/substitute_q.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Substitute in Quoted Expressions ‚Äî substitute_q","text":"modified expression.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/substitute_q.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Substitute in Quoted Expressions ‚Äî substitute_q","text":"simplified package pryr avoid another dependency.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/substitute_q.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Substitute in Quoted Expressions ‚Äî substitute_q","text":"","code":"x <- quote(a + b) substitute(x, list(a = 1, b = 2)) #> x teal.modules.clinical:::substitute_q(x, list(a = 1, b = 2)) #> 1 + 2"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/teal.modules.clinical.html","id":null,"dir":"Reference","previous_headings":"","what":"Teal Modules for Standard Clinical Outputs ‚Äî teal.modules.clinical","title":"Teal Modules for Standard Clinical Outputs ‚Äî teal.modules.clinical","text":"Provides teal modules standard clinical trials outputs. teal modules add encoding panel interactively change encodings within teal.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_abnormality.html","id":null,"dir":"Reference","previous_headings":"","what":"Template: Abnormality Summary Table ‚Äî template_abnormality","title":"Template: Abnormality Summary Table ‚Äî template_abnormality","text":"Template: Abnormality Summary Table","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_abnormality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Template: Abnormality Summary Table ‚Äî template_abnormality","text":"","code":"template_abnormality(   parentname,   dataname,   arm_var,   id_var = \"USUBJID\",   by_vars,   abnormal = list(low = c(\"LOW\", \"LOW LOW\"), high = c(\"HIGH\", \"HIGH HIGH\")),   grade = \"ANRIND\",   baseline_var = \"BNRIND\",   treatment_flag_var = \"ONTRTFL\",   treatment_flag = \"Y\",   add_total = FALSE,   exclude_base_abn = FALSE,   drop_arm_levels = TRUE,   na_level = \"<Missing>\",   basic_table_args = teal.widgets::basic_table_args(),   tbl_title )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_abnormality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Template: Abnormality Summary Table ‚Äî template_abnormality","text":"parentname (character) parent analysis data used teal module, usually refers ADSL. dataname (character) analysis data used teal module. arm_var (character) variable names can used arm_var. id_var (character) variable name subject id. by_vars (character) variable names used split summary rows. abnormal (named list) indicating abnormality direction grades. grade (character) name variable can used specify abnormality grade. Variable must factor. baseline_var (character) name variable baseline abnormality grade. treatment_flag_var (character) name treatment flag variable. treatment_flag (character) name value indicating treatment records treatment_flag_var. add_total (logical) whether include column total number patients. exclude_base_abn (logical) whether exclude patients abnormal values baseline. drop_arm_levels (logical) drop unused arm_var levels. TRUE, arm_var levels set used dataname dataset. FALSE, arm_var levels set used parantname dataset. na_level (character) NA level input dataset, default \"<Missing>\". basic_table_args optional, (basic_table_args) object created teal.widgets::basic_table_args() settings module table. argument merged option teal.basic_table_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-basic-table-arguments\", package = \"teal.widgets\"). tbl_title (character) Title label variables bars","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_abnormality_by_worst_grade.html","id":null,"dir":"Reference","previous_headings":"","what":"Template: Laboratory test results with highest grade post-baseline ‚Äî template_abnormality_by_worst_grade","title":"Template: Laboratory test results with highest grade post-baseline ‚Äî template_abnormality_by_worst_grade","text":"Template: Laboratory test results highest grade post-baseline","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_abnormality_by_worst_grade.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Template: Laboratory test results with highest grade post-baseline ‚Äî template_abnormality_by_worst_grade","text":"","code":"template_abnormality_by_worst_grade(   parentname,   dataname,   arm_var,   id_var = \"USUBJID\",   paramcd = \"PARAMCD\",   atoxgr_var = \"ATOXGR\",   worst_high_flag_var = \"WGRHIFL\",   worst_low_flag_var = \"WGRLOFL\",   worst_flag_indicator = \"Y\",   add_total = FALSE,   drop_arm_levels = TRUE,   basic_table_args = teal.widgets::basic_table_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_abnormality_by_worst_grade.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Template: Laboratory test results with highest grade post-baseline ‚Äî template_abnormality_by_worst_grade","text":"parentname (character) parent analysis data used teal module, usually refers ADSL. dataname (character) analysis data used teal module. arm_var (character) variable names can used arm_var. id_var (character) variable name subject id. paramcd (character) variable value designating studied parameter. atoxgr_var (character) variable name indicating Analysis Toxicity Grade. worst_high_flag_var (character) variable name indicating Worst High Grade flag worst_low_flag_var (character) variable name indicating Worst Low Grade flag worst_flag_indicator (character) value indicating worst grade. add_total (logical) whether include column total number patients. drop_arm_levels (logical) drop unused arm_var levels. TRUE, arm_var levels set used dataname dataset. FALSE, arm_var levels set used parantname dataset. basic_table_args optional, (basic_table_args) object created teal.widgets::basic_table_args() settings module table. argument merged option teal.basic_table_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-basic-table-arguments\", package = \"teal.widgets\").","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_adverse_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Template: Adverse Events Tab ‚Äî template_adverse_events","title":"Template: Adverse Events Tab ‚Äî template_adverse_events","text":"Creates adverse events template call.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_adverse_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Template: Adverse Events Tab ‚Äî template_adverse_events","text":"","code":"template_adverse_events(   dataname = \"ANL\",   aeterm = \"AETERM\",   tox_grade = \"AETOXGR\",   causality = \"AEREL\",   outcome = \"AEOUT\",   action = \"AEACN\",   time = \"ASTDY\",   decod = NULL,   patient_id,   font_size = 12L,   ggplot2_args = teal.widgets::ggplot2_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_adverse_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Template: Adverse Events Tab ‚Äî template_adverse_events","text":"dataname (character) analysis data used teal module. aeterm (character) name reported term adverse event variable. tox_grade (character) name standard toxicity grade variable. causality (character) name causality variable. outcome (character) name outcome adverse event variable. action (character) name action taken study treatment variable. time (character) name study day start adverse event variable. decod (character) name dictionary derived term variable. patient_id (character) patient ID. font_size (numeric) numeric vector length 3 current, min max font size values. ggplot2_args optional, (ggplot2_args) object created teal.widgets::ggplot2_args() settings module plot. argument merged option teal.ggplot2_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-ggplot2-arguments\", package = \"teal.widgets\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_ancova.html","id":null,"dir":"Reference","previous_headings":"","what":"Template: ANCOVA summary ‚Äî template_ancova","title":"Template: ANCOVA summary ‚Äî template_ancova","text":"Creates valid expression analysis variance summary table.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_ancova.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Template: ANCOVA summary ‚Äî template_ancova","text":"","code":"template_ancova(   dataname = \"ANL\",   parentname = \"ADSL\",   arm_var,   ref_arm = NULL,   comp_arm = NULL,   combine_comp_arms = FALSE,   aval_var,   label_aval = NULL,   cov_var,   paramcd_levels = \"\",   paramcd_var = \"PARAMCD\",   label_paramcd = NULL,   visit_levels = \"\",   visit_var = \"AVISIT\",   conf_level = 0.95,   basic_table_args = teal.widgets::basic_table_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_ancova.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Template: ANCOVA summary ‚Äî template_ancova","text":"dataname (character) analysis data used teal module. parentname (character) parent analysis data used teal module, usually refers ADSL. arm_var (character) variable names can used arm_var. ref_arm (character) level reference arm case arm comparison. comp_arm (character) level comparison arm case arm comparison. combine_comp_arms (logical) triggers combination comparison arms. aval_var (character) name analysis variable. label_aval (character) label value variable used title rendering. cov_var (character) names covariates variables. paramcd_levels (character) variable levels studied parameter. paramcd_var (character) variable name studied parameter. label_paramcd (character) variable label used title rendering. visit_levels (character) variable levels studied visits. visit_var (character) variable names can used visit variable. Must factor dataname. conf_level (numeric) value confidence level within range (0, 1). basic_table_args optional, (basic_table_args) object created teal.widgets::basic_table_args() settings module table. argument merged option teal.basic_table_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-basic-table-arguments\", package = \"teal.widgets\").","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_arguments.html","id":null,"dir":"Reference","previous_headings":"","what":"Standard Template Arguments ‚Äî template_arguments","title":"Standard Template Arguments ‚Äî template_arguments","text":"documentation function lists arguments teal module templates used repeatedly express analysis.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_arguments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standard Template Arguments ‚Äî template_arguments","text":"arm_var (character) variable names can used arm_var. id_var (character) variable name subject id. sum_vars (character) names variables summarized. compare_arm (logical) triggers comparison study arms. combine_comp_arms (logical) triggers combination comparison arms. parentname (character) parent analysis data used teal module, usually refers ADSL. dataname (character) analysis data used teal module. anl_name (character) analysis data used teal module. paramcd (character) variable value designating studied parameter. ref_arm (character) level reference arm case arm comparison. comp_arm (character) level comparison arm case arm comparison. na.rm (logical) whether NA values removed prior analysis. useNA (character) whether missing data (NA) displayed level. na_level (string) used replace NA empty values character factor variables data. denominator (character) chooses percentages calculated. option N, reference population column total used denominator. option n, number non-missing records row column intersection used denominator. omit chosen, percentage omitted. var_labels optional, (named character) variable labels relabeling analysis variables. cov_var (character) names covariates variables. aval_var (character) name analysis variable. cnsr_var (character) name censoring variable. conf_level (numeric) value confidence level within range (0, 1). add_total (logical) whether include column total number patients. hlt (character) name variable high level term events. llt (character) name variable low level term events. visit_var (character) variable names can used visit variable. Must factor dataname. by_vars (character) variable names used split summary rows. time_points (character) time points can used tern::surv_timepoint(). time_unit_var (character) name variable representing time units. drop_arm_levels (logical) drop unused arm_var levels. TRUE, arm_var levels set used dataname dataset. FALSE, arm_var levels set used parantname dataset. subgroup_var (character) variable names can used subgroups. strata_var (character) names variables stratified analysis. title (character) title output. prune_freq (number) threshold use trimming table using event incidence rate column. prune_diff (number) threshold use trimming table using criteria difference rates two columns. treatment_flag_var (character) name treatment flag variable. treatment_flag (character) name value indicating treatment records treatment_flag_var. basic_table_args optional, (basic_table_args) object created teal.widgets::basic_table_args() settings module table. argument merged option teal.basic_table_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-basic-table-arguments\", package = \"teal.widgets\"). ggplot2_args optional, (ggplot2_args) object created teal.widgets::ggplot2_args() settings module plot. argument merged option teal.ggplot2_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-ggplot2-arguments\", package = \"teal.widgets\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_arguments.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Standard Template Arguments ‚Äî template_arguments","text":"Although function just returns NULL two uses, teal module users provides documentation arguments commonly consistently used framework. developer adds single reference point import roxygen argument description : @inheritParams template_arguments","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_basic_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Template: Basic Info ‚Äî template_basic_info","title":"Template: Basic Info ‚Äî template_basic_info","text":"Creates basic info template.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_basic_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Template: Basic Info ‚Äî template_basic_info","text":"","code":"template_basic_info(dataname = \"ANL\", vars)"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_basic_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Template: Basic Info ‚Äî template_basic_info","text":"dataname (character) analysis data used teal module. vars (character) variable names shown Basic Info tab.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_binary_outcome.html","id":null,"dir":"Reference","previous_headings":"","what":"Template: Binary Outcome ‚Äî template_binary_outcome","title":"Template: Binary Outcome ‚Äî template_binary_outcome","text":"Creates valid expression binary outcome analysis.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_binary_outcome.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Template: Binary Outcome ‚Äî template_binary_outcome","text":"","code":"template_binary_outcome(   dataname,   parentname,   arm_var,   paramcd,   ref_arm = NULL,   comp_arm = NULL,   compare_arm = FALSE,   combine_comp_arms = FALSE,   aval_var = \"AVALC\",   show_rsp_cat = TRUE,   responder_val = c(\"Complete Response (CR)\", \"Partial Response (PR)\"),   responder_val_levels = responder_val,   control = list(global = list(method = \"waldcc\", conf_level = 0.95), unstrat =     list(method_ci = \"waldcc\", method_test = \"schouten\", odds = TRUE), strat =     list(method_ci = \"cmh\", method_test = \"cmh\", strat = NULL)),   add_total = FALSE,   basic_table_args = teal.widgets::basic_table_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_binary_outcome.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Template: Binary Outcome ‚Äî template_binary_outcome","text":"dataname (character) analysis data used teal module. parentname (character) parent analysis data used teal module, usually refers ADSL. arm_var (character) variable names can used arm_var. paramcd (character) response parameter value use table title. ref_arm (character) level reference arm case arm comparison. comp_arm (character) level comparison arm case arm comparison. compare_arm (logical) triggers comparison study arms. combine_comp_arms (logical) triggers combination comparison arms. aval_var (character) name analysis variable. show_rsp_cat (logical) display multinomial response estimations. responder_val (character) short label observations translate AVALC responder / non-responder. responder_val_levels (character) levels responses shown multinomial response estimations. control (list) list settings analysis. add_total (logical) whether include column total number patients. basic_table_args optional, (basic_table_args) object created teal.widgets::basic_table_args() settings module table. argument merged option teal.basic_table_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-basic-table-arguments\", package = \"teal.widgets\").","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_binary_outcome.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Template: Binary Outcome ‚Äî template_binary_outcome","text":"","code":"if (FALSE) { # Preparation of the test case. library(dplyr) library(scda) library(tern)  synthetic_cdisc_data_latest <- synthetic_cdisc_data(\"latest\")  adsl <- synthetic_cdisc_data_latest$adsl adrs <- synthetic_cdisc_data_latest$adrs  # Generate an expression for the analysis of responders. a <- template_binary_outcome(   dataname = \"adrs\",   parentname = \"adsl\",   arm_var = \"ARMCD\",   paramcd = \"BESRSPI\",   ref_arm = \"ARM A\",   comp_arm = c(\"ARM B\"),   compare_arm = TRUE,   show_rsp_cat = TRUE )  b <- mapply(expr = a, FUN = eval) b$data b$layout b$table }"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_coxreg_m.html","id":null,"dir":"Reference","previous_headings":"","what":"Template: Cox Regression Multivariate ‚Äî template_coxreg_m","title":"Template: Cox Regression Multivariate ‚Äî template_coxreg_m","text":"Creates valid expression Cox regression analysis.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_coxreg_m.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Template: Cox Regression Multivariate ‚Äî template_coxreg_m","text":"","code":"template_coxreg_m(   dataname,   cov_var,   arm_var,   cnsr_var,   aval_var,   ref_arm,   comp_arm,   paramcd,   at = list(),   strata_var = NULL,   combine_comp_arms = FALSE,   control = control_coxreg(),   basic_table_args = teal.widgets::basic_table_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_coxreg_m.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Template: Cox Regression Multivariate ‚Äî template_coxreg_m","text":"dataname (character) analysis data used teal module. cov_var (character) names covariates variables. arm_var (character) variable names can used arm_var. cnsr_var (character) name censoring variable. aval_var (character) name analysis variable. ref_arm (character) level reference arm case arm comparison. comp_arm (character) level comparison arm case arm comparison. paramcd (character) variable value designating studied parameter. (list numeric) candidate covariate numeric, use specify value covariate effect estimated. strata_var (character) names variables stratified analysis. combine_comp_arms (logical) triggers combination comparison arms. control (list) list settings analysis, see control_coxreg(). basic_table_args optional, (basic_table_args) object created teal.widgets::basic_table_args() settings module table. argument merged option teal.basic_table_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-basic-table-arguments\", package = \"teal.widgets\").","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_coxreg_u.html","id":null,"dir":"Reference","previous_headings":"","what":"Template: Cox Regression Univariate ‚Äî template_coxreg_u","title":"Template: Cox Regression Univariate ‚Äî template_coxreg_u","text":"Creates valid expression Cox regression analysis.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_coxreg_u.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Template: Cox Regression Univariate ‚Äî template_coxreg_u","text":"","code":"template_coxreg_u(   dataname,   cov_var,   arm_var,   cnsr_var,   aval_var,   ref_arm,   comp_arm,   paramcd,   at = list(),   strata_var = NULL,   combine_comp_arms = FALSE,   control = control_coxreg(),   append = FALSE,   basic_table_args = teal.widgets::basic_table_args(title =     paste(\"Multi-Variable Cox Regression for\", paramcd)) )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_coxreg_u.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Template: Cox Regression Univariate ‚Äî template_coxreg_u","text":"dataname (character) analysis data used teal module. cov_var (character) names covariates variables. arm_var (character) variable names can used arm_var. cnsr_var (character) name censoring variable. aval_var (character) name analysis variable. ref_arm (character) level reference arm case arm comparison. comp_arm (character) level comparison arm case arm comparison. paramcd (character) variable value designating studied parameter. (list numeric) candidate covariate numeric, use specify value covariate effect estimated. strata_var (character) names variables stratified analysis. combine_comp_arms (logical) triggers combination comparison arms. control (list) list settings analysis, see control_coxreg(). append (logical) result appended previous one. basic_table_args optional, (basic_table_args) object created teal.widgets::basic_table_args() settings module table. argument merged option teal.basic_table_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-basic-table-arguments\", package = \"teal.widgets\").","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Template: Events by Term ‚Äî template_events","title":"Template: Events by Term ‚Äî template_events","text":"Template: Events Term","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Template: Events by Term ‚Äî template_events","text":"","code":"template_events(   dataname,   parentname,   arm_var,   hlt,   llt,   label_hlt = NULL,   label_llt = NULL,   add_total = TRUE,   event_type = \"event\",   sort_criteria = c(\"freq_desc\", \"alpha\"),   prune_freq = 0,   prune_diff = 0,   drop_arm_levels = TRUE,   basic_table_args = teal.widgets::basic_table_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Template: Events by Term ‚Äî template_events","text":"dataname (character) analysis data used teal module. parentname (character) parent analysis data used teal module, usually refers ADSL. arm_var (character) variable names can used arm_var. hlt (character) name variable high level term events. llt (character) name variable low level term events. label_hlt (string) label hlt variable dataname. label extracted module. label_llt (string) label llt variable dataname. label extracted module. add_total (logical) whether include column total number patients. event_type (character) type event summarized (e.g. adverse event, treatment). Default \"event\". sort_criteria (character) sort final table. Default option freq_desc sorts decreasing total number patients event. Alternative option alpha sorts events alphabetically. prune_freq (number) threshold use trimming table using event incidence rate column. prune_diff (number) threshold use trimming table using criteria difference rates two columns. drop_arm_levels (logical) drop unused arm_var levels. TRUE, arm_var levels set used dataname dataset. FALSE, arm_var levels set used parantname dataset. basic_table_args optional, (basic_table_args) object created teal.widgets::basic_table_args() settings module table. argument merged option teal.basic_table_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-basic-table-arguments\", package = \"teal.widgets\").","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_events_by_grade.html","id":null,"dir":"Reference","previous_headings":"","what":"Template: Events by Grade ‚Äî template_events_by_grade","title":"Template: Events by Grade ‚Äî template_events_by_grade","text":"Template: Events Grade","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_events_by_grade.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Template: Events by Grade ‚Äî template_events_by_grade","text":"","code":"template_events_by_grade(   dataname,   parentname,   arm_var,   id = \"USUBJID\",   hlt,   llt,   label_hlt = NULL,   label_llt = NULL,   grade,   label_grade = NULL,   prune_freq = 0,   prune_diff = 0,   add_total = TRUE,   drop_arm_levels = TRUE,   basic_table_args = teal.widgets::basic_table_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_events_by_grade.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Template: Events by Grade ‚Äî template_events_by_grade","text":"dataname (character) analysis data used teal module. parentname (character) parent analysis data used teal module, usually refers ADSL. arm_var (character) variable names can used arm_var. id (character)  unique identifier patients datasets, default \"USUBJID\". hlt (character) name variable high level term events. llt (character) name variable low level term events. label_hlt (string) label hlt variable dataname. label extracted module. label_llt (string) label llt variable dataname. label extracted module. grade (character)  name severity level variable. label_grade (string) label grade variable dataname. label extracted module. prune_freq (number) threshold use trimming table using event incidence rate column. prune_diff (number) threshold use trimming table using criteria difference rates two columns. add_total (logical) whether include column total number patients. drop_arm_levels (logical) drop unused arm_var levels. TRUE, arm_var levels set used dataname dataset. FALSE, arm_var levels set used parantname dataset. basic_table_args optional, (basic_table_args) object created teal.widgets::basic_table_args() settings module table. argument merged option teal.basic_table_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-basic-table-arguments\", package = \"teal.widgets\").","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_events_col_by_grade.html","id":null,"dir":"Reference","previous_headings":"","what":"Template: Adverse Events grouped by Grade with threshold ‚Äî template_events_col_by_grade","title":"Template: Adverse Events grouped by Grade with threshold ‚Äî template_events_col_by_grade","text":"Template: Adverse Events grouped Grade threshold","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_events_col_by_grade.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Template: Adverse Events grouped by Grade with threshold ‚Äî template_events_col_by_grade","text":"","code":"template_events_col_by_grade(   dataname,   parentname,   arm_var,   grading_groups = list(`Any Grade (%)` = c(\"1\", \"2\", \"3\", \"4\", \"5\"), `Grade 1-2 (%)` =     c(\"1\", \"2\"), `Grade 3-4 (%)` = c(\"3\", \"4\"), `Grade 5 (%)` = \"5\"),   add_total = TRUE,   id = \"USUBJID\",   hlt,   llt,   label_hlt = NULL,   label_llt = NULL,   grade = \"AETOXGR\",   label_grade = NULL,   prune_freq = 0.1,   prune_diff = 0,   drop_arm_levels = TRUE,   basic_table_args = teal.widgets::basic_table_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_events_col_by_grade.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Template: Adverse Events grouped by Grade with threshold ‚Äî template_events_col_by_grade","text":"dataname (character) analysis data used teal module. parentname (character) parent analysis data used teal module, usually refers ADSL. arm_var (character) variable names can used arm_var. grading_groups (character)  list grading groups. add_total (logical) whether include column total number patients. id (character)  unique identifier patients datasets, default \"USUBJID\". hlt (character) name variable high level term events. llt (character) name variable low level term events. label_hlt (string) label hlt variable dataname. label extracted module. label_llt (string) label llt variable dataname. label extracted module. grade (character)  grade term grading_groups based , default \"AETOXGR\". label_grade (string) label grade variable dataname. label extracted module. prune_freq (number) threshold use trimming table using event incidence rate column. prune_diff (number) threshold use trimming table using criteria difference rates two columns. drop_arm_levels (logical) drop unused arm_var levels. TRUE, arm_var levels set used dataname dataset. FALSE, arm_var levels set used parantname dataset. basic_table_args optional, (basic_table_args) object created teal.widgets::basic_table_args() settings module table. argument merged option teal.basic_table_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-basic-table-arguments\", package = \"teal.widgets\").","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_events_patyear.html","id":null,"dir":"Reference","previous_headings":"","what":"Template: Event rates adjusted for patient-years ‚Äî template_events_patyear","title":"Template: Event rates adjusted for patient-years ‚Äî template_events_patyear","text":"Template: Event rates adjusted patient-years","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_events_patyear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Template: Event rates adjusted for patient-years ‚Äî template_events_patyear","text":"","code":"template_events_patyear(   dataname,   parentname,   arm_var,   events_var,   label_paramcd,   aval_var = \"AVAL\",   add_total = TRUE,   control = control_incidence_rate(),   drop_arm_levels = TRUE,   basic_table_args = teal.widgets::basic_table_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_events_patyear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Template: Event rates adjusted for patient-years ‚Äî template_events_patyear","text":"dataname (character) analysis data used teal module. parentname (character) parent analysis data used teal module, usually refers ADSL. arm_var (character) variable names can used arm_var. events_var (integer) number observed events. label_paramcd (string) title table based paramcd aval_var (character) name analysis variable. add_total (logical) whether include column total number patients. control (list) list settings analysis. drop_arm_levels (logical) drop unused arm_var levels. TRUE, arm_var levels set used dataname dataset. FALSE, arm_var levels set used parantname dataset. basic_table_args optional, (basic_table_args) object created teal.widgets::basic_table_args() settings module table. argument merged option teal.basic_table_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-basic-table-arguments\", package = \"teal.widgets\").","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_events_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Template: Adverse Events Summary ‚Äî template_events_summary","title":"Template: Adverse Events Summary ‚Äî template_events_summary","text":"Template: Adverse Events Summary","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_events_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Template: Adverse Events Summary ‚Äî template_events_summary","text":"","code":"template_events_summary(   anl_name,   parentname,   arm_var,   dthfl_var = \"DTHFL\",   dcsreas_var = \"DCSREAS\",   flag_var_anl = NULL,   flag_var_aesi = NULL,   aeseq_var = \"AESEQ\",   llt = \"AEDECOD\",   add_total = TRUE,   count_subj = TRUE,   count_pt = TRUE,   count_events = TRUE )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_events_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Template: Adverse Events Summary ‚Äî template_events_summary","text":"anl_name (character) analysis data used teal module. parentname (character) parent analysis data used teal module, usually refers ADSL. arm_var (character) variable names can used arm_var. dthfl_var (character) variable subject death flag parentname. Records `\"Y\"`` summarized table row \"Total number deaths\". dcsreas_var (character) variable study discontinuation reason parentname. Records \"ADVERSE EVENTS\" summarized table row \"Total number patients withdrawn study due AE\". flag_var_anl (character) flag variable dataset used count adverse event sub-groups (e.g. Serious events, Related events, etc.). Variable labels used table row names exist. flag_var_aesi (character) flag variable dataset used count adverse event special interest groups. flag variables must type logical. Variable labels used table row names exist. aeseq_var (character) variable adverse events sequence number dataset. Used counting total number events. llt (character) name variable low level term events. add_total (logical) whether include column total number patients. count_subj (logical) w whether show count unique subjects based USUBJID. applies event flag variables provided. count_pt (logical) whether show count unique preferred terms based llt. applies event flag variables provided. count_events (logical) whether show count events based aeseq_var. applies event flag variables provided.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_exposure.html","id":null,"dir":"Reference","previous_headings":"","what":"Template: Exposure Table for Risk management plan ‚Äî template_exposure","title":"Template: Exposure Table for Risk management plan ‚Äî template_exposure","text":"Template: Exposure Table Risk management plan","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_exposure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Template: Exposure Table for Risk management plan ‚Äî template_exposure","text":"","code":"template_exposure(   parentname,   dataname,   id_var,   paramcd,   paramcd_label = NULL,   row_by_var,   col_by_var,   add_total = FALSE,   drop_levels = TRUE,   na_level = \"<Missing>\",   aval_var,   avalu_var,   basic_table_args = teal.widgets::basic_table_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_exposure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Template: Exposure Table for Risk management plan ‚Äî template_exposure","text":"parentname (character) parent analysis data used teal module, usually refers ADSL. dataname (character) analysis data used teal module. id_var (character) variable name subject id. paramcd (character) variable value designating studied parameter. paramcd_label (character) column dataset value used label argument paramcd. row_by_var (character) variable name used split rows. col_by_var (character) variable name used split columns. add_total (logical) whether include column total number patients. drop_levels (flag) whether empty rows removed table. na_level (string) used replace NA empty values character factor variables data. aval_var (character) name analysis variable. avalu_var (character) name analysis unit variable. basic_table_args optional, (basic_table_args) object created teal.widgets::basic_table_args() settings module table. argument merged option teal.basic_table_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-basic-table-arguments\", package = \"teal.widgets\").","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_fit_mmrm.html","id":null,"dir":"Reference","previous_headings":"","what":"Template: Mixed Model Repeated Measurements (MMRM) analysis ‚Äî template_fit_mmrm","title":"Template: Mixed Model Repeated Measurements (MMRM) analysis ‚Äî template_fit_mmrm","text":"Template: Mixed Model Repeated Measurements (MMRM) analysis","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_fit_mmrm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Template: Mixed Model Repeated Measurements (MMRM) analysis ‚Äî template_fit_mmrm","text":"","code":"template_fit_mmrm(   parentname,   dataname,   aval_var,   arm_var,   ref_arm,   comp_arm = NULL,   combine_comp_arms = FALSE,   id_var,   visit_var,   cov_var,   conf_level = 0.95,   cor_struct = \"unstructured\",   weights_emmeans = \"proportional\",   optimizer = \"automatic\",   parallel = FALSE )  template_mmrm_tables(   parentname,   dataname,   fit_name,   arm_var,   ref_arm,   visit_var,   paramcd,   show_relative = c(\"increase\", \"reduction\", \"none\"),   table_type = \"t_mmrm_cov\",   basic_table_args = teal.widgets::basic_table_args() )  template_mmrm_plots(   fit_name,   lsmeans_plot = list(select = c(\"estimates\", \"contrasts\"), width = 0.6, show_pval =     FALSE),   diagnostic_plot = list(type = \"fit-residual\", z_threshold = NULL),   ggplot2_args = teal.widgets::ggplot2_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_fit_mmrm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Template: Mixed Model Repeated Measurements (MMRM) analysis ‚Äî template_fit_mmrm","text":"parentname (character) parent analysis data used teal module, usually refers ADSL. dataname (character) analysis data used teal module. aval_var (character) name analysis variable. arm_var (character) variable names can used arm_var. ref_arm (character) level reference arm case arm comparison. comp_arm (character) level comparison arm case arm comparison. combine_comp_arms (logical) triggers combination comparison arms. id_var (character) variable name subject id. visit_var (character) variable names can used visit variable. Must factor dataname. cov_var (character) names covariates variables. conf_level (numeric) value confidence level within range (0, 1). cor_struct string specifying correlation structure, defaults \"unstructured\". See details. weights_emmeans argument emmeans::emmeans(), \"proportional\" default. optimizer string specifying optimization algorithm used. default, \"automatic\" (necessary) try possible optimization algorithms choose best result. another algorithm chosen give valid result, error occur. parallel flag controls whether \"automatic\" optimizer search can use available free cores machine (default). fit_name name fitted MMRM object paramcd (character) variable value designating studied parameter. show_relative \"reduction\" (control - treatment, default) \"increase\" (treatment - control) shown relative change baseline table_type (character) type table output. basic_table_args optional, (basic_table_args) object created teal.widgets::basic_table_args() settings module table. argument merged option teal.basic_table_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-basic-table-arguments\", package = \"teal.widgets\"). lsmeans_plot list controls LS means plot. See tern.mmrm::g_mmrm_lsmeans() diagnostic_plot list controls diagnostic_plot. See tern.mmrm::g_mmrm_diagnostic() ggplot2_args optional, (ggplot2_args) object created teal.widgets::ggplot2_args() settings module plot. argument merged option teal.ggplot2_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-ggplot2-arguments\", package = \"teal.widgets\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_fit_mmrm.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Template: Mixed Model Repeated Measurements (MMRM) analysis ‚Äî template_fit_mmrm","text":"template_mmrm_tables(): template_mmrm_plots():","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_forest_rsp.html","id":null,"dir":"Reference","previous_headings":"","what":"Template: Response Forest Plot ‚Äî template_forest_rsp","title":"Template: Response Forest Plot ‚Äî template_forest_rsp","text":"Creates valid expression response forest plot.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_forest_rsp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Template: Response Forest Plot ‚Äî template_forest_rsp","text":"","code":"template_forest_rsp(   dataname = \"ANL\",   parentname = \"ADSL\",   arm_var,   ref_arm = NULL,   comp_arm = NULL,   obj_var_name = \"\",   aval_var = \"AVALC\",   responders = c(\"CR\", \"PR\"),   subgroup_var,   strata_var = NULL,   conf_level = 0.95,   col_symbol_size = NULL,   ggplot2_args = teal.widgets::ggplot2_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_forest_rsp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Template: Response Forest Plot ‚Äî template_forest_rsp","text":"dataname (character) analysis data used teal module. parentname (character) parent analysis data used teal module, usually refers ADSL. arm_var (character) variable names can used arm_var. ref_arm (character) level reference arm case arm comparison. comp_arm (character) level comparison arm case arm comparison. obj_var_name (character) additional text string append output title. aval_var (character) name analysis variable. responders (character) values aval_var considered responders. subgroup_var (character) variable names can used subgroups. strata_var (character) names variables stratified analysis. conf_level (numeric) value confidence level within range (0, 1). col_symbol_size (integer) column index used determine relative size estimator plot symbol. Typically, symbol size proportional sample size used calculate estimator. NULL, symbol size used subgroups. ggplot2_args optional, (ggplot2_args) object created teal.widgets::ggplot2_args() settings module plot. module, argument accept ggplot2_args object labs list following child elements: title, caption. elements taken account. argument merged option teal.ggplot2_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-ggplot2-arguments\", package = \"teal.widgets\").","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_forest_tte.html","id":null,"dir":"Reference","previous_headings":"","what":"Template: Survival Forest Plot ‚Äî template_forest_tte","title":"Template: Survival Forest Plot ‚Äî template_forest_tte","text":"Creates valid expression survival forest plot.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_forest_tte.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Template: Survival Forest Plot ‚Äî template_forest_tte","text":"","code":"template_forest_tte(   dataname = \"ANL\",   parentname = \"ANL_ADSL\",   arm_var,   ref_arm = NULL,   comp_arm = NULL,   obj_var_name = \"\",   aval_var = \"AVAL\",   cnsr_var = \"CNSR\",   subgroup_var,   strata_var = NULL,   conf_level = 0.95,   col_symbol_size = NULL,   time_unit_var = \"AVALU\",   ggplot2_args = teal.widgets::ggplot2_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_forest_tte.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Template: Survival Forest Plot ‚Äî template_forest_tte","text":"dataname (character) analysis data used teal module. parentname (character) parent analysis data used teal module, usually refers ADSL. arm_var (character) variable names can used arm_var. ref_arm (character) level reference arm case arm comparison. comp_arm (character) level comparison arm case arm comparison. obj_var_name (character) additional text string append output title. aval_var (character) name analysis variable. cnsr_var (character) name censoring variable. subgroup_var (character) variable names can used subgroups. strata_var (character) names variables stratified analysis. conf_level (numeric) value confidence level within range (0, 1). col_symbol_size (integer) column index used determine relative size estimator plot symbol. Typically, symbol size proportional sample size used calculate estimator. NULL, symbol size used subgroups. time_unit_var (character) name variable representing time units. ggplot2_args optional, (ggplot2_args) object created teal.widgets::ggplot2_args() settings module plot. module, argument accept ggplot2_args object labs list following child elements: title, caption. elements taken account. argument merged option teal.ggplot2_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-ggplot2-arguments\", package = \"teal.widgets\").","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_g_ci.html","id":null,"dir":"Reference","previous_headings":"","what":"Template: Confidence Interval Plot ‚Äî template_g_ci","title":"Template: Confidence Interval Plot ‚Äî template_g_ci","text":"Writes expressions filter data draw confidence interval estimation.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_g_ci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Template: Confidence Interval Plot ‚Äî template_g_ci","text":"","code":"template_g_ci(   dataname,   x_var,   y_var,   grp_var = NULL,   stat = c(\"mean\", \"median\"),   conf_level = 0.95,   unit_var = \"AVALU\",   ggplot2_args = teal.widgets::ggplot2_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_g_ci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Template: Confidence Interval Plot ‚Äî template_g_ci","text":"dataname (character) analysis data used teal module. x_var (character) treatment variable corresponding x axis. y_var (character) response variable corresponding y axis. grp_var (character) group variable corresponding colors point shape line type. stat (character) either mean median. conf_level (numeric) value confidence level within range (0, 1). unit_var (character) variable name dataname unit read. ggplot2_args optional, (ggplot2_args) object created teal.widgets::ggplot2_args() settings module plot. argument merged option teal.ggplot2_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-ggplot2-arguments\", package = \"teal.widgets\").","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_g_ipp.html","id":null,"dir":"Reference","previous_headings":"","what":"Template: Individual Patient Plots ‚Äî template_g_ipp","title":"Template: Individual Patient Plots ‚Äî template_g_ipp","text":"Template: Individual Patient Plots","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_g_ipp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Template: Individual Patient Plots ‚Äî template_g_ipp","text":"","code":"template_g_ipp(   dataname = \"ANL\",   paramcd,   arm_var,   arm_levels,   avalu_first,   paramcd_first,   aval_var = \"AVAL\",   avalu_var = \"AVALU\",   id_var = \"USUBJID\",   visit_var = \"AVISIT\",   base_var = \"BASE\",   add_baseline_hline = FALSE,   separate_by_obs = FALSE,   ggplot2_args = teal.widgets::ggplot2_args(),   suppress_legend = FALSE,   add_avalu = TRUE )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_g_ipp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Template: Individual Patient Plots ‚Äî template_g_ipp","text":"dataname (character) analysis data used teal module. paramcd (character) variable value designating studied parameter. arm_var (character) variable names can used arm_var. arm_levels (character) vector arm variable levels. avalu_first (string)avalu value. paramcd_first (string)paramcd value. aval_var (character) name analysis variable. avalu_var (string) variable name designating unit analysis variable. id_var (character) variable name subject id. visit_var (string) variable name designating visit timepoint variable. base_var (string) variable name designating baseline values analysis variable. add_baseline_hline (flag) adds horizontal line baseline y-value plot separate_by_obs (flag) creates multi panel plots TRUE ggplot2_args optional, (ggplot2_args) object created teal.widgets::ggplot2_args() settings module plot. module, argument accept ggplot2_args object labs list following child elements: title, subtitle, x, y. elements taken account. argument merged option teal.ggplot2_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-ggplot2-arguments\", package = \"teal.widgets\"). suppress_legend (flag) allow user suppress legend add_avalu (flag) allow user display value unit plot.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_g_km.html","id":null,"dir":"Reference","previous_headings":"","what":"Template: Kaplan-Meier ‚Äî template_g_km","title":"Template: Kaplan-Meier ‚Äî template_g_km","text":"Template: Kaplan-Meier","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_g_km.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Template: Kaplan-Meier ‚Äî template_g_km","text":"","code":"template_g_km(   dataname = \"ANL\",   arm_var = \"ARM\",   ref_arm = NULL,   comp_arm = NULL,   compare_arm = FALSE,   combine_comp_arms = FALSE,   aval_var = \"AVAL\",   cnsr_var = \"CNSR\",   xticks = NULL,   strata_var = NULL,   time_points = NULL,   facet_var = \"SEX\",   font_size = 8,   conf_level = 0.95,   ties = \"efron\",   xlab = \"Survival time\",   time_unit_var = \"AVALU\",   yval = \"Survival\",   pval_method = \"log-rank\",   annot_surv_med = TRUE,   annot_coxph = TRUE,   ci_ribbon = FALSE,   title = \"KM Plot\" )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_g_km.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Template: Kaplan-Meier ‚Äî template_g_km","text":"dataname (character) analysis data used teal module. arm_var (character) variable names can used arm_var. ref_arm (character) level reference arm case arm comparison. comp_arm (character) level comparison arm case arm comparison. compare_arm (logical) triggers comparison study arms. combine_comp_arms (logical) triggers combination comparison arms. aval_var (character) name analysis variable. cnsr_var (character) name censoring variable. xticks (numeric, number, NULL) numeric vector ticks single number spacing ticks x axis. NULL (default), labeling::extended() used determine optimal tick position x axis. strata_var (character) names variables stratified analysis. time_points (character) time points can used tern::surv_timepoint(). facet_var (character) object available choices preselected option variable names can used facet plotting. font_size (number)  font size used. conf_level (numeric) value confidence level within range (0, 1). ties (string) among exact (equivalent DISCRETE SAS), efron breslow, see survival::coxph(). Note: equivalent SAS EXACT method R. xlab (string) label x-axis. time_unit_var (character) name variable representing time units. yval (string) value y-axis. either Survival (default) Failure probability. pval_method (string) method used estimation p.values; wald (default) likelihood. annot_surv_med (flag) compute add annotation table Kaplan-Meier curve estimating median survival time per group. annot_coxph (flag) add annotation table survival::coxph() model. ci_ribbon (flag) draw confidence interval around Kaplan-Meier curve. title (character) title output.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_g_lineplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Template: Line Plot ‚Äî template_g_lineplot","title":"Template: Line Plot ‚Äî template_g_lineplot","text":"Template: Line Plot","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_g_lineplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Template: Line Plot ‚Äî template_g_lineplot","text":"","code":"template_g_lineplot(   dataname = \"ANL\",   strata = \"ARM\",   x = \"AVISIT\",   y = \"AVAL\",   y_unit = \"AVALU\",   paramcd = \"PARAMCD\",   param = \"ALT\",   mid = \"mean\",   interval = \"mean_ci\",   whiskers = c(\"mean_ci_lwr\", \"mean_ci_upr\"),   table = c(\"n\", \"mean_sd\", \"median\", \"range\"),   mid_type = \"pl\",   conf_level = 0.95,   incl_screen = TRUE,   mid_point_size = 2,   table_font_size = 4,   title = \"Line Plot\",   y_lab = \"\",   ggplot2_args = teal.widgets::ggplot2_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_g_lineplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Template: Line Plot ‚Äî template_g_lineplot","text":"dataname (character) analysis data used teal module. strata (character scalar NA) strata variable name. x (character scalar) x variable name. y (character scalar) y variable name. y_unit (character scalar NA) y_unit variable name. paramcd (character scalar NA) paramcd variable name. param (character) parameter chosen filter data . mid (character NULL)  names statistics plotted midpoints. statistics indicated mid variable must present object returned sfun, double numeric type vector length one. interval (character NULL)  names statistics plotted intervals. statistics indicated interval variable must present object returned sfun, double numeric type vector length two. whiskers (character)  names interval whiskers plotted. Must match names attribute interval element list returned sfun. possible specify one whisker , lower upper. table (character NULL)  names statistics displayed table plot. statistics indicated table variable must present object returned sfun. mid_type (character scalar)  controls type mid plot, can point (p), line (l), point line (pl). conf_level (numeric) value confidence level within range (0, 1). incl_screen (logical) screening visit included. mid_point_size (integer double)  controls font size point mid plot. table_font_size (integer double)  controls font size values table. title (character scalar)  plot title. y_lab (character scalar)  y-axis label. equals NULL, label added. ggplot2_args optional, (ggplot2_args) object created teal.widgets::ggplot2_args() settings module plot. module, argument accept ggplot2_args object labs list following child elements: title, subtitle, caption, y, lty. elements taken account. argument merged option teal.ggplot2_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-ggplot2-arguments\", package = \"teal.widgets\").","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_laboratory.html","id":null,"dir":"Reference","previous_headings":"","what":"Template: Laboratory ‚Äî template_laboratory","title":"Template: Laboratory ‚Äî template_laboratory","text":"Creates laboratory template.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_laboratory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Template: Laboratory ‚Äî template_laboratory","text":"","code":"template_laboratory(   dataname = \"ANL\",   paramcd = \"PARAMCD\",   param = \"PARAM\",   anrind = \"ANRIND\",   timepoints = \"ADY\",   aval = \"AVAL\",   avalu = \"AVALU\",   round_value = 0L )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_laboratory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Template: Laboratory ‚Äî template_laboratory","text":"dataname (character) analysis data used teal module. paramcd (character) name parameter code variable. param (character) name parameter variable. anrind (character) name analysis reference range indicator variable. timepoints (character) name time variable used laboratory table. aval (character) name analysis value variable. avalu (character) name analysis value unit variable. round_value (numeric) number decimal places used rounding.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_logistic.html","id":null,"dir":"Reference","previous_headings":"","what":"Template: Logistic Regression ‚Äî template_logistic","title":"Template: Logistic Regression ‚Äî template_logistic","text":"Creates expression logistic regressions.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_logistic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Template: Logistic Regression ‚Äî template_logistic","text":"","code":"template_logistic(   dataname,   arm_var,   aval_var,   paramcd,   label_paramcd,   cov_var,   interaction_var,   ref_arm,   comp_arm,   topleft = \"Logistic Regression\",   conf_level = 0.95,   combine_comp_arms = FALSE,   responder_val = c(\"CR\", \"PR\"),   at = NULL,   basic_table_args = teal.widgets::basic_table_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_logistic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Template: Logistic Regression ‚Äî template_logistic","text":"dataname (character) analysis data used teal module. arm_var (character) variable names can used arm_var. arm treatment variable included logistic model NULL. aval_var (character) name analysis variable. paramcd (character) response parameter value use table title. label_paramcd (character) Label response parameter value use table title. cov_var (character) names covariates variables. interaction_var (character) names variables can used interaction variable selection. ref_arm (character) level reference arm case arm comparison. comp_arm (character) level comparison arm case arm comparison. topleft (character) top-left annotation table. conf_level (numeric) value confidence level within range (0, 1). combine_comp_arms (logical) triggers combination comparison arms. responder_val (character) values responder variable corresponding successful response. optional, (NULL numeric) values interaction variable. Otherwise median used. basic_table_args optional, (basic_table_args) object created teal.widgets::basic_table_args() settings module table. argument merged option teal.basic_table_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-basic-table-arguments\", package = \"teal.widgets\").","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_medical_history.html","id":null,"dir":"Reference","previous_headings":"","what":"Template: Medical History ‚Äî template_medical_history","title":"Template: Medical History ‚Äî template_medical_history","text":"Creates medical history template.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_medical_history.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Template: Medical History ‚Äî template_medical_history","text":"","code":"template_medical_history(   dataname = \"ANL\",   mhterm = \"MHTERM\",   mhbodsys = \"MHBODSYS\",   mhdistat = \"MHDISTAT\" )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_medical_history.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Template: Medical History ‚Äî template_medical_history","text":"dataname (character) analysis data used teal module. mhterm (character) name reported name medical history variable. mhbodsys (character) name body system organ class variable. mhdistat (character) name status disease variable.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_mult_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Template: Events by Term ‚Äî template_mult_events","title":"Template: Events by Term ‚Äî template_mult_events","text":"Template: Events Term","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_mult_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Template: Events by Term ‚Äî template_mult_events","text":"","code":"template_mult_events(   dataname,   parentname,   arm_var,   seq_var,   hlt,   llt,   add_total = TRUE,   event_type = \"event\",   drop_arm_levels = TRUE,   basic_table_args = teal.widgets::basic_table_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_mult_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Template: Events by Term ‚Äî template_mult_events","text":"dataname (character) analysis data used teal module. parentname (character) parent analysis data used teal module, usually refers ADSL. arm_var (character) variable names can used arm_var. seq_var (numeric)  Analysis Sequence Number. Used counting unique number events. hlt (character) name variable high level term events. llt (character) name variable low level term events. add_total (logical) whether include column total number patients. event_type (character) type event summarized (e.g. adverse event, treatment). Default \"event\". drop_arm_levels (logical) drop unused arm_var levels. TRUE, arm_var levels set used dataname dataset. FALSE, arm_var levels set used parantname dataset. basic_table_args optional, (basic_table_args) object created teal.widgets::basic_table_args() settings module table. argument merged option teal.basic_table_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-basic-table-arguments\", package = \"teal.widgets\").","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_patient_timeline.html","id":null,"dir":"Reference","previous_headings":"","what":"Template: Patient Timeline Tab ‚Äî template_patient_timeline","title":"Template: Patient Timeline Tab ‚Äî template_patient_timeline","text":"Creates patient timeline template call.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_patient_timeline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Template: Patient Timeline Tab ‚Äî template_patient_timeline","text":"","code":"template_patient_timeline(   dataname = \"ANL\",   aeterm = \"AETERM\",   aetime_start = \"ASTDTM\",   aetime_end = \"AENDTM\",   dstime_start = \"CMASTDTM\",   dstime_end = \"CMAENDTM\",   cmdecod = \"CMDECOD\",   aerelday_start = NULL,   aerelday_end = NULL,   dsrelday_start = NULL,   dsrelday_end = NULL,   relative_day = FALSE,   patient_id,   font_size = 12L,   ggplot2_args = teal.widgets::ggplot2_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_patient_timeline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Template: Patient Timeline Tab ‚Äî template_patient_timeline","text":"dataname (character) analysis data used teal module. aeterm (character) name reported term adverse event variable. aetime_start (character) name datetime start adverse event variable. aetime_end (character) name datetime end adverse event variable. dstime_start (character) name datetime first exposure treatment variable. dstime_end (character) name datetime last exposure treatment variable. cmdecod (character) name reported standardized name drug, med, therapy variable. aerelday_start (character) name start study day variable. aerelday_end (character) name end study day variable. dsrelday_start (character) name start study day variable. dsrelday_end (character) name end study day variable. relative_day (logical) whether use relative days absolute dates patient_id (character) patient ID. font_size (numeric) numeric vector length 3 current, min max font size values. ggplot2_args optional, (ggplot2_args) object created teal.widgets::ggplot2_args() settings module plot. argument merged option teal.ggplot2_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-ggplot2-arguments\", package = \"teal.widgets\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_prior_medication.html","id":null,"dir":"Reference","previous_headings":"","what":"Template: Prior Medication ‚Äî template_prior_medication","title":"Template: Prior Medication ‚Äî template_prior_medication","text":"Creates prior medication template.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_prior_medication.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Template: Prior Medication ‚Äî template_prior_medication","text":"","code":"template_prior_medication(   dataname = \"ANL\",   atirel = \"ATIREL\",   cmdecod = \"CMDECOD\",   cmindc = \"CMINDC\",   cmstdy = \"CMSTDY\" )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_prior_medication.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Template: Prior Medication ‚Äî template_prior_medication","text":"dataname (character) analysis data used teal module. atirel (character) name time relation medication variable. cmdecod (character) name standardized medication name variable. cmindc (character) name indication variable. cmstdy (character) name study day start medication variable.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_shift_by_arm.html","id":null,"dir":"Reference","previous_headings":"","what":"Template: Shift by Arm ‚Äî template_shift_by_arm","title":"Template: Shift by Arm ‚Äî template_shift_by_arm","text":"Template: Shift Arm","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_shift_by_arm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Template: Shift by Arm ‚Äî template_shift_by_arm","text":"","code":"template_shift_by_arm(   dataname,   parentname,   arm_var = \"ARM\",   paramcd = \"PARAMCD\",   visit_var = \"AVISIT\",   treatment_flag_var = \"ONTRTFL\",   treatment_flag = \"Y\",   aval_var = \"ANRIND\",   base_var = \"BNRIND\",   na.rm = FALSE,   na_level = \"<Missing>\",   add_total = FALSE,   basic_table_args = teal.widgets::basic_table_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_shift_by_arm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Template: Shift by Arm ‚Äî template_shift_by_arm","text":"dataname (character) analysis data used teal module. parentname (character) parent analysis data used teal module, usually refers ADSL. arm_var (character) variable names can used arm_var. paramcd (character) variable value designating studied parameter. visit_var (character) variable names can used visit variable. Must factor dataname. treatment_flag_var (character) name treatment flag variable. treatment_flag (character) name value indicating treatment records treatment_flag_var. aval_var (character) variable name analysis reference range indicator. base_var (character) variable name baseline reference range indicator. na.rm (logical) whether NA values removed prior analysis. na_level (string) used replace NA empty values character factor variables data. add_total (logical) whether include row total number patients. basic_table_args optional, (basic_table_args) object created teal.widgets::basic_table_args() settings module table. argument merged option teal.basic_table_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-basic-table-arguments\", package = \"teal.widgets\").","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_shift_by_arm_by_worst.html","id":null,"dir":"Reference","previous_headings":"","what":"Template: Shift by Arm ‚Äî template_shift_by_arm_by_worst","title":"Template: Shift by Arm ‚Äî template_shift_by_arm_by_worst","text":"Template: Shift Arm","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_shift_by_arm_by_worst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Template: Shift by Arm ‚Äî template_shift_by_arm_by_worst","text":"","code":"template_shift_by_arm_by_worst(   dataname,   parentname,   arm_var = \"ARM\",   paramcd = \"PARAMCD\",   worst_flag_var = \"WORS02FL\",   worst_flag = \"Y\",   treatment_flag_var = \"ONTRTFL\",   treatment_flag = \"Y\",   aval_var = \"ANRIND\",   base_var = \"BNRIND\",   na.rm = FALSE,   na_level = \"<Missing>\",   add_total = FALSE,   basic_table_args = teal.widgets::basic_table_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_shift_by_arm_by_worst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Template: Shift by Arm ‚Äî template_shift_by_arm_by_worst","text":"dataname (character) analysis data used teal module. parentname (character) parent analysis data used teal module, usually refers ADSL. arm_var (character) variable names can used arm_var. paramcd (character) variable value designating studied parameter. worst_flag_var (character) Worst flag variable. worst_flag (character) Worst flag value. treatment_flag_var (character) name treatment flag variable. treatment_flag (character) name value indicating treatment records treatment_flag_var. aval_var (character) variable name analysis reference range indicator. base_var (character) variable name baseline reference range indicator. na.rm (logical) whether NA values removed prior analysis. na_level (string) used replace NA empty values character factor variables data. add_total (logical) whether include row total number patients. basic_table_args optional, (basic_table_args) object created teal.widgets::basic_table_args() settings module table. argument merged option teal.basic_table_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-basic-table-arguments\", package = \"teal.widgets\").","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_shift_by_grade.html","id":null,"dir":"Reference","previous_headings":"","what":"Template: Grade Summary Table ‚Äî template_shift_by_grade","title":"Template: Grade Summary Table ‚Äî template_shift_by_grade","text":"Template: Grade Summary Table","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_shift_by_grade.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Template: Grade Summary Table ‚Äî template_shift_by_grade","text":"","code":"template_shift_by_grade(   parentname,   dataname,   arm_var = \"ARM\",   id_var = \"USUBJID\",   visit_var = \"AVISIT\",   worst_flag_var = c(\"WGRLOVFL\", \"WGRLOFL\", \"WGRHIVFL\", \"WGRHIFL\"),   worst_flag_indicator = \"Y\",   anl_toxgrade_var = \"ATOXGR\",   base_toxgrade_var = \"BTOXGR\",   paramcd = \"PARAMCD\",   drop_arm_levels = TRUE,   add_total = FALSE,   na_level = \"<Missing>\",   code_missing_baseline = FALSE,   basic_table_args = teal.widgets::basic_table_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_shift_by_grade.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Template: Grade Summary Table ‚Äî template_shift_by_grade","text":"parentname (character) parent analysis data used teal module, usually refers ADSL. dataname (character) analysis data used teal module. arm_var (character) variable names can used arm_var. id_var (character) variable name subject id. visit_var (character) variable names can used visit variable. Must factor dataname. worst_flag_var (character) name worst flag variable. worst_flag_indicator (character) value indicating worst grade. anl_toxgrade_var (character) name variable indicating analysis toxicity grade. base_toxgrade_var (character) name variable indicating base toxicity grade. paramcd (character) variable value designating studied parameter. drop_arm_levels (logical) drop unused arm_var levels. TRUE, arm_var levels set used dataname dataset. FALSE, arm_var levels set used parantname dataset. add_total (logical) whether include column total number patients. na_level (string) used replace NA empty values character factor variables data. code_missing_baseline (character) whether missing baseline considered grade 0. basic_table_args optional, (basic_table_args) object created teal.widgets::basic_table_args() settings module table. argument merged option teal.basic_table_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-basic-table-arguments\", package = \"teal.widgets\").","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_smq.html","id":null,"dir":"Reference","previous_headings":"","what":"Adverse Events Table by Standardized MedDRA Query ‚Äî template_smq","title":"Adverse Events Table by Standardized MedDRA Query ‚Äî template_smq","text":"Adverse Events Table Standardized MedDRA Query","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_smq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adverse Events Table by Standardized MedDRA Query ‚Äî template_smq","text":"","code":"template_smq(   dataname,   parentname,   arm_var,   llt = \"AEDECOD\",   add_total = TRUE,   sort_criteria = c(\"freq_desc\", \"alpha\"),   drop_arm_levels = TRUE,   na_level = \"<Missing>\",   smq_varlabel = \"Standardized MedDRA Query\",   baskets = c(\"SMQ01NAM\", \"SMQ02NAM\", \"CQ01NAM\"),   id_var = \"USUBJID\",   basic_table_args = teal.widgets::basic_table_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_smq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adverse Events Table by Standardized MedDRA Query ‚Äî template_smq","text":"dataname (character) analysis data used teal module. parentname (character) parent analysis data used teal module, usually refers ADSL. arm_var (character) variable names can used arm_var. llt (character) name variable low level term events. add_total (logical) whether include column total number patients. sort_criteria (character) sort final table. Default option freq_desc sorts decreasing total number patients event. Alternative option alpha sorts events alphabetically. drop_arm_levels (logical) drop unused arm_var levels. TRUE, arm_var levels set used dataname dataset. FALSE, arm_var levels set used parantname dataset. na_level (string) used replace NA empty values character factor variables data. smq_varlabel (character) label new column SMQ created tern::h_stack_by_baskets(). baskets (character) variable names selected Standardized/Customized queries id_var (character) variable name subject id. basic_table_args optional, (basic_table_args) object created teal.widgets::basic_table_args() settings module table. argument merged option teal.basic_table_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-basic-table-arguments\", package = \"teal.widgets\").","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Template: Summary of Variables ‚Äî template_summary","title":"Template: Summary of Variables ‚Äî template_summary","text":"Template: Summary Variables","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Template: Summary of Variables ‚Äî template_summary","text":"","code":"template_summary(   dataname,   parentname,   arm_var,   sum_vars,   show_labels = c(\"default\", \"visible\", \"hidden\"),   add_total = TRUE,   var_labels = character(),   na.rm = FALSE,   na_level = \"<Missing>\",   numeric_stats = c(\"n\", \"mean_sd\", \"mean_ci\", \"median\", \"median_ci\", \"quantiles\",     \"range\", \"geom_mean\"),   denominator = c(\"N\", \"n\", \"omit\"),   drop_arm_levels = TRUE,   basic_table_args = teal.widgets::basic_table_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Template: Summary of Variables ‚Äî template_summary","text":"dataname (character) analysis data used teal module. parentname (character) parent analysis data used teal module, usually refers ADSL. arm_var (character) variable names can used arm_var. sum_vars (character) names variables summarized. show_labels (character) defines whether labels sum_vars display. details see rtables::analyze(). add_total (logical) whether include column total number patients. var_labels optional, (named character) variable labels relabeling analysis variables. na.rm (logical) whether NA values removed prior analysis. na_level (string) used replace NA empty values character factor variables data. numeric_stats (character) selected statistics numeric summarize variables displayed. Possible values n, mean_sd, mean_ci, median, median_ci, quantiles, range geom_mean. selected default. denominator (character) chooses percentages calculated. option N, reference population column total used denominator. option n, number non-missing records row column intersection used denominator. omit chosen, percentage omitted. drop_arm_levels (logical) drop unused arm_var levels. TRUE, arm_var levels set used dataname dataset. FALSE, arm_var levels set used parantname dataset. basic_table_args optional, (basic_table_args) object created teal.widgets::basic_table_args() settings module table. argument merged option teal.basic_table_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-basic-table-arguments\", package = \"teal.widgets\").","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_summary_by.html","id":null,"dir":"Reference","previous_headings":"","what":"Template: Summarize Variables by Row Groups Module ‚Äî template_summary_by","title":"Template: Summarize Variables by Row Groups Module ‚Äî template_summary_by","text":"Template: Summarize Variables Row Groups Module","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_summary_by.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Template: Summarize Variables by Row Groups Module ‚Äî template_summary_by","text":"","code":"template_summary_by(   parentname,   dataname,   arm_var,   id_var,   sum_vars,   by_vars,   var_labels = character(),   add_total = TRUE,   parallel_vars = FALSE,   row_groups = FALSE,   na.rm = FALSE,   na_level = \"<Missing>\",   numeric_stats = c(\"n\", \"mean_sd\", \"mean_ci\", \"median\", \"median_ci\", \"quantiles\",     \"range\"),   denominator = c(\"N\", \"n\", \"omit\"),   drop_arm_levels = TRUE,   drop_zero_levels = TRUE,   basic_table_args = teal.widgets::basic_table_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_summary_by.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Template: Summarize Variables by Row Groups Module ‚Äî template_summary_by","text":"parentname (character) parent analysis data used teal module, usually refers ADSL. dataname (character) analysis data used teal module. arm_var (character) variable names can used arm_var. id_var (character) variable name subject id. sum_vars (character) names variables summarized. by_vars (character) variable names used split summary rows. var_labels optional, (named character) variable labels relabeling analysis variables. add_total (logical) whether include column total number patients. parallel_vars (logical) used display summarize_vars parallel columns (FALSE default). Can used chosen analysis variables numeric. row_groups (logical) used display summarize_vars row groups (FALSE default). na.rm (logical) whether NA values removed prior analysis. na_level (string) used replace NA empty values character factor variables data. numeric_stats (character) selected statistics numeric summarize variables displayed. Possible values n, mean_sd, mean_ci, median, median_ci, quantiles, range. selected default. denominator (character) chooses percentages calculated. option N, reference population column total used denominator. option n, number non-missing records row column intersection used denominator. omit chosen, percentage omitted. drop_arm_levels (logical) drop unused arm_var levels. TRUE, arm_var levels set used dataname dataset. FALSE, arm_var levels set used parantname dataset. drop_zero_levels (logical) used remove rows zero counts result table. basic_table_args optional, (basic_table_args) object created teal.widgets::basic_table_args() settings module table. argument merged option teal.basic_table_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-basic-table-arguments\", package = \"teal.widgets\").","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_therapy.html","id":null,"dir":"Reference","previous_headings":"","what":"Template: Therapy ‚Äî template_therapy","title":"Template: Therapy ‚Äî template_therapy","text":"Creates therapy template call.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_therapy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Template: Therapy ‚Äî template_therapy","text":"","code":"template_therapy(   dataname = \"ANL\",   atirel = \"ATIREL\",   cmdecod = \"CMDECOD\",   cmindc = \"CMINDC\",   cmdose = \"CMDOSE\",   cmtrt = \"CMTRT\",   cmdosu = \"CMDOSU\",   cmroute = \"CMROUTE\",   cmdosfrq = \"CMDOSFRQ\",   cmstdy = \"CMSTDY\",   cmendy = \"CMENDY\",   patient_id,   font_size = 12L,   ggplot2_args = teal.widgets::ggplot2_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_therapy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Template: Therapy ‚Äî template_therapy","text":"dataname (character) analysis data used teal module. atirel (character) name time relation medication variable. cmdecod (character) name standardized medication name variable. cmindc (character) name indication variable. cmdose (character) name dose per administration variable. cmtrt (character) name reported name drug, med, therapy variable. cmdosu (character) name dose units variable. cmroute (character) name route administration variable. cmdosfrq (character) name dosing frequency per interval variable. cmstdy (character) name study day start medication variable. cmendy (character) name study day end medication variable. patient_id (character) patient ID. font_size (numeric) numeric vector length 3 current, min max font size values. ggplot2_args optional, (ggplot2_args) object created teal.widgets::ggplot2_args() settings module plot. argument merged option teal.ggplot2_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-ggplot2-arguments\", package = \"teal.widgets\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_tte.html","id":null,"dir":"Reference","previous_headings":"","what":"Template: Time-to-Event ‚Äî template_tte","title":"Template: Time-to-Event ‚Äî template_tte","text":"Creates valid expression time--event analysis.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_tte.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Template: Time-to-Event ‚Äî template_tte","text":"","code":"template_tte(   dataname = \"ANL\",   parentname = \"ADSL\",   arm_var = \"ARM\",   paramcd,   ref_arm = NULL,   comp_arm = NULL,   compare_arm = FALSE,   combine_comp_arms = FALSE,   aval_var = \"AVAL\",   cnsr_var = \"CNSR\",   strata_var = NULL,   time_points = NULL,   time_unit_var = \"AVALU\",   event_desc_var = \"EVNTDESC\",   control = control_tte(),   add_total = FALSE,   basic_table_args = teal.widgets::basic_table_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_tte.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Template: Time-to-Event ‚Äî template_tte","text":"dataname (character) analysis data used teal module. parentname (character) parent analysis data used teal module, usually refers ADSL. arm_var (character) variable names can used arm_var. paramcd (character) endpoint parameter value use table title. ref_arm (character) level reference arm case arm comparison. comp_arm (character) level comparison arm case arm comparison. compare_arm (logical) triggers comparison study arms. combine_comp_arms (logical) triggers combination comparison arms. aval_var (character) name analysis variable. cnsr_var (character) name censoring variable. strata_var (character) names variables stratified analysis. time_points (character) time points can used tern::surv_timepoint(). time_unit_var (character) name variable representing time units. event_desc_var (character) name variable events description. control (list) list settings analysis, see control_tte(). add_total (logical) whether include column total number patients. basic_table_args optional, (basic_table_args) object created teal.widgets::basic_table_args() settings module table. argument merged option teal.basic_table_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-basic-table-arguments\", package = \"teal.widgets\").","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_vitals.html","id":null,"dir":"Reference","previous_headings":"","what":"Template: Vitals ‚Äî template_vitals","title":"Template: Vitals ‚Äî template_vitals","text":"Creates vitals template.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_vitals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Template: Vitals ‚Äî template_vitals","text":"","code":"template_vitals(   dataname = \"ANL\",   paramcd = \"PARAMCD\",   paramcd_levels = c(\"SYSBP\", \"DIABP\", \"PUL\", \"RESP\", \"OXYSAT\", \"WGHT\", \"TEMP\"),   xaxis = \"ADY\",   aval = \"AVAL\",   patient_id,   font_size = 12L,   ggplot2_args = teal.widgets::ggplot2_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_vitals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Template: Vitals ‚Äî template_vitals","text":"dataname (character) analysis data used teal module. paramcd (character) name parameter code variable. paramcd_levels (character) (paramcd) vector (#'paramcd) levels. xaxis (character) name time variable used x-axis. aval (character) name analysis value variable. patient_id (character) patient ID. font_size (numeric) numeric vector length 3 current, min max font size values. ggplot2_args optional, (ggplot2_args) object created teal.widgets::ggplot2_args() settings module plot. argument merged option teal.ggplot2_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-ggplot2-arguments\", package = \"teal.widgets\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/template_vitals.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Template: Vitals ‚Äî template_vitals","text":"vitals plot supports horizontal lines 6 PARAMCD levels (SYSBP, DIABP, TEMP, RESP, OXYSAT PULSE) levels present analyzed dataset spelling matches.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_a_mmrm.html","id":null,"dir":"Reference","previous_headings":"","what":"Teal Module: Teal module for Mixed Model Repeated Measurements (MMRM) analysis ‚Äî tm_a_mmrm","title":"Teal Module: Teal module for Mixed Model Repeated Measurements (MMRM) analysis ‚Äî tm_a_mmrm","text":"Teal Module: Teal module Mixed Model Repeated Measurements (MMRM) analysis","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_a_mmrm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Teal Module: Teal module for Mixed Model Repeated Measurements (MMRM) analysis ‚Äî tm_a_mmrm","text":"","code":"tm_a_mmrm(   label,   dataname,   parentname = ifelse(inherits(arm_var, \"data_extract_spec\"),     teal.transform::datanames_input(arm_var), \"ADSL\"),   aval_var,   id_var,   arm_var,   visit_var,   cov_var,   arm_ref_comp = NULL,   paramcd,   conf_level = teal.transform::choices_selected(c(0.95, 0.9, 0.8), 0.95, keep_order =     TRUE),   plot_height = c(700L, 200L, 2000L),   plot_width = NULL,   pre_output = NULL,   post_output = NULL,   basic_table_args = teal.widgets::basic_table_args(),   ggplot2_args = teal.widgets::ggplot2_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_a_mmrm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Teal Module: Teal module for Mixed Model Repeated Measurements (MMRM) analysis ‚Äî tm_a_mmrm","text":"label (character) menu item label module teal app. dataname (character) analysis data used teal module. parentname (character) parent analysis data used teal module, usually refers ADSL. aval_var (choices_selected data_extract_spec) object available choices preselected option analysis variable. id_var (choices_selected data_extract_spec) object specifying variable name subject id. arm_var (choices_selected data_extract_spec) object available choices preselected option variable names can used arm_var. defines grouping variable(s) results table. two elements selected arm_var, second variable nested first variable. visit_var (choices_selected data_extract_spec) object available choices preselected option variable names can used visit variable. Must factor dataname. cov_var (choices_selected data_extract_spec) object available choices preselected option covariates variables. arm_ref_comp optional, (list) specified must named list element corresponding arm variable ADSL element must another list (possibly delayed teal.transform::variable_choices() delayed teal.transform::value_choices() elements named ref comp defined default reference comparison arms arm variable changed. paramcd (choices_selected data_extract_spec) variable value designating studied parameter. conf_level (choices_selected) object available choices preselected option confidence level, within range (0, 1). plot_height optional, (numeric) vector length three c(value, min, max). Specifies height main plot renders slider plot interactively adjust plot height. plot_width optional, (numeric) vector length three c(value, min, max). Specifies width main plot renders slider plot interactively adjust plot width. pre_output optional, (shiny.tag) text placed output put output context. example title. post_output optional, (shiny.tag) text placed output put output context. example shiny::helpText() elements useful. basic_table_args optional, (basic_table_args) object created teal.widgets::basic_table_args() settings module table. argument merged option teal.basic_table_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-basic-table-arguments\", package = \"teal.widgets\"). ggplot2_args optional, (ggplot2_args)  object created teal.widgets::ggplot2_args() settings plots named list ggplot2_args objects plot-specific settings. List names match following: c(\"default\", \"lsmeans\", \"diagnostic\"). argument merged option teal.ggplot2_args default module arguments (hard coded module body). details, see help vignette:vignette(\"custom-ggplot2-arguments\", package = \"teal.widgets\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_a_mmrm.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Teal Module: Teal module for Mixed Model Repeated Measurements (MMRM) analysis ‚Äî tm_a_mmrm","text":"ordering input data sets can lead slightly different numerical results different convergence behavior. known observation used package lme4. However, convergence achieved, results reliable numerical precision.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_a_mmrm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Teal Module: Teal module for Mixed Model Repeated Measurements (MMRM) analysis ‚Äî tm_a_mmrm","text":"","code":"library(scda)  synthetic_cdisc_data_latest <- synthetic_cdisc_data(\"latest\") ADSL <- synthetic_cdisc_data_latest$adsl ADQS <- synthetic_cdisc_data_latest$adqs %>%   dplyr::filter(ABLFL != \"Y\" & ABLFL2 != \"Y\") %>%   dplyr::filter(AVISIT %in% c(\"WEEK 1 DAY 8\", \"WEEK 2 DAY 15\", \"WEEK 3 DAY 22\")) %>%   dplyr::mutate(     AVISIT = as.factor(AVISIT),     AVISITN = rank(AVISITN) %>%       as.factor() %>%       as.numeric() %>%       as.factor() # making consecutive numeric factor   )  arm_ref_comp <- list(   ARMCD = list(     ref = \"ARM B\",     comp = c(\"ARM A\", \"ARM C\")   ) )  app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", ADSL,       code = \"synthetic_cdisc_data_latest <- synthetic_cdisc_data('latest')               ADSL <- synthetic_cdisc_data_latest$adsl\"     ),     cdisc_dataset(\"ADQS\", ADQS,       code = 'synthetic_cdisc_data_latest <- synthetic_cdisc_data(\"latest\")               ADQS <- synthetic_cdisc_data(\"latest\")$adqs %>%               dplyr::filter(ABLFL != \"Y\" & ABLFL2 != \"Y\") %>%               dplyr::filter(AVISIT %in% c(\"WEEK 1 DAY 8\", \"WEEK 2 DAY 15\", \"WEEK 3 DAY 22\")) %>%               dplyr::mutate(                 AVISIT = as.factor(AVISIT),                 AVISITN = rank(AVISITN) %>%                   as.factor() %>%                   as.numeric() %>%                   as.factor() # making consecutive numeric factor               )'     )   ),   modules = modules(     tm_a_mmrm(       label = \"MMRM\",       dataname = \"ADQS\",       aval_var = choices_selected(c(\"AVAL\", \"CHG\"), \"AVAL\"),       id_var = choices_selected(c(\"USUBJID\", \"SUBJID\"), \"USUBJID\"),       arm_var = choices_selected(c(\"ARM\", \"ARMCD\"), \"ARM\"),       visit_var = choices_selected(c(\"AVISIT\", \"AVISITN\"), \"AVISIT\"),       arm_ref_comp = arm_ref_comp,       paramcd = choices_selected(         choices = value_choices(ADQS, \"PARAMCD\", \"PARAM\"),         selected = \"FKSI-FWB\"       ),       cov_var = choices_selected(c(\"BASE\", \"AGE\", \"SEX\", \"BASE:AVISIT\"), NULL)     )   ) ) #> [INFO] 2022-10-12 02:08:14.8059 pid:1445 token:[] teal.modules.clinical Initializing tm_a_mmrm if (FALSE) { shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_g_barchart_simple.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple barchart plot that shows counts per category. ‚Äî tm_g_barchart_simple","title":"Simple barchart plot that shows counts per category. ‚Äî tm_g_barchart_simple","text":"Categories can defined four levels deep defined x, fill, x_facet y_facet. NULL, ignored.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_g_barchart_simple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple barchart plot that shows counts per category. ‚Äî tm_g_barchart_simple","text":"","code":"tm_g_barchart_simple(   x = NULL,   fill = NULL,   x_facet = NULL,   y_facet = NULL,   label = \"Count Barchart\",   plot_options = NULL,   plot_height = c(600L, 200L, 2000L),   plot_width = NULL,   pre_output = NULL,   post_output = NULL,   ggplot2_args = teal.widgets::ggplot2_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_g_barchart_simple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple barchart plot that shows counts per category. ‚Äî tm_g_barchart_simple","text":"x (data_extract_spec) variable x-axis. fill (data_extract_spec) grouping variable assigned bar colors. x_facet (data_extract_spec) faceting groups row dimension. y_facet (data_extract_spec) faceting groups col dimension. label (character) menu item label module teal app. plot_options (list) list plot options. plot_height optional, (numeric) vector length three c(value, min, max). Specifies height main plot renders slider plot interactively adjust plot height. plot_width optional, (numeric) vector length three c(value, min, max). Specifies width main plot renders slider plot interactively adjust plot width. pre_output optional, (shiny.tag) text placed output put output context. example title. post_output optional, (shiny.tag) text placed output put output context. example shiny::helpText() elements useful. ggplot2_args optional, (ggplot2_args) object created teal.widgets::ggplot2_args() settings module plot. argument merged option teal.ggplot2_args default module arguments (hard coded module body). details, see help vignette: vignette(\"custom-ggplot2-arguments\", package = \"teal.widgets\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_g_barchart_simple.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simple barchart plot that shows counts per category. ‚Äî tm_g_barchart_simple","text":"","code":"library(dplyr) library(scda) library(nestcolor)  ADSL <- synthetic_cdisc_data(\"latest\")$adsl ADAE <- synthetic_cdisc_data(\"latest\")$adae  adae_labels <- formatters::var_labels(ADAE, fill = FALSE) ADAE <- ADAE %>% dplyr::filter(!((AETOXGR == 1) & (AESEV == \"MILD\") & (ARM == \"A: Drug X\")))  # reinstate labels formatters::var_labels(ADAE) <- adae_labels   app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", ADSL, code = \"ADSL <- synthetic_cdisc_data('latest')$adsl\"),     cdisc_dataset(\"ADAE\", ADAE,       code = \"ADAE <- synthetic_cdisc_data('latest')$adae               adae_labels <- formatters::var_labels(ADAE, fill = FALSE)               ADAE <- ADAE %>%                 dplyr::filter(!((AETOXGR == 1) & (AESEV == 'MILD') & (ARM == 'A: Drug X')))               formatters::var_labels(ADAE) <- adae_labels               ADAE\"     )   ),   modules = modules(     tm_g_barchart_simple(       label = \"ADAE Analysis\",       x = data_extract_spec(         dataname = \"ADSL\",         select = select_spec(           choices = variable_choices(             ADSL,             c(               \"ARM\", \"ACTARM\", \"SEX\",               \"RACE\", \"ITTFL\", \"SAFFL\", \"STRATA2\"             )           ),           selected = \"ACTARM\",           multiple = FALSE         )       ),       fill = list(         data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             choices = variable_choices(               ADSL,               c(                 \"ARM\", \"ACTARM\", \"SEX\",                 \"RACE\", \"ITTFL\", \"SAFFL\", \"STRATA2\"               )             ),             selected = \"SEX\",             multiple = FALSE           )         ),         data_extract_spec(           dataname = \"ADAE\",           select = select_spec(             choices = variable_choices(ADAE, c(\"AETOXGR\", \"AESEV\", \"AESER\")),             selected = NULL,             multiple = FALSE           )         )       ),       x_facet = list(         data_extract_spec(           dataname = \"ADAE\",           select = select_spec(             choices = variable_choices(ADAE, c(\"AETOXGR\", \"AESEV\", \"AESER\")),             selected = \"AETOXGR\",             multiple = FALSE           )         ),         data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             choices = variable_choices(               ADSL,               c(                 \"ARM\", \"ACTARM\", \"SEX\",                 \"RACE\", \"ITTFL\", \"SAFFL\", \"STRATA2\"               )             ),             selected = NULL,             multiple = FALSE           )         )       ),       y_facet = list(         data_extract_spec(           dataname = \"ADAE\",           select = select_spec(             choices = variable_choices(ADAE, c(\"AETOXGR\", \"AESEV\", \"AESER\")),             selected = \"AESEV\",             multiple = FALSE           )         ),         data_extract_spec(           dataname = \"ADSL\",           select = select_spec(             choices = variable_choices(               ADSL,               c(                 \"ARM\", \"ACTARM\", \"SEX\",                 \"RACE\", \"ITTFL\", \"SAFFL\", \"STRATA2\"               )             ),             selected = NULL,             multiple = FALSE           )         )       )     )   ) ) #> [INFO] 2022-10-12 02:08:17.5372 pid:1445 token:[] teal.modules.clinical Initializing tm_g_barchart_simple if (FALSE) { shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_g_ci.html","id":null,"dir":"Reference","previous_headings":"","what":"Teal Module: Confidence Interval Plot (CIG01) ‚Äî tm_g_ci","title":"Teal Module: Confidence Interval Plot (CIG01) ‚Äî tm_g_ci","text":"module generates R code returns corresponding output.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_g_ci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Teal Module: Confidence Interval Plot (CIG01) ‚Äî tm_g_ci","text":"","code":"tm_g_ci(   label,   x_var,   y_var,   color,   stat = c(\"mean\", \"median\"),   conf_level = teal.transform::choices_selected(c(0.95, 0.9, 0.8), 0.95, keep_order =     TRUE),   plot_height = c(700L, 200L, 2000L),   plot_width = NULL,   pre_output = NULL,   post_output = NULL,   ggplot2_args = teal.widgets::ggplot2_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_g_ci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Teal Module: Confidence Interval Plot (CIG01) ‚Äî tm_g_ci","text":"label (character) menu item label module teal app. x_var (character) treatment variable corresponding x axis. y_var (character) response variable corresponding y axis. color (data_extract_spec) group variable (color, line type point shape). stat (character) either mean median. conf_level (choices_selected) object available choices preselected option confidence level, within range (0, 1). plot_height optional, (numeric) vector length three c(value, min, max). Specifies height main plot renders slider plot interactively adjust plot height. plot_width optional, (numeric) vector length three c(value, min, max). Specifies width main plot renders slider plot interactively adjust plot width. pre_output optional, (shiny.tag) text placed output put output context. example title. post_output optional, (shiny.tag) text placed output put output context. example shiny::helpText() elements useful. ggplot2_args optional, (ggplot2_args) object created teal.widgets::ggplot2_args() settings module plot. argument merged option teal.ggplot2_args default module arguments (hard coded module body). details, see help vignette: vignette(\"custom-ggplot2-arguments\", package = \"teal.widgets\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_g_ci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Teal Module: Confidence Interval Plot (CIG01) ‚Äî tm_g_ci","text":"","code":"library(scda) library(nestcolor) ADSL <- synthetic_cdisc_data(\"latest\")$adsl ADLB <- synthetic_cdisc_data(\"latest\")$adlb  app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", ADSL),     cdisc_dataset(\"ADLB\", ADLB),     code = \"ADSL <- synthetic_cdisc_data('latest')$adsl     ADLB <- synthetic_cdisc_data('latest')$adlb\"   ),   modules = modules(     tm_g_ci(       label = \"Confidence Interval Plot\",       x_var = data_extract_spec(         dataname = \"ADSL\",         select = select_spec(           choices = c(\"ARMCD\", \"BMRKR2\"),           selected = c(\"ARMCD\"),           multiple = FALSE,           fixed = FALSE         )       ),       y_var = data_extract_spec(         dataname = \"ADLB\",         filter = list(           filter_spec(             vars = \"PARAMCD\",             choices = levels(ADLB$PARAMCD),             selected = levels(ADLB$PARAMCD)[1],             multiple = FALSE,             label = \"Select lab:\"           ),           filter_spec(             vars = \"AVISIT\",             choices = levels(ADLB$AVISIT),             selected = levels(ADLB$AVISIT)[1],             multiple = FALSE,             label = \"Select visit:\"           )         ),         select = select_spec(           label = \"Analyzed Value\",           choices = c(\"AVAL\", \"CHG\"),           selected = \"AVAL\",           multiple = FALSE,           fixed = FALSE         )       ),       color = data_extract_spec(         dataname = \"ADSL\",         select = select_spec(           label = \"Color by variable\",           choices = c(\"SEX\", \"STRATA1\", \"STRATA2\"),           selected = c(\"STRATA1\"),           multiple = FALSE,           fixed = FALSE         )       )     )   ),   header = \"Example of Confidence Interval Plot\",   footer = shiny::tags$p(     class = \"text-muted\", \"Source: `teal.modules.clinical::tm_g_ci`\"   ) ) #> [INFO] 2022-10-12 02:08:21.1024 pid:1445 token:[] teal.modules.clinical Initializing tm_g_ci if (FALSE) { shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_g_forest_rsp.html","id":null,"dir":"Reference","previous_headings":"","what":"Teal Module: Forest Response Plot teal module ‚Äî tm_g_forest_rsp","title":"Teal Module: Forest Response Plot teal module ‚Äî tm_g_forest_rsp","text":"teal module produces grid style Forest plot response data ADaM structure.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_g_forest_rsp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Teal Module: Forest Response Plot teal module ‚Äî tm_g_forest_rsp","text":"","code":"tm_g_forest_rsp(   label,   dataname,   parentname = ifelse(inherits(arm_var, \"data_extract_spec\"),     teal.transform::datanames_input(arm_var), \"ADSL\"),   arm_var,   arm_ref_comp = NULL,   paramcd,   aval_var = teal.transform::choices_selected(teal.transform::variable_choices(dataname,     \"AVALC\"), \"AVALC\", fixed = TRUE),   subgroup_var,   strata_var,   fixed_symbol_size = TRUE,   conf_level = teal.transform::choices_selected(c(0.95, 0.9, 0.8), 0.95, keep_order =     TRUE),   default_responses = c(\"CR\", \"PR\", \"Y\", \"Complete Response (CR)\",     \"Partial Response (PR)\"),   plot_height = c(700L, 200L, 2000L),   plot_width = c(900L, 200L, 2000L),   pre_output = NULL,   post_output = NULL,   ggplot2_args = teal.widgets::ggplot2_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_g_forest_rsp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Teal Module: Forest Response Plot teal module ‚Äî tm_g_forest_rsp","text":"label (character) menu item label module teal app. dataname (character) analysis data used teal module. parentname (character) parent analysis data used teal module, usually refers ADSL. arm_var (choices_selected data_extract_spec) object available choices preselected option variable names can used arm_var. defines grouping variable(s) results table. two elements selected arm_var, second variable nested first variable. arm_ref_comp optional, (list) specified must named list element corresponding arm variable ADSL element must another list (possibly delayed teal.transform::variable_choices() delayed teal.transform::value_choices() elements named ref comp defined default reference comparison arms arm variable changed. paramcd (choices_selected data_extract_spec) variable value designating studied parameter. aval_var (choices_selected data_extract_spec) object available choices preselected option analysis variable. subgroup_var (choices_selected data_extract_spec) object available choices preselected option variable names can used default subgroups. strata_var (choices_selected data_extract_spec) names variables stratified analysis. fixed_symbol_size (logical) (TRUE), symbol size used plotting estimate. Otherwise, symbol size proportional sample size subgroup. conf_level (choices_selected) object available choices preselected option confidence level, within range (0, 1). default_responses (list character)  defines default codes response variable module per value paramcd. passed vector broadcasted paramcd values. passed list must named contain arrays, name corresponding single value paramcd. array may contain default response values named arrays rsp default selected response values levels default level choices. plot_height optional, (numeric) vector length three c(value, min, max). Specifies height main plot renders slider plot interactively adjust plot height. plot_width optional, (numeric) vector length three c(value, min, max). Specifies width main plot renders slider plot interactively adjust plot width. pre_output optional, (shiny.tag) text placed output put output context. example title. post_output optional, (shiny.tag) text placed output put output context. example shiny::helpText() elements useful. ggplot2_args optional, (ggplot2_args) object created teal.widgets::ggplot2_args() settings module plot. module, argument accept ggplot2_args object labs list following child elements: title, caption. elements taken account. argument merged option teal.ggplot2_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-ggplot2-arguments\", package = \"teal.widgets\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_g_forest_rsp.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Teal Module: Forest Response Plot teal module ‚Äî tm_g_forest_rsp","text":"Yuyao Song (songy24) yuyao.song@roche.com","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_g_forest_rsp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Teal Module: Forest Response Plot teal module ‚Äî tm_g_forest_rsp","text":"","code":"library(scda) library(dplyr) library(nestcolor)  synthetic_cdisc_data_latest <- synthetic_cdisc_data(\"latest\") ADSL <- synthetic_cdisc_data_latest$adsl ADRS <- synthetic_cdisc_data_latest$adrs %>%   mutate(AVALC = d_onco_rsp_label(AVALC)) %>%   filter(PARAMCD != \"OVRINV\" | AVISIT == \"FOLLOW UP\")  arm_ref_comp <- list(   ARM = list(     ref = \"B: Placebo\",     comp = c(\"A: Drug X\", \"C: Combination\")   ),   ARMCD = list(     ref = \"ARM B\",     comp = c(\"ARM A\", \"ARM C\")   ) )  app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", ADSL),     cdisc_dataset(\"ADRS\", ADRS),     code =       \"synthetic_cdisc_data_latest <- synthetic_cdisc_data('latest')        ADSL <- synthetic_cdisc_data_latest$adsl        ADRS <- synthetic_cdisc_data_latest$adrs %>%        mutate(AVALC = d_onco_rsp_label(AVALC)) %>%        filter(PARAMCD != 'OVRINV' | AVISIT == 'FOLLOW UP')\"   ),   modules = modules(     tm_g_forest_rsp(       label = \"Forest Response\",       dataname = \"ADRS\",       arm_var = choices_selected(         variable_choices(ADSL, c(\"ARM\", \"ARMCD\")),         \"ARMCD\"       ),       arm_ref_comp = arm_ref_comp,       paramcd = choices_selected(         value_choices(ADRS, \"PARAMCD\", \"PARAM\"),         \"INVET\"       ),       subgroup_var = choices_selected(         variable_choices(ADSL, names(ADSL)),         c(\"BMRKR2\", \"SEX\")       ),       strata_var = choices_selected(         variable_choices(ADSL, c(\"STRATA1\", \"STRATA2\")),         \"STRATA2\"       ),       plot_height = c(600L, 200L, 2000L),       default_responses = list(         BESRSPI = list(           rsp = c(\"Stable Disease (SD)\", \"Not Evaluable (NE)\"),           levels = c(             \"Complete Response (CR)\", \"Partial Response (PR)\", \"Stable Disease (SD)\",             \"Progressive Disease (PD)\", \"Not Evaluable (NE)\"           )         ),         INVET = list(           rsp = c(\"Complete Response (CR)\", \"Partial Response (PR)\"),           levels = c(             \"Complete Response (CR)\", \"Not Evaluable (NE)\", \"Partial Response (PR)\",             \"Progressive Disease (PD)\", \"Stable Disease (SD)\"           )         ),         OVRINV = list(           rsp = c(\"Progressive Disease (PD)\", \"Stable Disease (SD)\"),           levels = c(\"Progressive Disease (PD)\", \"Stable Disease (SD)\", \"Not Evaluable (NE)\")         )       )     )   ) ) #> [INFO] 2022-10-12 02:08:23.0631 pid:1445 token:[] teal.modules.clinical Initializing tm_g_forest_rsp if (FALSE) { shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_g_forest_tte.html","id":null,"dir":"Reference","previous_headings":"","what":"Teal Module: Forest Survival Plot teal Module ‚Äî tm_g_forest_tte","title":"Teal Module: Forest Survival Plot teal Module ‚Äî tm_g_forest_tte","text":"teal module produces grid style Forest plot time--event data ADaM structure","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_g_forest_tte.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Teal Module: Forest Survival Plot teal Module ‚Äî tm_g_forest_tte","text":"","code":"tm_g_forest_tte(   label,   dataname,   parentname = ifelse(inherits(arm_var, \"data_extract_spec\"),     teal.transform::datanames_input(arm_var), \"ADSL\"),   arm_var,   arm_ref_comp = NULL,   subgroup_var,   paramcd,   strata_var,   aval_var = teal.transform::choices_selected(teal.transform::variable_choices(dataname,     \"AVAL\"), \"AVAL\", fixed = TRUE),   cnsr_var = teal.transform::choices_selected(teal.transform::variable_choices(dataname,     \"CNSR\"), \"CNSR\", fixed = TRUE),   conf_level = teal.transform::choices_selected(c(0.95, 0.9, 0.8), 0.95, keep_order =     TRUE),   time_unit_var =     teal.transform::choices_selected(teal.transform::variable_choices(dataname, \"AVALU\"),     \"AVALU\", fixed = TRUE),   fixed_symbol_size = TRUE,   plot_height = c(700L, 200L, 2000L),   plot_width = c(980L, 500L, 2000L),   pre_output = NULL,   post_output = NULL,   ggplot2_args = teal.widgets::ggplot2_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_g_forest_tte.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Teal Module: Forest Survival Plot teal Module ‚Äî tm_g_forest_tte","text":"label (character) menu item label module teal app. dataname (character) analysis data used teal module. parentname (character) parent analysis data used teal module, usually refers ADSL. arm_var (choices_selected data_extract_spec) object available choices preselected option variable names can used arm_var. defines grouping variable(s) results table. two elements selected arm_var, second variable nested first variable. arm_ref_comp optional, (list) specified must named list element corresponding arm variable ADSL element must another list (possibly delayed teal.transform::variable_choices() delayed teal.transform::value_choices() elements named ref comp defined default reference comparison arms arm variable changed. subgroup_var (choices_selected data_extract_spec) object available choices preselected option variable names can used default subgroups. paramcd (choices_selected data_extract_spec) variable value designating studied parameter. strata_var (choices_selected data_extract_spec) names variables stratified analysis. aval_var (choices_selected data_extract_spec) object available choices preselected option analysis variable. cnsr_var (choices_selected data_extract_spec) object available choices preselected option censoring variable. conf_level (choices_selected) object available choices preselected option confidence level, within range (0, 1). time_unit_var (choices_selected data_extract_spec) object available choices preselected option time unit variable. fixed_symbol_size (logical) (TRUE), symbol size used plotting estimate. Otherwise, symbol size proportional sample size subgroup. plot_height optional, (numeric) vector length three c(value, min, max). Specifies height main plot renders slider plot interactively adjust plot height. plot_width optional, (numeric) vector length three c(value, min, max). Specifies width main plot renders slider plot interactively adjust plot width. pre_output optional, (shiny.tag) text placed output put output context. example title. post_output optional, (shiny.tag) text placed output put output context. example shiny::helpText() elements useful. ggplot2_args optional, (ggplot2_args) object created teal.widgets::ggplot2_args() settings module plot. module, argument accept ggplot2_args object labs list following child elements: title, caption. elements taken account. argument merged option teal.ggplot2_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-ggplot2-arguments\", package = \"teal.widgets\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_g_forest_tte.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Teal Module: Forest Survival Plot teal Module ‚Äî tm_g_forest_tte","text":"","code":"library(scda) library(nestcolor)  synthetic_cdisc_data_latest <- synthetic_cdisc_data(\"latest\")  ADSL <- synthetic_cdisc_data_latest$adsl ADTTE <- synthetic_cdisc_data_latest$adtte  ADSL$RACE <- droplevels(ADSL$RACE)  arm_ref_comp <- list(   ARM = list(     ref = \"B: Placebo\",     comp = c(\"A: Drug X\", \"C: Combination\")   ),   ARMCD = list(     ref = \"ARM B\",     comp = c(\"ARM A\", \"ARM C\")   ) )  app <- init(   data = cdisc_data(     cdisc_dataset(       \"ADSL\", ADSL,       code = \"synthetic_cdisc_data_latest <- synthetic_cdisc_data('latest')         ADSL <- synthetic_cdisc_data_latest$adsl         ADSL$RACE <- droplevels(ADSL$RACE)\"     ),     cdisc_dataset(       \"ADTTE\", ADTTE,       code = \"synthetic_cdisc_data_latest <- synthetic_cdisc_data('latest')         ADTTE <- synthetic_cdisc_data_latest$adtte\"     )   ),   modules = modules(     tm_g_forest_tte(       label = \"Forest Survival\",       dataname = \"ADTTE\",       arm_var = choices_selected(         variable_choices(ADSL, c(\"ARM\", \"ARMCD\")),         \"ARMCD\"       ),       arm_ref_comp = arm_ref_comp,       paramcd = choices_selected(         value_choices(ADTTE, \"PARAMCD\", \"PARAM\"),         \"OS\"       ),       subgroup_var = choices_selected(         variable_choices(ADSL, names(ADSL)),         c(\"BMRKR2\", \"SEX\")       ),       strata_var = choices_selected(         variable_choices(ADSL, c(\"STRATA1\", \"STRATA2\")),         \"STRATA2\"       ),       plot_height = c(600, 200, 2000)     )   ) ) #> [INFO] 2022-10-12 02:08:24.8797 pid:1445 token:[] teal.modules.clinical Initializing tm_g_forest_tte if (FALSE) { shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_g_ipp.html","id":null,"dir":"Reference","previous_headings":"","what":"Teal Module: Individual Patient Plot ‚Äî tm_g_ipp","title":"Teal Module: Individual Patient Plot ‚Äî tm_g_ipp","text":"teal module produces grid style Individual patient plot(s) show trends parameter values time patient using data ADaM structure.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_g_ipp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Teal Module: Individual Patient Plot ‚Äî tm_g_ipp","text":"","code":"tm_g_ipp(   label,   dataname,   parentname = ifelse(inherits(arm_var, \"data_extract_spec\"),     teal.transform::datanames_input(arm_var), \"ADSL\"),   arm_var,   paramcd,   id_var = teal.transform::choices_selected(teal.transform::variable_choices(dataname,     \"USUBJID\"), \"USUBJID\", fixed = TRUE),   visit_var = teal.transform::choices_selected(teal.transform::variable_choices(dataname,     \"AVISIT\"), \"AVISIT\", fixed = TRUE),   aval_var = teal.transform::choices_selected(teal.transform::variable_choices(dataname,     \"AVAL\"), \"AVAL\", fixed = TRUE),   avalu_var = teal.transform::choices_selected(teal.transform::variable_choices(dataname,     \"AVALU\"), \"AVALU\", fixed = TRUE),   base_var = teal.transform::choices_selected(teal.transform::variable_choices(dataname,     \"BASE\"), \"BASE\", fixed = TRUE),   add_baseline_hline = FALSE,   separate_by_obs = FALSE,   suppress_legend = FALSE,   add_avalu = TRUE,   plot_height = c(1200L, 400L, 5000L),   plot_width = NULL,   pre_output = NULL,   post_output = NULL,   ggplot2_args = teal.widgets::ggplot2_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_g_ipp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Teal Module: Individual Patient Plot ‚Äî tm_g_ipp","text":"label (character) menu item label module teal app. dataname (character) analysis data used teal module. parentname (character) parent analysis data used teal module, usually refers ADSL. arm_var (teal.transform::choices_selected() teal.transform::data_extract_spec()) object available choices preselected option variable values can used arm_var. paramcd (character) variable value designating studied parameter. id_var (character) variable name subject id. visit_var (string) variable name designating visit timepoint variable. aval_var (character) name analysis variable. avalu_var (teal.transform::choices_selected() teal.transform::data_extract_spec()) object available choices preselected option variable values can used avalu_var. base_var (teal.transform::choices_selected() teal.transform::data_extract_spec()) object available choices preselected option variable values can used base_var. add_baseline_hline (flag) adds horizontal line baseline y-value plot separate_by_obs (flag) creates multi panel plots TRUE suppress_legend (flag) allow user suppress legend add_avalu (flag) allow user display value unit plot. plot_height optional, (numeric) vector length three c(value, min, max). Specifies height main plot renders slider plot interactively adjust plot height. plot_width optional, (numeric) vector length three c(value, min, max). Specifies width main plot renders slider plot interactively adjust plot width. pre_output optional, (shiny.tag) text placed output put output context. example title. post_output optional, (shiny.tag) text placed output put output context. example shiny::helpText() elements useful. ggplot2_args optional, (ggplot2_args) object created teal.widgets::ggplot2_args() settings module plot. module, argument accept ggplot2_args object labs list following child elements: title, subtitle, x, y. elements taken account. argument merged option teal.ggplot2_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-ggplot2-arguments\", package = \"teal.widgets\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_g_ipp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Teal Module: Individual Patient Plot ‚Äî tm_g_ipp","text":"","code":"library(dplyr) library(scda) library(nestcolor)  adsl <- synthetic_cdisc_data(\"latest\")$adsl %>% slice(1:20) adlb <- synthetic_cdisc_data(\"latest\")$adlb adlb <- adlb %>% filter(USUBJID %in% adsl$USUBJID)  adsl <- df_explicit_na(adsl) adlb <- df_explicit_na(adlb) %>%   dplyr::filter(AVISIT != \"SCREENING\")  app <- init(   data = cdisc_data(     cdisc_dataset(       \"ADSL\",       adsl,       code = \"ADSL <- synthetic_cdisc_data('latest')$adsl %>% slice(1:20)       ADSL <- df_explicit_na(ADSL)\"     ),     cdisc_dataset(       \"ADLB\",       adlb,       code = \"ADLB <- synthetic_cdisc_data('latest')$adlb       ADLB <- df_explicit_na(ADLB) %>%       dplyr::filter(AVISIT != 'SCREENING')\"     )   ),   modules = modules(     tm_g_ipp(       label = \"Individual Patient Plot\",       dataname = \"ADLB\",       arm_var = choices_selected(         value_choices(adlb, \"ARMCD\"),         \"ARM A\"       ),       paramcd = choices_selected(         value_choices(adlb, \"PARAMCD\"),         \"ALT\"       ),       aval_var = choices_selected(         variable_choices(adlb, c(\"AVAL\", \"CHG\")),         \"AVAL\"       ),       avalu_var = choices_selected(         variable_choices(adlb, c(\"AVALU\")),         \"AVALU\",         fixed = TRUE       ),       id_var = choices_selected(         variable_choices(adlb, c(\"USUBJID\")),         \"USUBJID\",         fixed = TRUE       ),       visit_var = choices_selected(         variable_choices(adlb, c(\"AVISIT\")),         \"AVISIT\"       ),       base_var = choices_selected(         variable_choices(adlb, c(\"BASE\")),         \"BASE\",         fixed = TRUE       ),       add_baseline_hline = FALSE,       separate_by_obs = FALSE     )   ) ) #> [INFO] 2022-10-12 02:08:27.9306 pid:1445 token:[] teal.modules.clinical Initializing tm_g_ipp if (FALSE) { shinyApp(ui = app$ui, server = app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_g_km.html","id":null,"dir":"Reference","previous_headings":"","what":"Teal Module: Kaplan-Meier ‚Äî tm_g_km","title":"Teal Module: Kaplan-Meier ‚Äî tm_g_km","text":"teal module produces grid style Kaplan-Meier plot data ADaM structure.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_g_km.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Teal Module: Kaplan-Meier ‚Äî tm_g_km","text":"","code":"tm_g_km(   label,   dataname,   parentname = ifelse(inherits(arm_var, \"data_extract_spec\"),     teal.transform::datanames_input(arm_var), \"ADSL\"),   arm_var,   arm_ref_comp = NULL,   paramcd,   strata_var,   facet_var,   time_unit_var =     teal.transform::choices_selected(teal.transform::variable_choices(dataname, \"AVALU\"),     \"AVALU\", fixed = TRUE),   aval_var = teal.transform::choices_selected(teal.transform::variable_choices(dataname,     \"AVAL\"), \"AVAL\", fixed = TRUE),   cnsr_var = teal.transform::choices_selected(teal.transform::variable_choices(dataname,     \"CNSR\"), \"CNSR\", fixed = TRUE),   conf_level = teal.transform::choices_selected(c(0.95, 0.9, 0.8), 0.95, keep_order =     TRUE),   plot_height = c(1200L, 400L, 5000L),   plot_width = NULL,   pre_output = NULL,   post_output = NULL )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_g_km.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Teal Module: Kaplan-Meier ‚Äî tm_g_km","text":"label (character) menu item label module teal app. dataname (character) analysis data used teal module. parentname (character) parent analysis data used teal module, usually refers ADSL. arm_var (choices_selected data_extract_spec) object available choices preselected option variable names can used arm_var. defines grouping variable(s) results table. two elements selected arm_var, second variable nested first variable. arm_ref_comp optional, (list) specified must named list element corresponding arm variable ADSL element must another list (possibly delayed teal.transform::variable_choices() delayed teal.transform::value_choices() elements named ref comp defined default reference comparison arms arm variable changed. paramcd (choices_selected data_extract_spec) variable value designating studied parameter. strata_var (choices_selected data_extract_spec) names variables stratified analysis. facet_var (teal.transform::choices_selected() teal.transform::data_extract_spec()) object available choices preselected option variable names can used facet plotting. time_unit_var (choices_selected data_extract_spec) object available choices preselected option time unit variable. aval_var (choices_selected data_extract_spec) object available choices preselected option analysis variable. cnsr_var (choices_selected data_extract_spec) object available choices preselected option censoring variable. conf_level (choices_selected) object available choices preselected option confidence level, within range (0, 1). plot_height optional, (numeric) vector length three c(value, min, max). Specifies height main plot renders slider plot interactively adjust plot height. plot_width optional, (numeric) vector length three c(value, min, max). Specifies width main plot renders slider plot interactively adjust plot width. pre_output optional, (shiny.tag) text placed output put output context. example title. post_output optional, (shiny.tag) text placed output put output context. example shiny::helpText() elements useful.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_g_km.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Teal Module: Kaplan-Meier ‚Äî tm_g_km","text":"","code":"library(scda) library(nestcolor)  ADSL <- synthetic_cdisc_data(\"latest\")$adsl ADTTE <- synthetic_cdisc_data(\"latest\")$adtte  arm_ref_comp <- list(   ACTARMCD = list(     ref = \"ARM B\",     comp = c(\"ARM A\", \"ARM C\")   ),   ARM = list(     ref = \"B: Placebo\",     comp = c(\"A: Drug X\", \"C: Combination\")   ) )  app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", ADSL, code = 'ADSL <- synthetic_cdisc_data(\"latest\")$adsl'),     cdisc_dataset(\"ADTTE\", ADTTE, code = 'ADTTE <- synthetic_cdisc_data(\"latest\")$adtte')   ),   modules = modules(     tm_g_km(       label = \"KM PLOT\",       dataname = \"ADTTE\",       arm_var = choices_selected(         variable_choices(ADSL, c(\"ARM\", \"ARMCD\", \"ACTARMCD\")),         \"ARM\"       ),       paramcd = choices_selected(         value_choices(ADTTE, \"PARAMCD\", \"PARAM\"),         \"OS\"       ),       arm_ref_comp = arm_ref_comp,       strata_var = choices_selected(         variable_choices(ADSL, c(\"SEX\", \"BMRKR2\")),         \"SEX\"       ),       facet_var = choices_selected(         variable_choices(ADSL, c(\"SEX\", \"BMRKR2\")),         NULL       )     )   ) ) #> [INFO] 2022-10-12 02:08:30.9678 pid:1445 token:[] teal.modules.clinical Initializing tm_g_km if (FALSE) { shinyApp(ui = app$ui, server = app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_g_lineplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Teal Module: Line Plot ‚Äî tm_g_lineplot","title":"Teal Module: Line Plot ‚Äî tm_g_lineplot","text":"teal module produces grid style Line Plot data ADaM structure.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_g_lineplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Teal Module: Line Plot ‚Äî tm_g_lineplot","text":"","code":"tm_g_lineplot(   label,   dataname,   parentname = ifelse(inherits(strata, \"data_extract_spec\"),     teal.transform::datanames_input(strata), \"ADSL\"),   strata = teal.transform::choices_selected(teal.transform::variable_choices(parentname,     c(\"ARM\", \"ARMCD\", \"ACTARMCD\")), \"ARM\"),   x = teal.transform::choices_selected(teal.transform::variable_choices(dataname,     \"AVISIT\"), \"AVISIT\", fixed = TRUE),   y = teal.transform::choices_selected(teal.transform::variable_choices(dataname,     c(\"AVAL\", \"BASE\", \"CHG\", \"PCHG\")), \"AVAL\"),   y_unit = teal.transform::choices_selected(teal.transform::variable_choices(dataname,     \"AVALU\"), \"AVALU\", fixed = TRUE),   paramcd = teal.transform::choices_selected(teal.transform::variable_choices(dataname,     \"PARAMCD\"), \"PARAMCD\", fixed = TRUE),   param = teal.transform::choices_selected(teal.transform::value_choices(dataname,     \"PARAMCD\", \"PARAM\"), \"ALT\"),   conf_level = teal.transform::choices_selected(c(0.95, 0.9, 0.8), 0.95, keep_order =     TRUE),   interval = \"mean_ci\",   mid = \"mean\",   whiskers = c(\"mean_ci_lwr\", \"mean_ci_upr\"),   table = NULL,   mid_type = \"pl\",   mid_point_size = c(2, 1, 5),   table_font_size = c(4, 2, 6),   plot_height = c(1000L, 200L, 4000L),   plot_width = NULL,   pre_output = NULL,   post_output = NULL,   ggplot2_args = teal.widgets::ggplot2_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_g_lineplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Teal Module: Line Plot ‚Äî tm_g_lineplot","text":"label (character) menu item label module teal app. dataname (character) analysis data used teal module. parentname (character) parent analysis data used teal module, usually refers ADSL. strata (character scalar NA) strata variable name. x (character scalar) x variable name. y (character scalar) y variable name. y_unit (character scalar NA) y_unit variable name. paramcd (character scalar NA) paramcd variable name. param (character) parameter chosen filter data . conf_level (numeric) value confidence level within range (0, 1). interval (character NULL)  names statistics plotted intervals. statistics indicated interval variable must present object returned sfun, double numeric type vector length two. mid (character NULL)  names statistics plotted midpoints. statistics indicated mid variable must present object returned sfun, double numeric type vector length one. whiskers (character)  names interval whiskers plotted. Must match names attribute interval element list returned sfun. possible specify one whisker , lower upper. table (character NULL)  names statistics displayed table plot. statistics indicated table variable must present object returned sfun. mid_type (character scalar)  controls type mid plot, can point (p), line (l), point line (pl). mid_point_size (integer double)  controls font size point mid plot. table_font_size (integer double)  controls font size values table. plot_height optional, (numeric) vector length three c(value, min, max). Specifies height main plot renders slider plot interactively adjust plot height. plot_width optional, (numeric) vector length three c(value, min, max). Specifies width main plot renders slider plot interactively adjust plot width. pre_output optional, (shiny.tag) text placed output put output context. example title. post_output optional, (shiny.tag) text placed output put output context. example shiny::helpText() elements useful. ggplot2_args optional, (ggplot2_args) object created teal.widgets::ggplot2_args() settings module plot. module, argument accept ggplot2_args object labs list following child elements: title, subtitle, caption, y, lty. elements taken account. argument merged option teal.ggplot2_args default module arguments (hard coded module body) details, see vignette: vignette(\"custom-ggplot2-arguments\", package = \"teal.widgets\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_g_lineplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Teal Module: Line Plot ‚Äî tm_g_lineplot","text":"","code":"library(scda) library(nestcolor)  synthetic_cdisc_data_latest <- synthetic_cdisc_data(\"latest\") ADSL <- synthetic_cdisc_data_latest$adsl ADLB <- synthetic_cdisc_data_latest$adlb  ADLB <- dplyr::mutate(ADLB, AVISIT == forcats::fct_reorder(AVISIT, AVISITN, min))  app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", ADSL,       code = \"synthetic_cdisc_data_latest <- synthetic_cdisc_data('latest')         ADSL <- synthetic_cdisc_data_latest$adsl\"     ),     cdisc_dataset(\"ADLB\", ADLB,       code = \"synthetic_cdisc_data_latest <- synthetic_cdisc_data('latest')         ADLB <- synthetic_cdisc_data_latest$adlb         ADLB <- dplyr::mutate(ADLB, AVISIT == forcats::fct_reorder(AVISIT, AVISITN, min))\"     )   ),   modules = modules(     tm_g_lineplot(       label = \"Line Plot\",       dataname = \"ADLB\",       strata = choices_selected(         variable_choices(ADSL, c(\"ARM\", \"ARMCD\", \"ACTARMCD\")),         \"ARM\"       ),       y = choices_selected(         variable_choices(ADLB, c(\"AVAL\", \"BASE\", \"CHG\", \"PCHG\")),         \"AVAL\"       ),       param = choices_selected(         value_choices(ADLB, \"PARAMCD\", \"PARAM\"),         \"ALT\"       )     )   ) ) #> [INFO] 2022-10-12 02:08:32.7566 pid:1445 token:[] teal.modules.clinical Initializing tm_g_lineplot if (FALSE) { shinyApp(ui = app$ui, server = app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_g_pp_adverse_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Teal Module: Patient Profile Adverse Events Teal Module ‚Äî tm_g_pp_adverse_events","title":"Teal Module: Patient Profile Adverse Events Teal Module ‚Äî tm_g_pp_adverse_events","text":"teal module produces patient profile adverse events table plot using ADaM datasets.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_g_pp_adverse_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Teal Module: Patient Profile Adverse Events Teal Module ‚Äî tm_g_pp_adverse_events","text":"","code":"tm_g_pp_adverse_events(   label,   dataname = \"ADAE\",   parentname = \"ADSL\",   patient_col = \"USUBJID\",   aeterm = NULL,   tox_grade = NULL,   causality = NULL,   outcome = NULL,   action = NULL,   time = NULL,   decod = NULL,   font_size = c(12L, 12L, 25L),   plot_height = c(700L, 200L, 2000L),   plot_width = NULL,   pre_output = NULL,   post_output = NULL,   ggplot2_args = teal.widgets::ggplot2_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_g_pp_adverse_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Teal Module: Patient Profile Adverse Events Teal Module ‚Äî tm_g_pp_adverse_events","text":"label (character) menu item label module teal app. dataname (character) analysis data used teal module. parentname (character) parent analysis data used teal module, usually refers ADSL. patient_col (character) patient ID column used. aeterm (teal.transform::choices_selected() teal.transform::data_extract_spec())AETERM column ADAE dataset. tox_grade (teal.transform::choices_selected() teal.transform::data_extract_spec())AETOXGR column ADAE dataset. causality (teal.transform::choices_selected() teal.transform::data_extract_spec())AEREL column ADAE dataset. outcome (teal.transform::choices_selected() teal.transform::data_extract_spec())AEOUT column ADAE dataset. action (teal.transform::choices_selected() teal.transform::data_extract_spec())AEACN column ADAE dataset. time (teal.transform::choices_selected() teal.transform::data_extract_spec())ASTDY column ADAE dataset. decod (teal.transform::choices_selected() teal.transform::data_extract_spec())AEDECOD column ADAE dataset. font_size (numeric) numeric vector length 3 current, min max font size values. plot_height optional, (numeric) vector length three c(value, min, max). Specifies height main plot renders slider plot interactively adjust plot height. plot_width optional, (numeric) vector length three c(value, min, max). Specifies width main plot renders slider plot interactively adjust plot width. pre_output optional, (shiny.tag) text placed output put output context. example title. post_output optional, (shiny.tag) text placed output put output context. example shiny::helpText() elements useful. ggplot2_args optional, (ggplot2_args) object created teal.widgets::ggplot2_args() settings module plot. argument merged option teal.ggplot2_args default module arguments (hard coded module body). details, see help vignette: vignette(\"custom-ggplot2-arguments\", package = \"teal.widgets\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_g_pp_adverse_events.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Teal Module: Patient Profile Adverse Events Teal Module ‚Äî tm_g_pp_adverse_events","text":"","code":"library(scda) library(nestcolor)  synthetic_cdisc_data_latest <- synthetic_cdisc_data(\"latest\") ADSL <- synthetic_cdisc_data_latest$adsl ADAE <- synthetic_cdisc_data_latest$adae  app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", ADSL,       code = \"synthetic_cdisc_data_latest <- synthetic_cdisc_data('latest')         ADSL <- synthetic_cdisc_data_latest$adsl\"     ),     cdisc_dataset(\"ADAE\", ADAE,       code = \"synthetic_cdisc_data_latest <- synthetic_cdisc_data('latest')         ADAE <- synthetic_cdisc_data_latest$adae\"     )   ),   modules = modules(     tm_g_pp_adverse_events(       label = \"Adverse events\",       dataname = \"ADAE\",       parentname = \"ADSL\",       patient_col = \"USUBJID\",       plot_height = c(600L, 200L, 2000L),       aeterm = choices_selected(         choices = variable_choices(ADAE, \"AETERM\"),         selected = \"AETERM\"       ),       tox_grade = choices_selected(         choices = variable_choices(ADAE, \"AETOXGR\"),         selected = \"AETOXGR\"       ),       causality = choices_selected(         choices = variable_choices(ADAE, \"AEREL\"),         selected = \"AEREL\"       ),       outcome = choices_selected(         choices = variable_choices(ADAE, \"AEOUT\"),         selected = \"AEOUT\"       ),       action = choices_selected(         choices = variable_choices(ADAE, \"AEACN\"),         selected = \"AEACN\"       ),       time = choices_selected(         choices = variable_choices(ADAE, \"ASTDY\"),         selected = \"ASTDY\"       ),       decod = NULL     )   ) ) #> [INFO] 2022-10-12 02:08:35.0310 pid:1445 token:[] teal.modules.clinical Initializing tm_g_pp_adverse_events if (FALSE) { shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_g_pp_patient_timeline.html","id":null,"dir":"Reference","previous_headings":"","what":"Teal Module: Patient Profile Timeline Teal Module ‚Äî tm_g_pp_patient_timeline","title":"Teal Module: Patient Profile Timeline Teal Module ‚Äî tm_g_pp_patient_timeline","text":"teal module produces patient profile timeline plot using ADaM datasets.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_g_pp_patient_timeline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Teal Module: Patient Profile Timeline Teal Module ‚Äî tm_g_pp_patient_timeline","text":"","code":"tm_g_pp_patient_timeline(   label,   dataname_adcm = \"ADCM\",   dataname_adae = \"ADAE\",   parentname = \"ADSL\",   patient_col = \"USUBJID\",   aeterm = NULL,   cmdecod = NULL,   aetime_start = NULL,   aetime_end = NULL,   dstime_start = NULL,   dstime_end = NULL,   aerelday_start = NULL,   aerelday_end = NULL,   dsrelday_start = NULL,   dsrelday_end = NULL,   font_size = c(12L, 12L, 25L),   plot_height = c(700L, 200L, 2000L),   plot_width = NULL,   pre_output = NULL,   post_output = NULL,   ggplot2_args = teal.widgets::ggplot2_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_g_pp_patient_timeline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Teal Module: Patient Profile Timeline Teal Module ‚Äî tm_g_pp_patient_timeline","text":"label (character) menu item label module teal app. dataname_adcm (character) name ADCM dataset equivalent. dataname_adae (character) name ADAE dataset equivalent. parentname (character) parent analysis data used teal module, usually refers ADSL. patient_col (character) patient ID column used. aeterm (teal.transform::choices_selected() teal.transform::data_extract_spec())AETERM column ADAE dataset. cmdecod (teal.transform::choices_selected() teal.transform::data_extract_spec())cmdecod column ADCM dataset. aetime_start (teal.transform::choices_selected() teal.transform::data_extract_spec())ASTDTM column AE start ADAE dataset. aetime_end (teal.transform::choices_selected() teal.transform::data_extract_spec())AENDTM column AE end ADAE dataset. dstime_start (teal.transform::choices_selected() teal.transform::data_extract_spec())CMASTDTM column treatment start ADCM dataset. dstime_end (teal.transform::choices_selected() teal.transform::data_extract_spec())CMAENDTM column treatment end ADCM dataset. aerelday_start (teal.transform::choices_selected() teal.transform::data_extract_spec())ASTDY column ADAE dataset. aerelday_end (teal.transform::choices_selected() teal.transform::data_extract_spec())AENDY column ADAE dataset. dsrelday_start (teal.transform::choices_selected() teal.transform::data_extract_spec())ASTDY column ADCM dataset. dsrelday_end (teal.transform::choices_selected() teal.transform::data_extract_spec())AENDY column ADCM dataset. font_size (numeric) numeric vector length 3 current, min max font size values. plot_height optional, (numeric) vector length three c(value, min, max). Specifies height main plot renders slider plot interactively adjust plot height. plot_width optional, (numeric) vector length three c(value, min, max). Specifies width main plot renders slider plot interactively adjust plot width. pre_output optional, (shiny.tag) text placed output put output context. example title. post_output optional, (shiny.tag) text placed output put output context. example shiny::helpText() elements useful. ggplot2_args optional, (ggplot2_args) object created teal.widgets::ggplot2_args() settings module plot. argument merged option teal.ggplot2_args default module arguments (hard coded module body). details, see help vignette: vignette(\"custom-ggplot2-arguments\", package = \"teal.widgets\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_g_pp_patient_timeline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Teal Module: Patient Profile Timeline Teal Module ‚Äî tm_g_pp_patient_timeline","text":"","code":"library(scda) library(nestcolor)  synthetic_cdisc_data_latest <- synthetic_cdisc_data(\"latest\")  ADSL <- synthetic_cdisc_data_latest$adsl ADAE <- synthetic_cdisc_data_latest$adae ADCM <- synthetic_cdisc_data_latest$adcm  #' Modify ADCM ADCM$CMINDC <- paste0(\"Indication_\", as.numeric(ADCM$CMDECOD)) ADCM$CMDOSE <- 1 ADCM$CMDOSU <- \"U\" ADCM$CMROUTE <- \"CMROUTE\" ADCM$CMDOSFRQ <- \"CMDOSFRQ\" ADCM$CMSTDY <- 1 ADCM[ADCM$CMCAT == \"medcl B\", ]$CMSTDY <- 20 ADCM[ADCM$CMCAT == \"medcl C\", ]$CMSTDY <- 150 ADCM$CMENDY <- 500 ADCM[ADCM$CMCAT == \"medcl B\", ]$CMENDY <- 700 ADCM[ADCM$CMCAT == \"medcl C\", ]$CMENDY <- 1000 ADCM$CMASTDTM <- ADCM$ASTDTM ADCM$CMAENDTM <- ADCM$AENDTM formatters::var_labels(   ADCM[c(\"CMINDC\", \"CMDECOD\", \"CMSTDY\", \"CMENDY\")] ) <- c(   \"Indication\",   \"Reported Name of Drug, Med, or Therapy\",   \"Study Day of Start of Medication\",   \"Study Day of End of Medication\" ) adcm_keys <- c(\"STUDYID\", \"USUBJID\", \"ASTDTM\", \"CMSEQ\", \"ATC1\", \"ATC2\", \"ATC3\", \"ATC4\")  app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", ADSL,       code = \"synthetic_cdisc_data_latest <- synthetic_cdisc_data('latest')         ADSL <- synthetic_cdisc_data_latest$adsl\"     ),     cdisc_dataset(\"ADAE\", ADAE,       code = \"synthetic_cdisc_data_latest <- synthetic_cdisc_data('latest')         ADAE <- synthetic_cdisc_data_latest$adae\"     ),     cdisc_dataset(\"ADCM\", ADCM,       code = \"synthetic_cdisc_data_latest <- synthetic_cdisc_data('latest')         ADCM <- synthetic_cdisc_data_latest$adcm         ADCM$CMINDC <- paste0('Indication_', as.numeric(ADCM$CMDECOD))         ADCM$CMDOSE <- 1         ADCM$CMDOSU <- 'U'         ADCM$CMROUTE <- 'CMROUTE'         ADCM$CMDOSFRQ <- 'CMDOSFRQ'         ADCM$CMSTDY <- 1         ADCM[ADCM$CMCAT == 'medcl B', ]$CMSTDY <- 20         ADCM[ADCM$CMCAT == 'medcl C', ]$CMSTDY <- 150         ADCM$CMENDY <- 500         ADCM[ADCM$CMCAT == 'medcl B', ]$CMENDY <- 700         ADCM[ADCM$CMCAT == 'medcl C', ]$CMENDY <- 1000         ADCM$CMASTDTM <- ADCM$ASTDTM         ADCM$CMAENDTM <- ADCM$AENDTM         formatters::var_labels(           ADCM[c('CMINDC', 'CMDECOD', 'CMSTDY', 'CMENDY')]) <- c(             'Indication',             'Reported Name of Drug, Med, or Therapy',             'Study Day of Start of Medication',             'Study Day of End of Medication')\",       keys = adcm_keys     )   ),   modules = modules(     tm_g_pp_patient_timeline(       label = \"Patient timeline\",       dataname_adae = \"ADAE\",       dataname_adcm = \"ADCM\",       parentname = \"ADSL\",       patient_col = \"USUBJID\",       plot_height = c(600L, 200L, 2000L),       cmdecod = choices_selected(         choices = variable_choices(ADCM, \"CMDECOD\"),         selected = \"CMDECOD\",       ),       aeterm = choices_selected(         choices = variable_choices(ADAE, \"AETERM\"),         selected = c(\"AETERM\")       ),       aetime_start = choices_selected(         choices = variable_choices(ADAE, \"ASTDTM\"),         selected = c(\"ASTDTM\")       ),       aetime_end = choices_selected(         choices = variable_choices(ADAE, \"AENDTM\"),         selected = c(\"AENDTM\")       ),       dstime_start = choices_selected(         choices = variable_choices(ADCM, \"CMASTDTM\"),         selected = c(\"CMASTDTM\")       ),       dstime_end = choices_selected(         choices = variable_choices(ADCM, \"CMAENDTM\"),         selected = c(\"CMAENDTM\")       ),       aerelday_start = choices_selected(         choices = variable_choices(ADAE, \"ASTDY\"),         selected = c(\"ASTDY\")       ),       aerelday_end = choices_selected(         choices = variable_choices(ADAE, \"AENDY\"),         selected = c(\"AENDY\")       ),       dsrelday_start = choices_selected(         choices = variable_choices(ADCM, \"ASTDY\"),         selected = c(\"ASTDY\")       ),       dsrelday_end = choices_selected(         choices = variable_choices(ADCM, \"AENDY\"),         selected = c(\"AENDY\")       )     )   ) ) #> [INFO] 2022-10-12 02:08:36.8068 pid:1445 token:[] teal.modules.clinical Initializing tm_g_pp_patient_timeline if (FALSE) { shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_g_pp_therapy.html","id":null,"dir":"Reference","previous_headings":"","what":"Teal Module: Patient Profile Therapy Teal Module ‚Äî tm_g_pp_therapy","title":"Teal Module: Patient Profile Therapy Teal Module ‚Äî tm_g_pp_therapy","text":"teal module produces patient profile therapy plot using ADaM datasets.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_g_pp_therapy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Teal Module: Patient Profile Therapy Teal Module ‚Äî tm_g_pp_therapy","text":"","code":"tm_g_pp_therapy(   label,   dataname = \"ADCM\",   parentname = \"ADSL\",   patient_col = \"USUBJID\",   atirel = NULL,   cmdecod = NULL,   cmindc = NULL,   cmdose = NULL,   cmtrt = NULL,   cmdosu = NULL,   cmroute = NULL,   cmdosfrq = NULL,   cmstdy = NULL,   cmendy = NULL,   font_size = c(12L, 12L, 25L),   plot_height = c(700L, 200L, 2000L),   plot_width = NULL,   pre_output = NULL,   post_output = NULL,   ggplot2_args = teal.widgets::ggplot2_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_g_pp_therapy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Teal Module: Patient Profile Therapy Teal Module ‚Äî tm_g_pp_therapy","text":"label (character) menu item label module teal app. dataname (character) analysis data used teal module. parentname (character) parent analysis data used teal module, usually refers ADSL. patient_col (character) patient ID column used. atirel (teal.transform::choices_selected() teal.transform::data_extract_spec())ATIREL column ADCM dataset. cmdecod (teal.transform::choices_selected() teal.transform::data_extract_spec())CMDECOD column ADCM dataset. cmindc (teal.transform::choices_selected() teal.transform::data_extract_spec())CMINDC column ADCM dataset. cmdose (teal.transform::choices_selected() teal.transform::data_extract_spec())CMDOSE column ADCM dataset. cmtrt (teal.transform::choices_selected() teal.transform::data_extract_spec())CMTRT column ADCM dataset. cmdosu (teal.transform::choices_selected() teal.transform::data_extract_spec())CMDOSU column ADCM dataset. cmroute (teal.transform::choices_selected() teal.transform::data_extract_spec())CMROUTE column ADCM dataset. cmdosfrq (teal.transform::choices_selected() teal.transform::data_extract_spec())CMDOSFRQ column ADCM dataset. cmstdy (teal.transform::choices_selected() teal.transform::data_extract_spec())CMSTDY column ADCM dataset. cmendy (teal.transform::choices_selected() teal.transform::data_extract_spec())CMENDY column ADCM dataset. font_size (numeric) numeric vector length 3 current, min max font size values. plot_height optional, (numeric) vector length three c(value, min, max). Specifies height main plot renders slider plot interactively adjust plot height. plot_width optional, (numeric) vector length three c(value, min, max). Specifies width main plot renders slider plot interactively adjust plot width. pre_output optional, (shiny.tag) text placed output put output context. example title. post_output optional, (shiny.tag) text placed output put output context. example shiny::helpText() elements useful. ggplot2_args optional, (ggplot2_args) object created teal.widgets::ggplot2_args() settings module plot. argument merged option teal.ggplot2_args default module arguments (hard coded module body). details, see help vignette: vignette(\"custom-ggplot2-arguments\", package = \"teal.widgets\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_g_pp_therapy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Teal Module: Patient Profile Therapy Teal Module ‚Äî tm_g_pp_therapy","text":"","code":"library(scda) library(nestcolor)  synthetic_cdisc_data_latest <- synthetic_cdisc_data(\"latest\") ADSL <- synthetic_cdisc_data_latest$adsl ADCM <- synthetic_cdisc_data_latest$adcm  #' Modify ADCM ADCM$CMINDC <- paste0(\"Indication_\", as.numeric(ADCM$CMDECOD)) ADCM$CMDOSE <- 1 ADCM$CMTRT <- ADCM$CMCAT ADCM$CMDOSU <- \"U\" ADCM$CMROUTE <- \"CMROUTE\" ADCM$CMDOSFRQ <- \"CMDOSFRQ\" ADCM$CMASTDTM <- ADCM$ASTDTM ADCM$CMAENDTM <- ADCM$AENDTM formatters::var_labels(   ADCM[c(\"CMINDC\", \"CMTRT\", \"ASTDY\", \"AENDY\")] ) <- c(   \"Indication\",   \"Reported Name of Drug, Med, or Therapy\",   \"Study Day of Start of Medication\",   \"Study Day of End of Medication\" ) adcm_keys <- c(\"STUDYID\", \"USUBJID\", \"ASTDTM\", \"CMSEQ\", \"ATC1\", \"ATC2\", \"ATC3\", \"ATC4\")  app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", ADSL,       code = \"synthetic_cdisc_data_latest <- synthetic_cdisc_data('latest')         ADSL <- synthetic_cdisc_data_latest$adsl\"     ),     cdisc_dataset(\"ADCM\", ADCM,       code = \"ADCM <- synthetic_cdisc_data('latest')$adcm         ADCM$CMINDC <- paste0('Indication_', as.numeric(ADCM$CMDECOD))         ADCM$CMDOSE <- 1         ADCM$CMTRT <- ADCM$CMCAT         ADCM$CMDOSU <- 'U'         ADCM$CMROUTE <- 'CMROUTE'         ADCM$CMDOSFRQ <- 'CMDOSFRQ'         ADCM$CMASTDTM <- ADCM$ASTDTM         ADCM$CMAENDTM <- ADCM$AENDTM         formatters::var_labels(           ADCM[c('CMINDC', 'CMTRT', 'ASTDY', 'AENDY')]) <- c(             'Indication',             'Reported Name of Drug, Med, or Therapy',             'Study Day of Start of Medication',             'Study Day of End of Medication')         ADCM\",       keys = adcm_keys     )   ),   modules = modules(     tm_g_pp_therapy(       label = \"Therapy\",       dataname = \"ADCM\",       parentname = \"ADSL\",       patient_col = \"USUBJID\",       plot_height = c(600L, 200L, 2000L),       atirel = choices_selected(         choices = variable_choices(ADCM, \"ATIREL\"),         selected = c(\"ATIREL\")       ),       cmdecod = choices_selected(         choices = variable_choices(ADCM, \"CMDECOD\"),         selected = \"CMDECOD\"       ),       cmindc = choices_selected(         choices = variable_choices(ADCM, \"CMINDC\"),         selected = \"CMINDC\"       ),       cmdose = choices_selected(         choices = variable_choices(ADCM, \"CMDOSE\"),         selected = \"CMDOSE\"       ),       cmtrt = choices_selected(         choices = variable_choices(ADCM, \"CMTRT\"),         selected = \"CMTRT\"       ),       cmdosu = choices_selected(         choices = variable_choices(ADCM, \"CMDOSU\"),         selected = c(\"CMDOSU\")       ),       cmroute = choices_selected(         choices = variable_choices(ADCM, \"CMROUTE\"),         selected = \"CMROUTE\"       ),       cmdosfrq = choices_selected(         choices = variable_choices(ADCM, \"CMDOSFRQ\"),         selected = \"CMDOSFRQ\"       ),       cmstdy = choices_selected(         choices = variable_choices(ADCM, \"ASTDY\"),         selected = \"ASTDY\"       ),       cmendy = choices_selected(         choices = variable_choices(ADCM, \"AENDY\"),         selected = \"AENDY\"       )     )   ) ) #> [INFO] 2022-10-12 02:08:38.6999 pid:1445 token:[] teal.modules.clinical Initializing tm_g_pp_therapy if (FALSE) { shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_g_pp_vitals.html","id":null,"dir":"Reference","previous_headings":"","what":"Teal Module: Patient Profile Vitals Teal Module ‚Äî tm_g_pp_vitals","title":"Teal Module: Patient Profile Vitals Teal Module ‚Äî tm_g_pp_vitals","text":"teal module produces patient profile vitals plot using ADaM datasets.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_g_pp_vitals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Teal Module: Patient Profile Vitals Teal Module ‚Äî tm_g_pp_vitals","text":"","code":"tm_g_pp_vitals(   label,   dataname = \"ADVS\",   parentname = \"ADSL\",   patient_col = \"USUBJID\",   paramcd = NULL,   param = NULL,   aval = NULL,   xaxis = NULL,   font_size = c(12L, 12L, 25L),   plot_height = c(700L, 200L, 2000L),   plot_width = NULL,   pre_output = NULL,   post_output = NULL,   ggplot2_args = teal.widgets::ggplot2_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_g_pp_vitals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Teal Module: Patient Profile Vitals Teal Module ‚Äî tm_g_pp_vitals","text":"label (character) menu item label module teal app. dataname (character) analysis data used teal module. parentname (character) parent analysis data used teal module, usually refers ADSL. patient_col (character) patient ID column used. paramcd (teal.transform::choices_selected() teal.transform::data_extract_spec())PARAMCD column ADVS dataset. param (teal.transform::choices_selected() teal.transform::data_extract_spec())PARAM column ADVS dataset. aval (teal.transform::choices_selected() teal.transform::data_extract_spec())AVAL column ADVS dataset. xaxis (teal.transform::choices_selected() teal.transform::data_extract_spec()) time variable represented vitals plot x-axis. font_size (numeric) numeric vector length 3 current, min max font size values. plot_height optional, (numeric) vector length three c(value, min, max). Specifies height main plot renders slider plot interactively adjust plot height. plot_width optional, (numeric) vector length three c(value, min, max). Specifies width main plot renders slider plot interactively adjust plot width. pre_output optional, (shiny.tag) text placed output put output context. example title. post_output optional, (shiny.tag) text placed output put output context. example shiny::helpText() elements useful. ggplot2_args optional, (ggplot2_args) object created teal.widgets::ggplot2_args() settings module plot. argument merged option teal.ggplot2_args default module arguments (hard coded module body). details, see help vignette: vignette(\"custom-ggplot2-arguments\", package = \"teal.widgets\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_g_pp_vitals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Teal Module: Patient Profile Vitals Teal Module ‚Äî tm_g_pp_vitals","text":"","code":"library(scda) library(nestcolor) synthetic_cdisc_data_latest <- synthetic_cdisc_data(\"latest\") ADSL <- synthetic_cdisc_data_latest$adsl ADVS <- synthetic_cdisc_data_latest$advs  app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", ADSL,       code = \"synthetic_cdisc_data_latest <- synthetic_cdisc_data('latest')         ADSL <- synthetic_cdisc_data_latest$adsl\"     ),     cdisc_dataset(\"ADVS\", ADVS,       code = \"synthetic_cdisc_data_latest <- synthetic_cdisc_data('latest')         ADVS <- synthetic_cdisc_data_latest$advs\"     )   ),   modules = modules(     tm_g_pp_vitals(       label = \"Vitals\",       dataname = \"ADVS\",       parentname = \"ADSL\",       patient_col = \"USUBJID\",       plot_height = c(600L, 200L, 2000L),       paramcd = choices_selected(         choices = variable_choices(ADVS, \"PARAMCD\"),         selected = \"PARAMCD\"       ),       param = choices_selected(         choices = variable_choices(ADVS, \"PARAM\"),         selected = \"PARAM\"       ),       xaxis = choices_selected(         choices = variable_choices(ADVS, \"ADY\"),         selected = \"ADY\"       ),       aval = choices_selected(         choices = variable_choices(ADVS, \"AVAL\"),         selected = \"AVAL\"       )     )   ) ) #> [INFO] 2022-10-12 02:08:40.5385 pid:1445 token:[] teal.modules.clinical Initializing tm_g_pp_vitals if (FALSE) { shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_abnormality.html","id":null,"dir":"Reference","previous_headings":"","what":"Teal Module: Abnormality Summary Table ‚Äî tm_t_abnormality","title":"Teal Module: Abnormality Summary Table ‚Äî tm_t_abnormality","text":"Teal Module: Abnormality Summary Table","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_abnormality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Teal Module: Abnormality Summary Table ‚Äî tm_t_abnormality","text":"","code":"tm_t_abnormality(   label,   dataname,   parentname = ifelse(inherits(arm_var, \"data_extract_spec\"),     teal.transform::datanames_input(arm_var), \"ADSL\"),   arm_var,   by_vars,   grade,   abnormal = list(low = c(\"LOW\", \"LOW LOW\"), high = c(\"HIGH\", \"HIGH HIGH\")),   id_var = teal.transform::choices_selected(teal.transform::variable_choices(dataname,     subset = \"USUBJID\"), selected = \"USUBJID\", fixed = TRUE),   baseline_var =     teal.transform::choices_selected(teal.transform::variable_choices(dataname, subset =     \"BNRIND\"), selected = \"BNRIND\", fixed = TRUE),   treatment_flag_var =     teal.transform::choices_selected(teal.transform::variable_choices(dataname, subset =     \"ONTRTFL\"), selected = \"ONTRTFL\", fixed = TRUE),   treatment_flag =     teal.transform::choices_selected(teal.transform::value_choices(dataname, \"ONTRTFL\"),     selected = \"Y\", fixed = TRUE),   add_total = TRUE,   exclude_base_abn = FALSE,   drop_arm_levels = TRUE,   pre_output = NULL,   post_output = NULL,   na_level = \"<Missing>\",   basic_table_args = teal.widgets::basic_table_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_abnormality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Teal Module: Abnormality Summary Table ‚Äî tm_t_abnormality","text":"label (character) menu item label module teal app. dataname (character) analysis data used teal module. parentname (character) parent analysis data used teal module, usually refers ADSL. arm_var (choices_selected data_extract_spec) object available choices preselected option variable names can used arm_var. defines grouping variable(s) results table. two elements selected arm_var, second variable nested first variable. by_vars (choices_selected data_extract_spec) object available choices preselected option variable names used split summary rows. grade (teal.transform::choices_selected() teal.transform::data_extract_spec()) object available choices preselected option variable names can used specify abnormality grade. Variable must factor. abnormal (named list) defined user indicate abnormalities displayed. id_var (choices_selected data_extract_spec) object specifying variable name subject id. baseline_var (teal.transform::choices_selected() teal.transform::data_extract_spec()) variable baseline abnormality grade. treatment_flag_var (choices_selected data_extract_spec) treatment flag variable. treatment_flag (choices_selected] data_extract_spec) value indicating treatment records treatment_flag_var. add_total (logical) whether include column total number patients. exclude_base_abn (logical) whether exclude patients abnormal values baseline. drop_arm_levels (logical) drop unused arm_var levels. TRUE, arm_var levels set used dataname dataset. FALSE, arm_var levels set used parantname dataset. pre_output optional, (shiny.tag) text placed output put output context. example title. post_output optional, (shiny.tag) text placed output put output context. example shiny::helpText() elements useful. na_level (character) NA level input dataset, default \"<Missing>\". basic_table_args optional, (basic_table_args) object created teal.widgets::basic_table_args() settings module table. argument merged option teal.basic_table_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-basic-table-arguments\", package = \"teal.widgets\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_abnormality.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Teal Module: Abnormality Summary Table ‚Äî tm_t_abnormality","text":"Patients abnormality baseline treatment visit can excluded accordance GDSR specifications using exclude_base_abn.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_abnormality.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Teal Module: Abnormality Summary Table ‚Äî tm_t_abnormality","text":"","code":"library(scda) library(dplyr)  synthetic_cdisc_data_latest <- synthetic_cdisc_data(\"latest\") adsl <- synthetic_cdisc_data_latest$adsl adlb <- synthetic_cdisc_data_latest$adlb %>%   mutate(     ONTRTFL = case_when(       AVISIT %in% c(\"SCREENING\", \"BASELINE\") ~ \"\",       TRUE ~ \"Y\"     )   ) attr(adlb[[\"ONTRTFL\"]], \"label\") <- \"On Treatment Record Flag\"  app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", adsl,       code = \"synthetic_cdisc_data_latest <- synthetic_cdisc_data('latest')         ADSL <- synthetic_cdisc_data_latest$adsl\"     ),     cdisc_dataset(\"ADLB\", adlb,       code = \"synthetic_cdisc_data_latest <- synthetic_cdisc_data('latest')               ADLB <- synthetic_cdisc_data_latest$adlb %>%                 mutate(                   ONTRTFL = case_when(                     AVISIT %in% c('SCREENING', 'BASELINE') ~ '',                     TRUE ~ 'Y'                   )                 )               attr(ADLB[['ONTRTFL']], 'label') <- 'On Treatment Record Flag'               ADLB\"     )   ),   modules = modules(     tm_t_abnormality(       label = \"Abnormality Table\",       dataname = \"ADLB\",       arm_var = choices_selected(         choices = variable_choices(adsl, subset = c(\"ARM\", \"ARMCD\")),         selected = \"ARM\"       ),       add_total = FALSE,       by_vars = choices_selected(         choices = variable_choices(adlb, subset = c(\"LBCAT\", \"PARAM\", \"AVISIT\")),         selected = c(\"LBCAT\", \"PARAM\"),         keep_order = TRUE       ),       grade = choices_selected(         choices = variable_choices(adlb, subset = \"ANRIND\"),         selected = \"ANRIND\",         fixed = TRUE       ),       abnormal = list(low = \"LOW\", high = \"HIGH\"),       exclude_base_abn = FALSE     )   ) ) #> [INFO] 2022-10-12 02:08:42.2593 pid:1445 token:[] teal.modules.clinical Initializing tm_t_abnormality if (FALSE) { shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_abnormality_by_worst_grade.html","id":null,"dir":"Reference","previous_headings":"","what":"Teal Module: Laboratory test results with highest grade post-baseline ‚Äî tm_t_abnormality_by_worst_grade","title":"Teal Module: Laboratory test results with highest grade post-baseline ‚Äî tm_t_abnormality_by_worst_grade","text":"Teal Module: Laboratory test results highest grade post-baseline","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_abnormality_by_worst_grade.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Teal Module: Laboratory test results with highest grade post-baseline ‚Äî tm_t_abnormality_by_worst_grade","text":"","code":"tm_t_abnormality_by_worst_grade(   label,   dataname,   parentname = ifelse(inherits(arm_var, \"data_extract_spec\"),     teal.transform::datanames_input(arm_var), \"ADSL\"),   arm_var,   id_var = teal.transform::choices_selected(teal.transform::variable_choices(dataname,     subset = \"USUBJID\"), selected = \"USUBJID\", fixed = TRUE),   paramcd,   atoxgr_var =     teal.transform::choices_selected(teal.transform::variable_choices(dataname, subset =     \"ATOXGR\"), selected = \"ATOXGR\", fixed = TRUE),   worst_high_flag_var =     teal.transform::choices_selected(teal.transform::variable_choices(dataname, subset =     \"WGRHIFL\"), selected = \"WGRHIFL\", fixed = TRUE),   worst_low_flag_var =     teal.transform::choices_selected(teal.transform::variable_choices(dataname, subset =     \"WGRLOFL\"), selected = \"WGRLOFL\", fixed = TRUE),   worst_flag_indicator =     teal.transform::choices_selected(teal.transform::value_choices(dataname, var_choices     = \"WGRLOFL\"), selected = \"Y\", fixed = TRUE),   add_total = TRUE,   drop_arm_levels = TRUE,   pre_output = NULL,   post_output = NULL,   basic_table_args = teal.widgets::basic_table_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_abnormality_by_worst_grade.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Teal Module: Laboratory test results with highest grade post-baseline ‚Äî tm_t_abnormality_by_worst_grade","text":"label (character) menu item label module teal app. dataname (character) analysis data used teal module. parentname (character) parent analysis data used teal module, usually refers ADSL. arm_var (choices_selected data_extract_spec) object available choices preselected option variable names can used arm_var. defines grouping variable(s) results table. two elements selected arm_var, second variable nested first variable. id_var (choices_selected data_extract_spec) object specifying variable name subject id. paramcd (choices_selected data_extract_spec) variable value designating studied parameter. atoxgr_var (teal.transform::choices_selected() teal.transform::data_extract_spec()) object available choices preselected option variable names can used Analysis Toxicity Grade. worst_high_flag_var (teal.transform::choices_selected() teal.transform::data_extract_spec()) object available choices preselected option variable names can used Worst High Grade flag. worst_low_flag_var (teal.transform::choices_selected() teal.transform::data_extract_spec()) object available choices preselected option variable names can used Worst Low Grade flag. worst_flag_indicator (teal.transform::choices_selected() teal.transform::data_extract_spec()) value indicating worst grade. add_total (logical) whether include column total number patients. drop_arm_levels (logical) drop unused arm_var levels. TRUE, arm_var levels set used dataname dataset. FALSE, arm_var levels set used parantname dataset. pre_output optional, (shiny.tag) text placed output put output context. example title. post_output optional, (shiny.tag) text placed output put output context. example shiny::helpText() elements useful. basic_table_args optional, (basic_table_args) object created teal.widgets::basic_table_args() settings module table. argument merged option teal.basic_table_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-basic-table-arguments\", package = \"teal.widgets\").","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_abnormality_by_worst_grade.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Teal Module: Laboratory test results with highest grade post-baseline ‚Äî tm_t_abnormality_by_worst_grade","text":"","code":"library(scda) library(dplyr)  synthetic_cdisc_data_latest <- synthetic_cdisc_data(\"latest\") adsl <- synthetic_cdisc_data_latest$adsl adlb <- synthetic_cdisc_data_latest$adlb %>%   filter(!AVISIT %in% c(\"SCREENING\", \"BASELINE\"))  app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", adsl,       code = \"synthetic_cdisc_data_latest <- synthetic_cdisc_data('latest')         ADSL <- synthetic_cdisc_data_latest$adsl\"     ),     cdisc_dataset(\"ADLB\", adlb,       code = \"synthetic_cdisc_data_latest <- synthetic_cdisc_data('latest')         ADLB <- synthetic_cdisc_data('latest')$adlb %>%         filter(!AVISIT %in% c('SCREENING', 'BASELINE'))\"     )   ),   modules = modules(     tm_t_abnormality_by_worst_grade(       label = \"Laboratory test results with highest grade post-baseline\",       dataname = \"ADLB\",       arm_var = choices_selected(         choices = variable_choices(adsl, subset = c(\"ARM\", \"ARMCD\")),         selected = \"ARM\"       ),       paramcd = choices_selected(         choices = value_choices(adlb, \"PARAMCD\", \"PARAM\"),         selected = c(\"ALT\", \"CRP\", \"IGA\")       ),       add_total = FALSE     )   ),   filter = (     list(       ADSL = list(SAFFL = \"Y\"),       ADLB = list(ONTRTFL = \"Y\")     )   ) ) #> [INFO] 2022-10-12 02:08:43.9850 pid:1445 token:[] teal.modules.clinical Initializing tm_t_abnormality_by_worst_grade if (FALSE) { shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_ancova.html","id":null,"dir":"Reference","previous_headings":"","what":"Teal Module: ANCOVA Teal Module ‚Äî tm_t_ancova","title":"Teal Module: ANCOVA Teal Module ‚Äî tm_t_ancova","text":"Teal Module: ANCOVA Teal Module","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_ancova.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Teal Module: ANCOVA Teal Module ‚Äî tm_t_ancova","text":"","code":"tm_t_ancova(   label,   dataname,   parentname = ifelse(inherits(arm_var, \"data_extract_spec\"),     teal.transform::datanames_input(arm_var), \"ADSL\"),   arm_var,   arm_ref_comp = NULL,   aval_var,   cov_var,   avisit,   paramcd,   conf_level = teal.transform::choices_selected(c(0.95, 0.9, 0.8), 0.95, keep_order =     TRUE),   pre_output = NULL,   post_output = NULL,   basic_table_args = teal.widgets::basic_table_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_ancova.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Teal Module: ANCOVA Teal Module ‚Äî tm_t_ancova","text":"label (character) menu item label module teal app. dataname (character) analysis data used teal module. parentname (character) parent analysis data used teal module, usually refers ADSL. arm_var (choices_selected data_extract_spec) object available choices preselected option variable names can used arm_var. defines grouping variable(s) results table. two elements selected arm_var, second variable nested first variable. arm_ref_comp optional, (list) specified must named list element corresponding arm variable ADSL element must another list (possibly delayed teal.transform::variable_choices() delayed teal.transform::value_choices() elements named ref comp defined default reference comparison arms arm variable changed. aval_var (choices_selected data_extract_spec) object available choices preselected option analysis variable. cov_var (choices_selected data_extract_spec) object available choices preselected option covariates variables. avisit (choices_selected data_extract_spec) value analysis visit AVISIT interest. paramcd (choices_selected data_extract_spec) variable value designating studied parameter. conf_level (choices_selected) object available choices preselected option confidence level, within range (0, 1). pre_output optional, (shiny.tag) text placed output put output context. example title. post_output optional, (shiny.tag) text placed output put output context. example shiny::helpText() elements useful. basic_table_args optional, (basic_table_args) object created teal.widgets::basic_table_args() settings module table. argument merged option teal.basic_table_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-basic-table-arguments\", package = \"teal.widgets\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_ancova.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Teal Module: ANCOVA Teal Module ‚Äî tm_t_ancova","text":"module produces analysis variance summary table similar STREAM template aovt01 multiple endpoints selected. single endpoint selected, unadjusted adjusted comparison provided. modules expects analysis data following variables:","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_ancova.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Teal Module: ANCOVA Teal Module ‚Äî tm_t_ancova","text":"","code":"# Preparation of the test case. library(dplyr) library(scda) adsl <- synthetic_cdisc_data(\"latest\")$adsl adqs <- synthetic_cdisc_data(\"latest\")$adqs  arm_ref_comp <- list(   ARM = list(     ref = \"B: Placebo\",     comp = c(\"A: Drug X\", \"C: Combination\")   ),   ACTARMCD = list(     ref = \"ARM B\",     comp = c(\"ARM A\", \"ARM C\")   ) )  app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", adsl),     cdisc_dataset(\"ADQS\", adqs),     code =       '       adsl <- synthetic_cdisc_data(\"latest\")$adsl       adqs <- synthetic_cdisc_data(\"latest\")$adqs       '   ),   modules = modules(     tm_t_ancova(       label = \"ANCOVA table\",       dataname = \"ADQS\",       avisit = choices_selected(         choices = value_choices(adqs, \"AVISIT\"),         selected = \"WEEK 1 DAY 8\"       ),       arm_var = choices_selected(         choices = variable_choices(adsl, c(\"ARM\", \"ACTARMCD\", \"ARMCD\")),         selected = \"ARMCD\"       ),       arm_ref_comp = arm_ref_comp,       aval_var = choices_selected(         choices = variable_choices(adqs, c(\"CHG\", \"AVAL\")),         selected = \"CHG\"       ),       cov_var = choices_selected(         choices = variable_choices(adqs, c(\"BASE\", \"STRATA1\", \"SEX\")),         selected = \"STRATA1\"       ),       paramcd = choices_selected(         choices = value_choices(adqs, \"PARAMCD\", \"PARAM\"),         selected = \"FKSI-FWB\"       )     )   ) ) #> [INFO] 2022-10-12 02:08:47.0388 pid:1445 token:[] teal.modules.clinical Initializing tm_t_ancova if (FALSE) { shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_binary_outcome.html","id":null,"dir":"Reference","previous_headings":"","what":"Teal Module: Binary Outcome Table ‚Äî tm_t_binary_outcome","title":"Teal Module: Binary Outcome Table ‚Äî tm_t_binary_outcome","text":"module produces binary outcome response summary table, option match STREAM template RSPT01.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_binary_outcome.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Teal Module: Binary Outcome Table ‚Äî tm_t_binary_outcome","text":"","code":"tm_t_binary_outcome(   label,   dataname,   parentname = ifelse(test = inherits(arm_var, \"data_extract_spec\"), yes =     teal.transform::datanames_input(arm_var), no = \"ADSL\"),   arm_var,   arm_ref_comp = NULL,   paramcd,   strata_var,   aval_var = teal.transform::choices_selected(choices =     teal.transform::variable_choices(dataname, c(\"AVALC\", \"SEX\")), selected = \"AVALC\",     fixed = FALSE),   conf_level = teal.transform::choices_selected(c(0.95, 0.9, 0.8), 0.95, keep_order =     TRUE),   default_responses = c(\"CR\", \"PR\", \"Y\", \"Complete Response (CR)\",     \"Partial Response (PR)\", \"M\"),   rsp_table = FALSE,   add_total = FALSE,   pre_output = NULL,   post_output = NULL,   basic_table_args = teal.widgets::basic_table_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_binary_outcome.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Teal Module: Binary Outcome Table ‚Äî tm_t_binary_outcome","text":"label (character) menu item label module teal app. dataname (character) analysis data used teal module. parentname (character) parent analysis data used teal module, usually refers ADSL. arm_var (choices_selected data_extract_spec) object available choices preselected option variable names can used arm_var. defines grouping variable(s) results table. two elements selected arm_var, second variable nested first variable. arm_ref_comp optional, (list) specified must named list element corresponding arm variable ADSL element must another list (possibly delayed teal.transform::variable_choices() delayed teal.transform::value_choices() elements named ref comp defined default reference comparison arms arm variable changed. paramcd (choices_selected data_extract_spec) variable value designating studied parameter. strata_var (choices_selected data_extract_spec) names variables stratified analysis. aval_var (choices_selected data_extract_spec) object available choices preselected option analysis variable. conf_level (choices_selected) object available choices preselected option confidence level, within range (0, 1). default_responses (list character)  defines default codes response variable module per value paramcd. passed vector broadcasted paramcd values. passed list must named contain arrays, name corresponding single value paramcd. array may contain default response values named arrays rsp default selected response values levels default level choices. rsp_table (logical) initial set-module match STREAM template rspt01. (default FALSE) add_total (logical) whether include column total number patients. pre_output optional, (shiny.tag) text placed output put output context. example title. post_output optional, (shiny.tag) text placed output put output context. example shiny::helpText() elements useful. basic_table_args optional, (basic_table_args) object created teal.widgets::basic_table_args() settings module table. argument merged option teal.basic_table_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-basic-table-arguments\", package = \"teal.widgets\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_binary_outcome.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Teal Module: Binary Outcome Table ‚Äî tm_t_binary_outcome","text":"teal::module() object","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_binary_outcome.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Teal Module: Binary Outcome Table ‚Äî tm_t_binary_outcome","text":"Additional standard UI inputs include responders, ref_arm, comp_arm combine_comp_arms (default FALSE) Default values inputs var_arm, ref_arm comp_arm set NULL, updated accordingly based selection paramcd var_arm display order response categories partitioned statistics section inherits factor level order source data. Use base::factor() levels argument manipulate source data order include/exclude re-categorize response categories arrange display order. response categories \"Missing\" \"Evaluable (NE)\" \"Missing unevaluable\", 95\\ confidence interval calculated. Reference arms automatically combined multiple arms selected reference group.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_binary_outcome.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Teal Module: Binary Outcome Table ‚Äî tm_t_binary_outcome","text":"","code":"library(dplyr) library(scda)  synthetic_cdisc_data_latest <- synthetic_cdisc_data(\"latest\") ADSL <- synthetic_cdisc_data_latest$adsl ADRS <- synthetic_cdisc_data_latest$adrs %>%   mutate(AVALC = d_onco_rsp_label(AVALC)) %>%   filter(PARAMCD != \"OVRINV\" | AVISIT == \"FOLLOW UP\") arm_ref_comp <- list(   ARMCD = list(ref = \"ARM B\", comp = c(\"ARM A\", \"ARM C\")),   ARM = list(ref = \"B: Placebo\", comp = c(\"A: Drug X\", \"C: Combination\")) ) app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", ADSL),     cdisc_dataset(\"ADRS\", ADRS),     code =       \"synthetic_cdisc_data_latest <- synthetic_cdisc_data('latest')        ADSL <- synthetic_cdisc_data_latest$adsl        ADRS <- synthetic_cdisc_data_latest$adrs %>%        mutate(AVALC = d_onco_rsp_label(AVALC)) %>%        filter(PARAMCD != 'OVRINV' | AVISIT == 'FOLLOW UP')\"   ),   modules = modules(     tm_t_binary_outcome(       label = \"Responders\",       dataname = \"ADRS\",       paramcd = choices_selected(         choices = value_choices(ADRS, \"PARAMCD\", \"PARAM\"),         selected = \"BESRSPI\"       ),       arm_var = choices_selected(         choices = variable_choices(ADRS, c(\"ARM\", \"ARMCD\", \"ACTARMCD\")),         selected = \"ARM\"       ),       arm_ref_comp = arm_ref_comp,       strata_var = choices_selected(         choices = variable_choices(ADRS, c(\"SEX\", \"BMRKR2\", \"RACE\")),         select = \"RACE\"       ),       default_responses = list(         BESRSPI = list(           rsp = c(\"Complete Response (CR)\", \"Partial Response (PR)\"),           levels = c(             \"Complete Response (CR)\", \"Partial Response (PR)\",             \"Stable Disease (SD)\", \"Progressive Disease (PD)\"           )         ),         INVET = list(           rsp = c(\"Stable Disease (SD)\", \"Not Evaluable (NE)\"),           levels = c(             \"Complete Response (CR)\", \"Not Evaluable (NE)\", \"Partial Response (PR)\",             \"Progressive Disease (PD)\", \"Stable Disease (SD)\"           )         ),         OVRINV = list(           rsp = c(\"Progressive Disease (PD)\", \"Stable Disease (SD)\"),           levels = c(\"Progressive Disease (PD)\", \"Stable Disease (SD)\", \"Not Evaluable (NE)\")         )       )     )   ) ) #> [INFO] 2022-10-12 02:08:48.7246 pid:1445 token:[] teal.modules.clinical Initializing tm_t_binary_outcome if (FALSE) { shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_coxreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Teal Module: Cox Regression Model ‚Äî tm_t_coxreg","title":"Teal Module: Cox Regression Model ‚Äî tm_t_coxreg","text":"Teal module fit Cox univariate multivariate models consistent COXT01 COXT02 standard outputs, respectively.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_coxreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Teal Module: Cox Regression Model ‚Äî tm_t_coxreg","text":"","code":"tm_t_coxreg(   label,   dataname,   parentname = ifelse(inherits(arm_var, \"data_extract_spec\"),     teal.transform::datanames_input(arm_var), \"ADSL\"),   arm_var,   arm_ref_comp = NULL,   paramcd,   cov_var,   strata_var,   aval_var = teal.transform::choices_selected(teal.transform::variable_choices(dataname,     \"AVAL\"), \"AVAL\", fixed = TRUE),   cnsr_var = teal.transform::choices_selected(teal.transform::variable_choices(dataname,     \"CNSR\"), \"CNSR\", fixed = TRUE),   multivariate = TRUE,   conf_level = teal.transform::choices_selected(c(0.95, 0.9, 0.8), 0.95, keep_order =     TRUE),   pre_output = NULL,   post_output = NULL,   basic_table_args = teal.widgets::basic_table_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_coxreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Teal Module: Cox Regression Model ‚Äî tm_t_coxreg","text":"label (character) menu item label module teal app. dataname (character) analysis data used teal module. parentname (character) parent analysis data used teal module, usually refers ADSL. arm_var (choices_selected data_extract_spec) object available choices preselected option variable names can used arm_var. defines grouping variable(s) results table. two elements selected arm_var, second variable nested first variable. arm_ref_comp optional, (list) specified must named list element corresponding arm variable ADSL element must another list (possibly delayed teal.transform::variable_choices() delayed teal.transform::value_choices() elements named ref comp defined default reference comparison arms arm variable changed. paramcd (choices_selected data_extract_spec) variable value designating studied parameter. cov_var (choices_selected data_extract_spec) object available choices preselected option covariates variables. strata_var (choices_selected data_extract_spec) names variables stratified analysis. aval_var (choices_selected data_extract_spec) object available choices preselected option analysis variable. cnsr_var (choices_selected data_extract_spec) object available choices preselected option censoring variable. multivariate (logical) FALSE, univariate approach used (equivalent COXT01 standard) instead multivariate model (equivalent COXT02 standard). conf_level (choices_selected) object available choices preselected option confidence level, within range (0, 1). pre_output optional, (shiny.tag) text placed output put output context. example title. post_output optional, (shiny.tag) text placed output put output context. example shiny::helpText() elements useful. basic_table_args optional, (basic_table_args) object created teal.widgets::basic_table_args() settings module table. argument merged option teal.basic_table_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-basic-table-arguments\", package = \"teal.widgets\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_coxreg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Teal Module: Cox Regression Model ‚Äî tm_t_coxreg","text":"Cox Proportional Hazards (PH) model commonly used method estimate magnitude effect survival analysis. assumes proportional hazards: ratio hazards groups (e.g., two arms) constant time. ratio referred \"hazard ratio\" (HR) one commonly reported metrics describe effect size survival analysis. information Cox Proportional Hazards Model, check \"Statistical Analysis Clinical Trials Data R\", NEST team. modules expects analysis data following variables: arm variables, stratification covariate variables taken ADSL data.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_coxreg.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Teal Module: Cox Regression Model ‚Äî tm_t_coxreg","text":"likelihood ratio test supported model including strata, Wald test substituted. Multivariate default choice backward compatibility.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_coxreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Teal Module: Cox Regression Model ‚Äî tm_t_coxreg","text":"","code":"## First example ## ============= ## The example below is based on the usual approach involving creation of ## a random CDISC dataset and then running the application.  library(scda)  synthetic_cdisc_data_latest <- synthetic_cdisc_data(\"latest\") ADSL <- synthetic_cdisc_data_latest$adsl ADTTE <- synthetic_cdisc_data_latest$adtte arm_ref_comp <- list(   ACTARMCD = list(     ref = \"ARM B\",     comp = c(\"ARM A\", \"ARM C\")   ),   ARM = list(     ref = \"B: Placebo\",     comp = c(\"A: Drug X\", \"C: Combination\")   ) )  app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", ADSL,       code = \"synthetic_cdisc_data_latest <- synthetic_cdisc_data('latest')         ADSL <- synthetic_cdisc_data_latest$adsl\"     ),     cdisc_dataset(\"ADTTE\", ADTTE,       code = \"synthetic_cdisc_data_latest <- synthetic_cdisc_data('latest')         ADTTE <- synthetic_cdisc_data_latest$adtte\"     )   ),   modules = modules(     tm_t_coxreg(       label = \"Cox Reg.\",       dataname = \"ADTTE\",       arm_var = choices_selected(c(\"ARM\", \"ARMCD\", \"ACTARMCD\"), \"ARM\"),       arm_ref_comp = arm_ref_comp,       paramcd = choices_selected(         value_choices(ADTTE, \"PARAMCD\", \"PARAM\"), \"OS\"       ),       strata_var = choices_selected(         c(\"COUNTRY\", \"STRATA1\", \"STRATA2\"), \"STRATA1\"       ),       cov_var = choices_selected(         c(\"AGE\", \"BMRKR1\", \"BMRKR2\", \"REGION1\"), \"AGE\"       ),       multivariate = TRUE     )   ) ) #> [INFO] 2022-10-12 02:08:50.2820 pid:1445 token:[] teal.modules.clinical Initializing tm_t_coxreg if (FALSE) { shinyApp(app$ui, app$server) }   ## Second example ## ============== ## This time, a synthetic pair of ADTTE/ADSL is fabricated for a Cox regression ## where ties and pval_method matter.  ## Dataset fabrication ## -------------------  ADTTE <- data.frame(   STUDYID = \"LUNG\",   AVAL = c(4, 3, 1, 1, 2, 2, 3, 1, 2),   CNSR = c(1, 1, 1, 0, 1, 1, 0, 0, 0),   ARMCD = factor(     c(0, 1, 1, 1, 1, 0, 0, 0, 0),     labels = c(\"ARM A\", \"ARM B\")   ),   SEX = factor(     c(0, 0, 0, 0, 1, 1, 1, 1, 1),     labels = c(\"F\", \"M\")   ),   INST = factor(c(\"A\", \"A\", \"B\", \"B\", \"A\", \"B\", \"A\", \"B\", \"A\")),   stringsAsFactors = FALSE ) ADTTE <- base::rbind(ADTTE, ADTTE, ADTTE, ADTTE) ADTTE <- dplyr::as_tibble(ADTTE) set.seed(1) ADTTE$INST <- sample(ADTTE$INST) ADTTE$AGE <- sample(seq(5, 75, 5), size = nrow(ADTTE), replace = TRUE) ADTTE$USUBJID <- paste(\"sub\", 1:nrow(ADTTE), ADTTE$INST, sep = \"-\") ADTTE$PARAM <- ADTTE$PARAMCD <- \"OS\" ADSL <- subset(   ADTTE,   select = c(\"USUBJID\", \"STUDYID\", \"ARMCD\", \"SEX\", \"INST\", \"AGE\") )  ## Teal application ## ================ ## Note that the R code exported by `Show R Code` does not include the data ## preprocessing. You will need to create the dataset as above before ## running the exported R code.  arm_ref_comp <- list(ARMCD = list(ref = \"ARM A\", comp = c(\"ARM B\"))) app <- init(   data = cdisc_data(     cdisc_dataset(       dataname = \"ADSL\",       x = ADSL     ),     cdisc_dataset(       dataname = \"ADTTE\",       x = ADTTE     )   ),   modules = modules(     tm_t_coxreg(       label = \"Cox Reg.\",       dataname = \"ADTTE\",       arm_var = choices_selected(c(\"ARMCD\"), \"ARMCD\"),       arm_ref_comp = arm_ref_comp,       paramcd = choices_selected(         value_choices(ADTTE, \"PARAMCD\", \"PARAM\"), \"OS\"       ),       strata_var = choices_selected(c(\"INST\"), NULL),       cov_var = choices_selected(c(\"SEX\", \"AGE\"), \"SEX\"),       multivariate = TRUE     )   ) ) #> [INFO] 2022-10-12 02:08:50.3797 pid:1445 token:[] teal.modules.clinical Initializing tm_t_coxreg if (FALSE) { shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Teal Module: Events by Term ‚Äî tm_t_events","title":"Teal Module: Events by Term ‚Äî tm_t_events","text":"Teal Module: Events Term","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Teal Module: Events by Term ‚Äî tm_t_events","text":"","code":"tm_t_events(   label,   dataname,   parentname = ifelse(inherits(arm_var, \"data_extract_spec\"),     teal.transform::datanames_input(arm_var), \"ADSL\"),   arm_var,   hlt,   llt,   add_total = TRUE,   event_type = \"event\",   sort_criteria = c(\"freq_desc\", \"alpha\"),   prune_freq = 0,   prune_diff = 0,   drop_arm_levels = TRUE,   pre_output = NULL,   post_output = NULL,   basic_table_args = teal.widgets::basic_table_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Teal Module: Events by Term ‚Äî tm_t_events","text":"label (character) menu item label module teal app. dataname (character) analysis data used teal module. parentname (character) parent analysis data used teal module, usually refers ADSL. arm_var (choices_selected data_extract_spec) object available choices preselected option variable names can used arm_var. defines grouping variable(s) results table. two elements selected arm_var, second variable nested first variable. hlt (choices_selected data_extract_spec) name variable high level term events. llt (choices_selected data_extract_spec) name variable low level term events. add_total (logical) whether include column total number patients. event_type (character) type event summarized (e.g. adverse event, treatment). Default \"event\". sort_criteria (character) sort final table. Default option freq_desc sorts decreasing total number patients event. Alternative option alpha sorts events alphabetically. prune_freq (number) threshold use trimming table using event incidence rate column. prune_diff (number) threshold use trimming table using criteria difference rates two columns. drop_arm_levels (logical) drop unused arm_var levels. TRUE, arm_var levels set used dataname dataset. FALSE, arm_var levels set used parantname dataset. pre_output optional, (shiny.tag) text placed output put output context. example title. post_output optional, (shiny.tag) text placed output put output context. example shiny::helpText() elements useful. basic_table_args optional, (basic_table_args) object created teal.widgets::basic_table_args() settings module table. argument merged option teal.basic_table_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-basic-table-arguments\", package = \"teal.widgets\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_events.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Teal Module: Events by Term ‚Äî tm_t_events","text":"","code":"library(dplyr) library(scda)  adsl <- synthetic_cdisc_data(\"latest\")$adsl adae <- synthetic_cdisc_data(\"latest\")$adae  app <- teal::init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", adsl, code = 'ADSL <- synthetic_cdisc_data(\"latest\")$adsl'),     cdisc_dataset(\"ADAE\", adae, code = 'ADAE <- synthetic_cdisc_data(\"latest\")$adae')   ),   modules = modules(     tm_t_events(       label = \"Adverse Event Table\",       dataname = \"ADAE\",       arm_var = choices_selected(c(\"ARM\", \"ARMCD\"), \"ARM\"),       llt = choices_selected(         choices = variable_choices(adae, c(\"AETERM\", \"AEDECOD\")),         selected = c(\"AEDECOD\")       ),       hlt = choices_selected(         choices = variable_choices(adae, c(\"AEBODSYS\", \"AESOC\")),         selected = \"AEBODSYS\"       ),       add_total = TRUE,       event_type = \"adverse event\"     )   ) ) #> [INFO] 2022-10-12 02:08:53.7891 pid:1445 token:[] teal.modules.clinical Initializing tm_t_events if (FALSE) { shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_events_by_grade.html","id":null,"dir":"Reference","previous_headings":"","what":"Teal Module: Events by Grade ‚Äî tm_t_events_by_grade","title":"Teal Module: Events by Grade ‚Äî tm_t_events_by_grade","text":"Teal Module: Events Grade","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_events_by_grade.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Teal Module: Events by Grade ‚Äî tm_t_events_by_grade","text":"","code":"tm_t_events_by_grade(   label,   dataname,   parentname = ifelse(inherits(arm_var, \"data_extract_spec\"),     teal.transform::datanames_input(arm_var), \"ADSL\"),   arm_var,   hlt,   llt,   grade,   grading_groups = list(`Any Grade (%)` = c(\"1\", \"2\", \"3\", \"4\", \"5\"), `Grade 1-2 (%)` =     c(\"1\", \"2\"), `Grade 3-4 (%)` = c(\"3\", \"4\"), `Grade 5 (%)` = \"5\"),   col_by_grade = FALSE,   prune_freq = 0,   prune_diff = 0,   add_total = TRUE,   drop_arm_levels = TRUE,   pre_output = NULL,   post_output = NULL,   basic_table_args = teal.widgets::basic_table_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_events_by_grade.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Teal Module: Events by Grade ‚Äî tm_t_events_by_grade","text":"label (character) menu item label module teal app. dataname (character) analysis data used teal module. parentname (character) parent analysis data used teal module, usually refers ADSL. arm_var (choices_selected data_extract_spec) object available choices preselected option variable names can used arm_var. defines grouping variable(s) results table. two elements selected arm_var, second variable nested first variable. hlt (choices_selected data_extract_spec) name variable high level term events. llt (choices_selected data_extract_spec) name variable low level term events. grade (character)  name severity level variable. grading_groups (character)  list grading groups used col_by_grade = TRUE. col_by_grade (flag)  whether display grading groups nested columns. prune_freq (number) threshold use trimming table using event incidence rate column. prune_diff (number) threshold use trimming table using criteria difference rates two columns. add_total (logical) whether include column total number patients. drop_arm_levels (logical) drop unused arm_var levels. TRUE, arm_var levels set used dataname dataset. FALSE, arm_var levels set used parantname dataset. pre_output optional, (shiny.tag) text placed output put output context. example title. post_output optional, (shiny.tag) text placed output put output context. example shiny::helpText() elements useful. basic_table_args optional, (basic_table_args) object created teal.widgets::basic_table_args() settings module table. argument merged option teal.basic_table_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-basic-table-arguments\", package = \"teal.widgets\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_events_by_grade.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Teal Module: Events by Grade ‚Äî tm_t_events_by_grade","text":"","code":"library(dplyr) library(scda) library(tern)  adsl <- synthetic_cdisc_data(\"latest\")$adsl adae <- synthetic_cdisc_data(\"latest\")$adae  app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", adsl, code = 'adsl <- synthetic_cdisc_data(\"latest\")$adsl'),     cdisc_dataset(\"ADAE\", adae, code = 'adae <- synthetic_cdisc_data(\"latest\")$adae')   ),   modules = modules(     tm_t_events_by_grade(       label = \"Adverse Events by Grade Table\",       dataname = \"ADAE\",       arm_var = choices_selected(c(\"ARM\", \"ARMCD\"), \"ARM\"),       llt = choices_selected(         choices = variable_choices(adae, c(\"AETERM\", \"AEDECOD\")),         selected = c(\"AEDECOD\")       ),       hlt = choices_selected(         choices = variable_choices(adae, c(\"AEBODSYS\", \"AESOC\")),         selected = \"AEBODSYS\"       ),       grade = choices_selected(         choices = variable_choices(adae, c(\"AETOXGR\", \"AESEV\")),         selected = \"AETOXGR\"       )     )   ) ) #> [INFO] 2022-10-12 02:08:56.3562 pid:1445 token:[] teal.modules.clinical Initializing tm_t_events_by_grade if (FALSE) { shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_events_patyear.html","id":null,"dir":"Reference","previous_headings":"","what":"Teal module: Event rates adjusted for patient-years ‚Äî tm_t_events_patyear","title":"Teal module: Event rates adjusted for patient-years ‚Äî tm_t_events_patyear","text":"Teal module: Event rates adjusted patient-years","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_events_patyear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Teal module: Event rates adjusted for patient-years ‚Äî tm_t_events_patyear","text":"","code":"tm_t_events_patyear(   label,   dataname,   parentname = ifelse(inherits(arm_var, \"data_extract_spec\"),     teal.transform::datanames_input(arm_var), \"ADSL\"),   arm_var,   events_var,   paramcd,   aval_var = teal.transform::choices_selected(teal.transform::variable_choices(dataname,     \"AVAL\"), \"AVAL\", fixed = TRUE),   avalu_var = teal.transform::choices_selected(teal.transform::variable_choices(dataname,     \"AVALU\"), \"AVALU\", fixed = TRUE),   add_total = TRUE,   conf_level = teal.transform::choices_selected(c(0.95, 0.9, 0.8), 0.95, keep_order =     TRUE),   drop_arm_levels = TRUE,   pre_output = NULL,   post_output = NULL,   basic_table_args = teal.widgets::basic_table_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_events_patyear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Teal module: Event rates adjusted for patient-years ‚Äî tm_t_events_patyear","text":"label (character) menu item label module teal app. dataname (character) analysis data used teal module. parentname (character) parent analysis data used teal module, usually refers ADSL. arm_var (choices_selected data_extract_spec) object available choices preselected option variable names can used arm_var. defines grouping variable(s) results table. two elements selected arm_var, second variable nested first variable. events_var (teal.transform::choices_selected() teal.transform::data_extract_spec()) object event counts. paramcd (choices_selected data_extract_spec) variable value designating studied parameter. aval_var (choices_selected data_extract_spec) object available choices preselected option analysis variable. avalu_var (teal.transform::choices_selected() teal.transform::data_extract_spec()) object available choices preselected option analysis unit variable. add_total (logical) whether include column total number patients. conf_level (choices_selected) object available choices preselected option confidence level, within range (0, 1). drop_arm_levels (logical) drop unused arm_var levels. TRUE, arm_var levels set used dataname dataset. FALSE, arm_var levels set used parantname dataset. pre_output optional, (shiny.tag) text placed output put output context. example title. post_output optional, (shiny.tag) text placed output put output context. example shiny::helpText() elements useful. basic_table_args optional, (basic_table_args) object created teal.widgets::basic_table_args() settings module table. argument merged option teal.basic_table_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-basic-table-arguments\", package = \"teal.widgets\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_events_patyear.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Teal module: Event rates adjusted for patient-years ‚Äî tm_t_events_patyear","text":"","code":"# Preparation of the test case. library(dplyr) library(scda)  adsl <- synthetic_cdisc_data(\"rcd_2022_06_27\")$adsl adaette <- synthetic_cdisc_data(\"rcd_2022_06_27\")$adaette adaette <- adaette %>%   dplyr::filter(PARAMCD %in% c(\"AETTE1\", \"AETTE2\", \"AETTE3\")) %>%   dplyr::mutate(is_event = CNSR == 0) %>%   dplyr::mutate(n_events = as.integer(is_event))  app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", adsl),     cdisc_dataset(\"ADAETTE\", adaette),     code =       \"adsl <- synthetic_cdisc_data('rcd_2022_06_27')$adsl       adaette <- synthetic_cdisc_data('rcd_2022_06_27')$adaette       adaette <- adaette %>%         dplyr::filter(PARAMCD %in% c('AETTE1', 'AETTE2', 'AETTE3')) %>%         dplyr::mutate(is_event = CNSR == 0) %>%         dplyr::mutate(n_events = as.integer(is_event))\"   ),   modules = modules(     tm_t_events_patyear(       label = \"AE Rate Adjusted for Patient-Years At Risk Table\",       dataname = \"ADAETTE\",       arm_var = choices_selected(         choices = variable_choices(adsl, c(\"ARM\", \"ARMCD\")),         selected = \"ARMCD\"       ),       add_total = TRUE,       events_var = choices_selected(         choices = variable_choices(adaette, \"n_events\"),         selected = \"n_events\",         fixed = TRUE       ),       paramcd = choices_selected(         choices = value_choices(adaette, \"PARAMCD\", \"PARAM\"),         selected = \"AETTE1\"       )     )   ) ) #> [INFO] 2022-10-12 02:08:59.0996 pid:1445 token:[] teal.modules.clinical Initializing tm_t_events_patyear if (FALSE) { shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_events_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Teal Module: Adverse Events Summary ‚Äî tm_t_events_summary","title":"Teal Module: Adverse Events Summary ‚Äî tm_t_events_summary","text":"Teal Module: Adverse Events Summary","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_events_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Teal Module: Adverse Events Summary ‚Äî tm_t_events_summary","text":"","code":"tm_t_events_summary(   label,   dataname,   parentname = ifelse(inherits(arm_var, \"data_extract_spec\"),     teal.transform::datanames_input(arm_var), \"ADSL\"),   arm_var,   flag_var_anl = NULL,   flag_var_aesi = NULL,   dthfl_var =     teal.transform::choices_selected(teal.transform::variable_choices(parentname,     \"DTHFL\"), \"DTHFL\", fixed = TRUE),   dcsreas_var =     teal.transform::choices_selected(teal.transform::variable_choices(parentname,     \"DCSREAS\"), \"DCSREAS\", fixed = TRUE),   llt = teal.transform::choices_selected(teal.transform::variable_choices(dataname,     \"AEDECOD\"), \"AEDECOD\", fixed = TRUE),   aeseq_var = teal.transform::choices_selected(teal.transform::variable_choices(dataname,     \"AESEQ\"), \"AESEQ\", fixed = TRUE),   add_total = TRUE,   count_subj = TRUE,   count_pt = TRUE,   count_events = TRUE,   pre_output = NULL,   post_output = NULL,   basic_table_args = teal.widgets::basic_table_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_events_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Teal Module: Adverse Events Summary ‚Äî tm_t_events_summary","text":"label (character) menu item label module teal app. dataname (character) analysis data used teal module. parentname (character) parent analysis data used teal module, usually refers ADSL. arm_var (choices_selected data_extract_spec) object available choices preselected option variable names can used arm_var. defines grouping variable(s) results table. two elements selected arm_var, second variable nested first variable. flag_var_anl (teal.transform::choices_selected() teal.transform::data_extract_spec()) vector names flag variables dataset used count adverse event sub-groups (e.g. Serious events, Related events, etc.). Variable labels used table row names exist. flag_var_aesi (teal.transform::choices_selected() teal.transform::data_extract_spec()) vector names flag variables dataset used count adverse event special interest groups. flag variables must type logical. Variable labels used table row names exist. dthfl_var (teal.transform::choices_selected() teal.transform::data_extract_spec()) variable subject death flag parentname. Records `\"Y\"`` summarized table row \"Total number deaths\". dcsreas_var (teal.transform::choices_selected() teal.transform::data_extract_spec()) variable study discontinuation reason parentname. Records \"ADVERSE EVENTS\" summarized table row \"Total number patients withdrawn study due AE\". llt (choices_selected data_extract_spec) name variable low level term events. aeseq_var (teal.transform::choices_selected() teal.transform::data_extract_spec()) variable adverse events sequence number dataset. Used counting total number events. add_total (logical) whether include column total number patients. count_subj (logical) w whether show count unique subjects based USUBJID. applies event flag variables provided. count_pt (logical) whether show count unique preferred terms based llt. applies event flag variables provided. count_events (logical) whether show count events based aeseq_var. applies event flag variables provided. pre_output optional, (shiny.tag) text placed output put output context. example title. post_output optional, (shiny.tag) text placed output put output context. example shiny::helpText() elements useful. basic_table_args optional, (basic_table_args) object created teal.widgets::basic_table_args() settings module table. argument merged option teal.basic_table_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-basic-table-arguments\", package = \"teal.widgets\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_events_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Teal Module: Adverse Events Summary ‚Äî tm_t_events_summary","text":"","code":"library(dplyr) library(scda)  ADSL <- synthetic_cdisc_data(\"latest\")$adsl %>%   mutate(     DTHFL = case_when( # nolint       !is.na(DTHDT) ~ \"Y\",       TRUE ~ \"\"     )   ) attr(ADSL[[\"DTHFL\"]], \"label\") <- \"Subject Death Flag\"  ADAE <- synthetic_cdisc_data(\"latest\")$adae  add_event_flags <- function(dat) {   dat <- dat %>%     dplyr::mutate(       TMPFL_SER = AESER == \"Y\",       TMPFL_REL = AEREL == \"Y\",       TMPFL_GR5 = AETOXGR == \"5\",       TMP_SMQ01 = !is.na(SMQ01NAM),       TMP_SMQ02 = !is.na(SMQ02NAM),       TMP_CQ01 = !is.na(CQ01NAM)     )   column_labels <- list(     TMPFL_SER = \"Serious AE\",     TMPFL_REL = \"Related AE\",     TMPFL_GR5 = \"Grade 5 AE\",     TMP_SMQ01 = aesi_label(dat[[\"SMQ01NAM\"]], dat[[\"SMQ01SC\"]]),     TMP_SMQ02 = aesi_label(\"Y.9.9.9.9/Z.9.9.9.9 AESI\"),     TMP_CQ01 = aesi_label(dat[[\"CQ01NAM\"]])   )   formatters::var_labels(dat)[names(column_labels)] <- as.character(column_labels)   dat }  # Generating user-defined event flags. ADAE <- ADAE %>% add_event_flags()  ae_anl_vars <- names(ADAE)[startsWith(names(ADAE), \"TMPFL_\")] aesi_vars <- names(ADAE)[startsWith(names(ADAE), \"TMP_\")]  app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", ADSL,       code =         'ADSL <- synthetic_cdisc_data(\"latest\")$adsl %>%             mutate(               DTHFL = case_when(  # nolint                 !is.na(DTHDT) ~ \"Y\",                 TRUE ~ \"\"               )             )         attr(ADSL[[\"DTHFL\"]], \"label\") <- \"Subject Death Flag\"         ADSL'     ),     cdisc_dataset(\"ADAE\", ADAE,       code =         \"ADAE <- synthetic_cdisc_data('latest')$adae         add_event_flags <- function(dat) {           dat <- dat %>%             dplyr::mutate(               TMPFL_SER = AESER == 'Y',               TMPFL_REL = AEREL == 'Y',               TMPFL_GR5 = AETOXGR == '5',               TMP_SMQ01 = !is.na(SMQ01NAM),               TMP_SMQ02 = !is.na(SMQ02NAM),               TMP_CQ01 = !is.na(CQ01NAM)             )           column_labels <- list(               TMPFL_SER = 'Serious AE',               TMPFL_REL = 'Related AE',               TMPFL_GR5 = 'Grade 5 AE',               TMP_SMQ01 = aesi_label(dat[['SMQ01NAM']], dat[['SMQ01SC']]),               TMP_SMQ02 = aesi_label('Y.9.9.9.9/Z.9.9.9.9 AESI'),               TMP_CQ01 = aesi_label(dat[['CQ01NAM']])           )           formatters::var_labels(dat)[names(column_labels)] <- as.character(column_labels)           dat         }         # Generating user-defined event flags.         ADAE <- ADAE %>% add_event_flags()\"     )   ),   modules = modules(     tm_t_events_summary(       label = \"Adverse Events Summary\",       dataname = \"ADAE\",       arm_var = choices_selected(         choices = variable_choices(\"ADSL\", c(\"ARM\", \"ARMCD\")),         selected = \"ARM\"       ),       flag_var_anl = choices_selected(         choices = variable_choices(\"ADAE\", ae_anl_vars),         selected = ae_anl_vars[1],         keep_order = TRUE,         fixed = FALSE       ),       flag_var_aesi = choices_selected(         choices = variable_choices(\"ADAE\", aesi_vars),         selected = aesi_vars[1],         keep_order = TRUE,         fixed = FALSE       ),       add_total = TRUE     )   ) ) #> [INFO] 2022-10-12 02:09:02.1023 pid:1445 token:[] teal.modules.clinical Initializing tm_t_events_summary if (FALSE) { shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_exposure.html","id":null,"dir":"Reference","previous_headings":"","what":"Teal module: Exposure Table for Risk management plan ‚Äî tm_t_exposure","title":"Teal module: Exposure Table for Risk management plan ‚Äî tm_t_exposure","text":"Teal module: Exposure Table Risk management plan","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_exposure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Teal module: Exposure Table for Risk management plan ‚Äî tm_t_exposure","text":"","code":"tm_t_exposure(   label,   dataname,   parentname = ifelse(inherits(col_by_var, \"data_extract_spec\"),     teal.transform::datanames_input(col_by_var), \"ADSL\"),   row_by_var,   col_by_var,   paramcd = teal.transform::choices_selected(choices =     teal.transform::value_choices(dataname, \"PARAMCD\", \"PARAM\"), selected = \"TDURD\"),   paramcd_label = \"PARAM\",   id_var = teal.transform::choices_selected(teal.transform::variable_choices(dataname,     subset = \"USUBJID\"), selected = \"USUBJID\", fixed = TRUE),   parcat,   aval_var = teal.transform::choices_selected(teal.transform::variable_choices(dataname,     subset = \"AVAL\"), selected = \"AVAL\", fixed = TRUE),   avalu_var = teal.transform::choices_selected(teal.transform::variable_choices(dataname,     subset = \"AVALU\"), selected = \"AVALU\", fixed = TRUE),   add_total,   na_level = \"<Missing>\",   pre_output = NULL,   post_output = NULL,   basic_table_args = teal.widgets::basic_table_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_exposure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Teal module: Exposure Table for Risk management plan ‚Äî tm_t_exposure","text":"label (character) menu item label module teal app. dataname (character) analysis data used teal module. parentname (character) parent analysis data used teal module, usually refers ADSL. row_by_var (teal.transform::choices_selected() teal.transform::data_extract_spec()) object available choices preselected option variable names can used split rows. col_by_var (teal.transform::choices_selected() teal.transform::data_extract_spec()) object available choices preselected option variable names can used split columns. paramcd (choices_selected data_extract_spec) variable value designating studied parameter. paramcd_label (character) column dataset value used label argument paramcd. id_var (choices_selected data_extract_spec) object specifying variable name subject id. parcat (teal.transform::choices_selected() teal.transform::data_extract_spec()) object available choices preselected option parameter category values. aval_var (choices_selected data_extract_spec) object available choices preselected option analysis variable. avalu_var (teal.transform::choices_selected() teal.transform::data_extract_spec()) object analysis unit variable. add_total (logical) whether include column total number patients. na_level (string) used replace NA empty values character factor variables data. pre_output optional, (shiny.tag) text placed output put output context. example title. post_output optional, (shiny.tag) text placed output put output context. example shiny::helpText() elements useful. basic_table_args optional, (basic_table_args) object created teal.widgets::basic_table_args() settings module table. argument merged option teal.basic_table_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-basic-table-arguments\", package = \"teal.widgets\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_exposure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Teal module: Exposure Table for Risk management plan ‚Äî tm_t_exposure","text":"","code":"library(scda) library(dplyr)  synthetic_cdisc_data_latest <- synthetic_cdisc_data(\"latest\") adsl <- synthetic_cdisc_data_latest$adsl adex <- synthetic_cdisc_data_latest$adex  set.seed(1, kind = \"Mersenne-Twister\") labels <- formatters::var_labels(adex, fill = FALSE) adex <- adex %>%   distinct(USUBJID, .keep_all = TRUE) %>%   mutate(     PARAMCD = \"TDURD\",     PARAM = \"Overall duration (days)\",     AVAL = sample(x = seq(1, 200), size = n(), replace = TRUE),     AVALU = \"Days\"   ) %>%   bind_rows(adex) formatters::var_labels(adex) <- labels  app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", adsl,       code = \"synthetic_cdisc_data_latest <- synthetic_cdisc_data('latest')       ADSL <- synthetic_cdisc_data_latest$adsl\"     ),     cdisc_dataset(\"ADEX\", adex,       code = \"set.seed(1, kind = 'Mersenne-Twister')       synthetic_cdisc_data_latest <- synthetic_cdisc_data('latest')       ADEX <- synthetic_cdisc_data_latest$adex       labels <- formatters::var_labels(ADEX, fill = FALSE)       ADEX <- ADEX %>%        distinct(USUBJID, .keep_all = TRUE) %>%        mutate(PARAMCD = 'TDURD',               PARAM = 'Overall duration (days)',               AVAL = sample(x = seq(1, 200), size = n(), replace = TRUE),               AVALU = 'Days') %>%               bind_rows(ADEX)       formatters::var_labels(ADEX) <- labels\" # nolint     )   ),   modules = modules(     tm_t_exposure(       label = \"Duration of Exposure Table\",       dataname = \"ADEX\",       paramcd = choices_selected(         choices = value_choices(adex, \"PARAMCD\", \"PARAM\"),         selected = \"TDURD\"       ),       col_by_var = choices_selected(         choices = variable_choices(adex, subset = c(\"SEX\", \"ARM\")),         selected = \"SEX\"       ),       row_by_var = choices_selected(         choices = variable_choices(adex, subset = c(\"RACE\", \"REGION1\", \"STRATA1\", \"SEX\")),         selected = \"RACE\"       ),       parcat = choices_selected(         choices = value_choices(adex, \"PARCAT2\"),         selected = \"Drug A\"       ),       add_total = FALSE     )   ),   filter = list(     ADSL = list(SAFFL = \"Y\")   ) ) #> [INFO] 2022-10-12 02:09:04.0202 pid:1445 token:[] teal.modules.clinical Initializing tm_t_exposure if (FALSE) { shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_logistic.html","id":null,"dir":"Reference","previous_headings":"","what":"Teal Module: Logistic Regression ‚Äî tm_t_logistic","title":"Teal Module: Logistic Regression ‚Äî tm_t_logistic","text":"module produces multi-variable logistic regression table matches STREAM template lgrt02.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_logistic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Teal Module: Logistic Regression ‚Äî tm_t_logistic","text":"","code":"tm_t_logistic(   label,   dataname,   parentname = ifelse(inherits(arm_var, \"data_extract_spec\"),     teal.transform::datanames_input(arm_var), \"ADSL\"),   arm_var = NULL,   arm_ref_comp = NULL,   paramcd,   cov_var = NULL,   avalc_var = teal.transform::choices_selected(teal.transform::variable_choices(dataname,     \"AVALC\"), \"AVALC\", fixed = TRUE),   conf_level = teal.transform::choices_selected(c(0.95, 0.9, 0.8), 0.95, keep_order =     TRUE),   pre_output = NULL,   post_output = NULL,   basic_table_args = teal.widgets::basic_table_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_logistic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Teal Module: Logistic Regression ‚Äî tm_t_logistic","text":"label (character) menu item label module teal app. dataname (character) analysis data used teal module. parentname (character) parent analysis data used teal module, usually refers ADSL. arm_var (teal.transform::choices_selected() teal.transform::data_extract_spec()) NULL object available choices preselected option variable names can used arm_var. defines grouping variable(s) results table. two elements selected arm_var, second variable nested first variable. arm_var optional, NULL, arm treatment variable included logistic model. arm_ref_comp optional, (list) specified must named list element corresponding arm variable ADSL element must another list (possibly delayed teal.transform::variable_choices() delayed teal.transform::value_choices() elements named ref comp defined default reference comparison arms arm variable changed. paramcd (choices_selected data_extract_spec) variable value designating studied parameter. cov_var (choices_selected data_extract_spec) object available choices preselected option covariates variables. avalc_var (teal.transform::choices_selected() teal.transform::data_extract_spec()) object available choices preselected option analysis variable (categorical). conf_level (choices_selected) object available choices preselected option confidence level, within range (0, 1). pre_output optional, (shiny.tag) text placed output put output context. example title. post_output optional, (shiny.tag) text placed output put output context. example shiny::helpText() elements useful. basic_table_args optional, (basic_table_args) object created teal.widgets::basic_table_args() settings module table. argument merged option teal.basic_table_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-basic-table-arguments\", package = \"teal.widgets\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_logistic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Teal Module: Logistic Regression ‚Äî tm_t_logistic","text":"","code":"library(scda) library(dplyr)  synthetic_cdisc_data_latest <- synthetic_cdisc_data(\"latest\") ADSL <- synthetic_cdisc_data_latest$adsl ADRS <- synthetic_cdisc_data_latest$adrs %>%   filter(PARAMCD %in% c(\"BESRSPI\", \"INVET\"))  arm_ref_comp <- list(   ACTARMCD = list(     ref = \"ARM B\",     comp = c(\"ARM A\", \"ARM C\")   ),   ARM = list(     ref = \"B: Placebo\",     comp = c(\"A: Drug X\", \"C: Combination\")   ) )  app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", ADSL,       code = \"synthetic_cdisc_data_latest <- synthetic_cdisc_data('latest')         ADSL <- synthetic_cdisc_data_latest$adsl\"     ),     cdisc_dataset(\"ADRS\", ADRS,       code = \"synthetic_cdisc_data_latest <- synthetic_cdisc_data('latest')         ADRS <- synthetic_cdisc_data_latest$adrs %>%         filter(PARAMCD %in% c('BESRSPI', 'INVET'))\"     )   ),   modules = modules(     tm_t_logistic(       label = \"Logistic Regression\",       dataname = \"ADRS\",       arm_var = choices_selected(         choices = variable_choices(ADRS, c(\"ARM\", \"ARMCD\")),         selected = \"ARM\"       ),       arm_ref_comp = arm_ref_comp,       paramcd = choices_selected(         choices = value_choices(ADRS, \"PARAMCD\", \"PARAM\"),         selected = \"BESRSPI\"       ),       cov_var = choices_selected(         choices = c(\"SEX\", \"AGE\", \"BMRKR1\", \"BMRKR2\"),         selected = \"SEX\"       )     )   ) ) #> [INFO] 2022-10-12 02:09:05.8242 pid:1445 token:[] teal.modules.clinical Initializing tm_t_logistic if (FALSE) { shinyApp(ui = app$ui, server = app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_mult_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Teal Module: Multiple Events by Term ‚Äî tm_t_mult_events","title":"Teal Module: Multiple Events by Term ‚Äî tm_t_mult_events","text":"Teal Module: Multiple Events Term","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_mult_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Teal Module: Multiple Events by Term ‚Äî tm_t_mult_events","text":"","code":"tm_t_mult_events(   label,   dataname,   parentname = ifelse(inherits(arm_var, \"data_extract_spec\"),     teal.transform::datanames_input(arm_var), \"ADSL\"),   arm_var,   seq_var,   hlt,   llt,   add_total = TRUE,   event_type = \"event\",   drop_arm_levels = TRUE,   pre_output = NULL,   post_output = NULL,   basic_table_args = teal.widgets::basic_table_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_mult_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Teal Module: Multiple Events by Term ‚Äî tm_t_mult_events","text":"label (character) menu item label module teal app. dataname (character) analysis data used teal module. parentname (character) parent analysis data used teal module, usually refers ADSL. arm_var (choices_selected data_extract_spec) object available choices preselected option variable names can used arm_var. defines grouping variable(s) results table. two elements selected arm_var, second variable nested first variable. seq_var (teal.transform::choices_selected() teal.transform::data_extract_spec()) Analysis Sequence Number. Used counting unique number events. hlt (choices_selected data_extract_spec) name variable high level term events. llt (choices_selected data_extract_spec) name variable low level term events. add_total (logical) whether include column total number patients. event_type (character) type event summarized (e.g. adverse event, treatment). Default \"event\". drop_arm_levels (logical) drop unused arm_var levels. TRUE, arm_var levels set used dataname dataset. FALSE, arm_var levels set used parantname dataset. pre_output optional, (shiny.tag) text placed output put output context. example title. post_output optional, (shiny.tag) text placed output put output context. example shiny::helpText() elements useful. basic_table_args optional, (basic_table_args) object created teal.widgets::basic_table_args() settings module table. argument merged option teal.basic_table_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-basic-table-arguments\", package = \"teal.widgets\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_mult_events.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Teal Module: Multiple Events by Term ‚Äî tm_t_mult_events","text":"","code":"library(dplyr) library(scda)  ADSL <- synthetic_cdisc_data(\"latest\")$adsl ADCM <- synthetic_cdisc_data(\"latest\")$adcm adcm_keys <- c(\"STUDYID\", \"USUBJID\", \"ASTDTM\", \"CMSEQ\", \"ATC1\", \"ATC2\", \"ATC3\", \"ATC4\")  app <- teal::init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", ADSL, code = 'ADSL <- synthetic_cdisc_data(\"latest\")$adsl'),     cdisc_dataset(\"ADCM\", ADCM,       code = 'ADCM <- synthetic_cdisc_data(\"latest\")$adcm',       keys = adcm_keys     )   ),   modules = modules(     tm_t_mult_events(       label = \"Concomitant Medications by Medication Class and Preferred Name\",       dataname = \"ADCM\",       arm_var = choices_selected(c(\"ARM\", \"ARMCD\"), \"ARM\"),       seq_var = choices_selected(\"ASEQ\", selected = \"ASEQ\", fixed = TRUE),       hlt = choices_selected(         choices = variable_choices(ADCM, c(\"ATC1\", \"ATC2\", \"ATC3\", \"ATC4\")),         selected = c(\"ATC1\", \"ATC2\", \"ATC3\", \"ATC4\")       ),       llt = choices_selected(         choices = variable_choices(ADCM, c(\"CMDECOD\")),         selected = c(\"CMDECOD\")       ),       add_total = TRUE,       event_type = \"treatment\"     )   ) ) #> [INFO] 2022-10-12 02:09:08.8821 pid:1445 token:[] teal.modules.clinical Initializing tm_t_mult_events if (FALSE) { shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_pp_basic_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Teal Module: Patient Profile Basic Info Teal Module ‚Äî tm_t_pp_basic_info","title":"Teal Module: Patient Profile Basic Info Teal Module ‚Äî tm_t_pp_basic_info","text":"teal module produces patient profile basic info report using ADaM datasets.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_pp_basic_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Teal Module: Patient Profile Basic Info Teal Module ‚Äî tm_t_pp_basic_info","text":"","code":"tm_t_pp_basic_info(   label,   dataname = \"ADSL\",   patient_col = \"USUBJID\",   vars = NULL,   pre_output = NULL,   post_output = NULL )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_pp_basic_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Teal Module: Patient Profile Basic Info Teal Module ‚Äî tm_t_pp_basic_info","text":"label (character) menu item label module teal app. dataname (character) analysis data used teal module. patient_col (character) patient ID column used. vars (teal.transform::choices_selected() teal.transform::data_extract_spec()) ADSL columns shown Basic Info tab. pre_output optional, (shiny.tag) text placed output put output context. example title. post_output optional, (shiny.tag) text placed output put output context. example shiny::helpText() elements useful.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_pp_basic_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Teal Module: Patient Profile Basic Info Teal Module ‚Äî tm_t_pp_basic_info","text":"","code":"library(scda) ADSL <- synthetic_cdisc_data(\"latest\")$adsl  app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", ADSL, code = 'ADSL <- synthetic_cdisc_data(\"latest\")$adsl'),     check = TRUE   ),   modules = modules(     tm_t_pp_basic_info(       label = \"Basic info\",       dataname = \"ADSL\",       patient_col = \"USUBJID\",       vars = choices_selected(         choices = variable_choices(ADSL),         selected = c(\"ARM\", \"AGE\", \"SEX\", \"COUNTRY\", \"RACE\", \"EOSSTT\")       )     )   ) ) #> [INFO] 2022-10-12 02:09:11.9122 pid:1445 token:[] teal.modules.clinical Initializing tm_t_pp_basic_info if (FALSE) { shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_pp_laboratory.html","id":null,"dir":"Reference","previous_headings":"","what":"Teal Module: Patient Profile Laboratory Teal Module ‚Äî tm_t_pp_laboratory","title":"Teal Module: Patient Profile Laboratory Teal Module ‚Äî tm_t_pp_laboratory","text":"teal module produces patient profile laboratory table using ADaM datasets.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_pp_laboratory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Teal Module: Patient Profile Laboratory Teal Module ‚Äî tm_t_pp_laboratory","text":"","code":"tm_t_pp_laboratory(   label,   dataname = \"ADLB\",   parentname = \"ADSL\",   patient_col = \"USUBJID\",   timepoints = NULL,   aval = NULL,   avalu = NULL,   param = NULL,   paramcd = NULL,   anrind = NULL,   pre_output = NULL,   post_output = NULL )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_pp_laboratory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Teal Module: Patient Profile Laboratory Teal Module ‚Äî tm_t_pp_laboratory","text":"label (character) menu item label module teal app. dataname (character) analysis data used teal module. parentname (character) parent analysis data used teal module, usually refers ADSL. patient_col (character) patient ID column used. timepoints (teal.transform::choices_selected() teal.transform::data_extract_spec()) Time variable represented laboratory table. aval (teal.transform::choices_selected() teal.transform::data_extract_spec())AVAL column ADLB dataset. avalu (teal.transform::choices_selected() teal.transform::data_extract_spec())AVALU column ADLB dataset. param (teal.transform::choices_selected() teal.transform::data_extract_spec())PARAM column ADLB dataset. paramcd (teal.transform::choices_selected() teal.transform::data_extract_spec())PARAMCD column ADLB dataset. anrind (teal.transform::choices_selected() teal.transform::data_extract_spec())ANRIND column ADLB dataset 3 possible levels \"HIGH\", \"LOW\" \"NORMAL\". pre_output optional, (shiny.tag) text placed output put output context. example title. post_output optional, (shiny.tag) text placed output put output context. example shiny::helpText() elements useful.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_pp_laboratory.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Teal Module: Patient Profile Laboratory Teal Module ‚Äî tm_t_pp_laboratory","text":"","code":"library(scda) synthetic_cdisc_data_latest <- synthetic_cdisc_data(\"latest\") ADSL <- synthetic_cdisc_data_latest$adsl ADLB <- synthetic_cdisc_data_latest$adlb  app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", ADSL,       code = \"synthetic_cdisc_data_latest <- synthetic_cdisc_data('latest')         ADSL <- synthetic_cdisc_data_latest$adsl\"     ),     cdisc_dataset(\"ADLB\", ADLB,       code = \"synthetic_cdisc_data_latest <- synthetic_cdisc_data('latest')         ADLB <- synthetic_cdisc_data_latest$adlb\"     )   ),   modules = modules(     tm_t_pp_laboratory(       label = \"Vitals\",       dataname = \"ADLB\",       patient_col = \"USUBJID\",       paramcd = choices_selected(         choices = variable_choices(ADLB, \"PARAMCD\"),         selected = \"PARAMCD\"       ),       param = choices_selected(         choices = variable_choices(ADLB, \"PARAM\"),         selected = \"PARAM\"       ),       timepoints = choices_selected(         choices = variable_choices(ADLB, \"ADY\"),         selected = \"ADY\"       ),       anrind = choices_selected(         choices = variable_choices(ADLB, \"ANRIND\"),         selected = \"ANRIND\"       ),       aval = choices_selected(         choices = variable_choices(ADLB, \"AVAL\"),         selected = \"AVAL\"       ),       avalu = choices_selected(         choices = variable_choices(ADLB, \"AVALU\"),         selected = \"AVALU\"       )     )   ) ) #> [INFO] 2022-10-12 02:09:13.4911 pid:1445 token:[] teal.modules.clinical Initializing tm_t_pp_laboratory if (FALSE) { shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_pp_medical_history.html","id":null,"dir":"Reference","previous_headings":"","what":"Teal Module: Patient Medical History Teal Module ‚Äî tm_t_pp_medical_history","title":"Teal Module: Patient Medical History Teal Module ‚Äî tm_t_pp_medical_history","text":"teal module produces patient medical history report using ADaM datasets.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_pp_medical_history.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Teal Module: Patient Medical History Teal Module ‚Äî tm_t_pp_medical_history","text":"","code":"tm_t_pp_medical_history(   label,   dataname = \"ADMH\",   parentname = \"ADSL\",   patient_col = \"USUBJID\",   mhterm = NULL,   mhbodsys = NULL,   mhdistat = NULL,   pre_output = NULL,   post_output = NULL )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_pp_medical_history.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Teal Module: Patient Medical History Teal Module ‚Äî tm_t_pp_medical_history","text":"label (character) menu item label module teal app. dataname (character) analysis data used teal module. parentname (character) parent analysis data used teal module, usually refers ADSL. patient_col (character) patient ID column used. mhterm (teal.transform::choices_selected() teal.transform::data_extract_spec())MHTERM column ADMH dataset. mhbodsys (teal.transform::choices_selected() teal.transform::data_extract_spec())MHBODSYS column ADMH dataset. mhdistat (teal.transform::choices_selected() teal.transform::data_extract_spec())MHDISTAT column ADMH dataset. pre_output optional, (shiny.tag) text placed output put output context. example title. post_output optional, (shiny.tag) text placed output put output context. example shiny::helpText() elements useful.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_pp_medical_history.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Teal Module: Patient Medical History Teal Module ‚Äî tm_t_pp_medical_history","text":"","code":"library(scda)  synthetic_cdisc_data_latest <- synthetic_cdisc_data(\"latest\") ADSL <- synthetic_cdisc_data_latest$adsl ADMH <- synthetic_cdisc_data_latest$admh ADMH[[\"MHDISTAT\"]] <- \"ONGOING\" formatters::var_labels(ADMH[c(\"MHDISTAT\")]) <- c(\"Status of Disease\")  app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", ADSL,       code = \"synthetic_cdisc_data_latest <- synthetic_cdisc_data('latest')         ADSL <- synthetic_cdisc_data_latest$adsl\"     ),     cdisc_dataset(\"ADMH\", ADMH,       code = \"synthetic_cdisc_data_latest <- synthetic_cdisc_data('latest')         ADMH <- synthetic_cdisc_data_latest$admh         ADMH[['MHDISTAT']] <- 'ONGOING'         formatters::var_labels(ADMH[c('MHDISTAT')]) <- c('Status of Disease')\"     )   ),   modules = modules(     tm_t_pp_medical_history(       label = \"Medical history\",       dataname = \"ADMH\",       parentname = \"ADSL\",       patient_col = \"USUBJID\",       mhterm = choices_selected(         choices = variable_choices(ADMH, c(\"MHTERM\")),         selected = \"MHTERM\"       ),       mhbodsys = choices_selected(         choices = variable_choices(ADMH, \"MHBODSYS\"),         selected = \"MHBODSYS\"       ),       mhdistat = choices_selected(         choices = variable_choices(ADMH, \"MHDISTAT\"),         selected = \"MHDISTAT\"       )     )   ) ) #> [INFO] 2022-10-12 02:09:15.1143 pid:1445 token:[] teal.modules.clinical Initializing tm_t_pp_medical_history if (FALSE) { shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_pp_prior_medication.html","id":null,"dir":"Reference","previous_headings":"","what":"Teal Module: Patient Prior Medication Teal Module ‚Äî tm_t_pp_prior_medication","title":"Teal Module: Patient Prior Medication Teal Module ‚Äî tm_t_pp_prior_medication","text":"teal module produces patient prior medication report using ADaM datasets.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_pp_prior_medication.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Teal Module: Patient Prior Medication Teal Module ‚Äî tm_t_pp_prior_medication","text":"","code":"tm_t_pp_prior_medication(   label,   dataname = \"ADCM\",   parentname = \"ADSL\",   patient_col = \"USUBJID\",   atirel = NULL,   cmdecod = NULL,   cmindc = NULL,   cmstdy = NULL,   pre_output = NULL,   post_output = NULL )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_pp_prior_medication.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Teal Module: Patient Prior Medication Teal Module ‚Äî tm_t_pp_prior_medication","text":"label (character) menu item label module teal app. dataname (character) analysis data used teal module. parentname (character) parent analysis data used teal module, usually refers ADSL. patient_col (character) patient ID column used. atirel (teal.transform::choices_selected() teal.transform::data_extract_spec())ATIREL column ADCM dataset. cmdecod (teal.transform::choices_selected() teal.transform::data_extract_spec())CMDECOD column ADCM dataset. cmindc (teal.transform::choices_selected() teal.transform::data_extract_spec())CMINDC column ADCM dataset. cmstdy (teal.transform::choices_selected() teal.transform::data_extract_spec())CMSTDY column ADCM dataset. pre_output optional, (shiny.tag) text placed output put output context. example title. post_output optional, (shiny.tag) text placed output put output context. example shiny::helpText() elements useful.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_pp_prior_medication.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Teal Module: Patient Prior Medication Teal Module ‚Äî tm_t_pp_prior_medication","text":"","code":"library(scda) synthetic_cdisc_data_latest <- synthetic_cdisc_data(\"latest\") ADSL <- synthetic_cdisc_data_latest$adsl ADCM <- synthetic_cdisc_data_latest$adcm  #' Modify ADCM ADCM$CMINDC <- paste0(\"Indication_\", as.numeric(ADCM$CMDECOD)) ADCM$CMDOSE <- 1 ADCM$CMTRT <- ADCM$CMCAT ADCM$CMDOSU <- \"U\" ADCM$CMROUTE <- \"CMROUTE\" ADCM$CMDOSFRQ <- \"CMDOSFRQ\" ADCM$CMASTDTM <- ADCM$ASTDTM ADCM$CMAENDTM <- ADCM$AENDTM formatters::var_labels(   ADCM[c(\"CMINDC\", \"CMTRT\", \"ASTDY\")] ) <- c(   \"Indication\",   \"Reported Name of Drug, Med, or Therapy\",   \"Study Day of Start of Medication\" ) adcm_keys <- c(\"STUDYID\", \"USUBJID\", \"ASTDTM\", \"CMSEQ\", \"ATC1\", \"ATC2\", \"ATC3\", \"ATC4\")  app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", ADSL,       code = \"synthetic_cdisc_data_latest <- synthetic_cdisc_data('latest')         ADSL <- synthetic_cdisc_data_latest$adsl\"     ),     cdisc_dataset(\"ADCM\", ADCM,       code = \"synthetic_cdisc_data_latest <- synthetic_cdisc_data('latest')         ADCM <- synthetic_cdisc_data_latest$adcm         ADCM$CMINDC <- paste0('Indication_', as.numeric(ADCM$CMDECOD))         ADCM$CMDOSE <- 1         ADCM$CMTRT <- ADCM$CMCAT         ADCM$CMDOSU <- 'U'         ADCM$CMROUTE <- 'CMROUTE'         ADCM$CMDOSFRQ <- 'CMDOSFRQ'         ADCM$CMASTDTM <- ADCM$ASTDTM         ADCM$CMAENDTM <- ADCM$AENDTM         formatters::var_labels(           ADCM[c('CMINDC', 'CMTRT', 'ASTDY')]) <- c(             'Indication',             'Reported Name of Drug, Med, or Therapy',             'Study Day of Start of Medication'            )\",       keys = adcm_keys     )   ),   modules = modules(     tm_t_pp_prior_medication(       label = \"Prior medication\",       dataname = \"ADCM\",       parentname = \"ADSL\",       patient_col = \"USUBJID\",       atirel = choices_selected(         choices = variable_choices(ADCM, \"ATIREL\"),         selected = \"ATIREL\"       ),       cmdecod = choices_selected(         choices = variable_choices(ADCM, \"CMDECOD\"),         selected = \"CMDECOD\"       ),       cmindc = choices_selected(         choices = variable_choices(ADCM, \"CMINDC\"),         selected = \"CMINDC\"       ),       cmstdy = choices_selected(         choices = variable_choices(ADCM, \"ASTDY\"),         selected = \"ASTDY\"       )     )   ) ) #> [INFO] 2022-10-12 02:09:16.7863 pid:1445 token:[] teal.modules.clinical Initializing tm_t_pp_prior_medication if (FALSE) { shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_shift_by_arm.html","id":null,"dir":"Reference","previous_headings":"","what":"Teal Module: Shift by Arm ‚Äî tm_t_shift_by_arm","title":"Teal Module: Shift by Arm ‚Äî tm_t_shift_by_arm","text":"Teal Module: Shift Arm","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_shift_by_arm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Teal Module: Shift by Arm ‚Äî tm_t_shift_by_arm","text":"","code":"tm_t_shift_by_arm(   label,   dataname,   parentname = ifelse(inherits(arm_var, \"data_extract_spec\"),     teal.transform::datanames_input(arm_var), \"ADSL\"),   arm_var,   paramcd,   visit_var,   aval_var,   base_var,   treatment_flag_var =     teal.transform::choices_selected(teal.transform::variable_choices(dataname, subset =     \"ONTRTFL\"), selected = \"ONTRTFL\", fixed = TRUE),   treatment_flag =     teal.transform::choices_selected(teal.transform::value_choices(dataname, \"ONTRTFL\"),     selected = \"Y\", fixed = TRUE),   useNA = c(\"ifany\", \"no\"),   na_level = \"<Missing>\",   add_total = FALSE,   pre_output = NULL,   post_output = NULL,   basic_table_args = teal.widgets::basic_table_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_shift_by_arm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Teal Module: Shift by Arm ‚Äî tm_t_shift_by_arm","text":"label (character) menu item label module teal app. dataname (character) analysis data used teal module. parentname (character) parent analysis data used teal module, usually refers ADSL. arm_var (choices_selected data_extract_spec) object available choices preselected option variable names can used arm_var. defines grouping variable(s) results table. two elements selected arm_var, second variable nested first variable. paramcd (choices_selected data_extract_spec) variable value designating studied parameter. visit_var (choices_selected data_extract_spec) object available choices preselected option variable names can used visit variable. Must factor dataname. aval_var (choices_selected data_extract_spec) object available choices preselected option analysis variable. base_var (character) variable name baseline reference range indicator. treatment_flag_var (choices_selected data_extract_spec) treatment flag variable. treatment_flag (choices_selected] data_extract_spec) value indicating treatment records treatment_flag_var. useNA (character) whether missing data (NA) displayed level. na_level (string) used replace NA empty values character factor variables data. add_total (logical) whether include row total number patients. pre_output optional, (shiny.tag) text placed output put output context. example title. post_output optional, (shiny.tag) text placed output put output context. example shiny::helpText() elements useful. basic_table_args optional, (basic_table_args) object created teal.widgets::basic_table_args() settings module table. argument merged option teal.basic_table_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-basic-table-arguments\", package = \"teal.widgets\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_shift_by_arm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Teal Module: Shift by Arm ‚Äî tm_t_shift_by_arm","text":"","code":"library(dplyr) library(tern) library(scda) synthetic_cdisc_data_latest <- synthetic_cdisc_data(\"latest\") adsl <- synthetic_cdisc_data_latest$adsl adeg <- synthetic_cdisc_data_latest$adeg  app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", adsl,       code = \"synthetic_cdisc_data_latest <- synthetic_cdisc_data('latest')         ADSL <- synthetic_cdisc_data_latest$adsl\"     ),     cdisc_dataset(\"ADEG\", adeg,       code = \"synthetic_cdisc_data_latest <- synthetic_cdisc_data('latest')         ADEG <- synthetic_cdisc_data_latest$adeg\"     )   ),   modules = modules(     tm_t_shift_by_arm(       label = \"Shift by Arm Table\",       dataname = \"ADEG\",       arm_var = choices_selected(         variable_choices(adsl, subset = c(\"ARM\", \"ARMCD\")),         selected = \"ARM\"       ),       paramcd = choices_selected(         value_choices(adeg, \"PARAMCD\"),         selected = \"HR\"       ),       visit_var = choices_selected(         value_choices(adeg, \"AVISIT\"),         selected = \"POST-BASELINE MINIMUM\"       ),       aval_var = choices_selected(         variable_choices(adeg, subset = \"ANRIND\"),         selected = \"ANRIND\", fixed = TRUE       ),       base_var = choices_selected(         variable_choices(adeg, subset = \"BNRIND\"),         selected = \"BNRIND\", fixed = TRUE       ),       useNA = \"ifany\"     )   ) ) #> [INFO] 2022-10-12 02:09:18.5234 pid:1445 token:[] teal.modules.clinical Initializing tm_t_shift_by_arm if (FALSE) { shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_shift_by_arm_by_worst.html","id":null,"dir":"Reference","previous_headings":"","what":"Teal Module: Shift by Arm by Worst ‚Äî tm_t_shift_by_arm_by_worst","title":"Teal Module: Shift by Arm by Worst ‚Äî tm_t_shift_by_arm_by_worst","text":"Teal Module: Shift Arm Worst","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_shift_by_arm_by_worst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Teal Module: Shift by Arm by Worst ‚Äî tm_t_shift_by_arm_by_worst","text":"","code":"tm_t_shift_by_arm_by_worst(   label,   dataname,   parentname = ifelse(inherits(arm_var, \"data_extract_spec\"),     teal.transform::datanames_input(arm_var), \"ADSL\"),   arm_var,   paramcd,   aval_var,   base_var,   worst_flag_var,   worst_flag,   treatment_flag_var =     teal.transform::choices_selected(teal.transform::variable_choices(dataname, subset =     \"ONTRTFL\"), selected = \"ONTRTFL\", fixed = TRUE),   treatment_flag =     teal.transform::choices_selected(teal.transform::value_choices(dataname, \"ONTRTFL\"),     selected = \"Y\", fixed = TRUE),   useNA = c(\"ifany\", \"no\"),   na_level = \"<Missing>\",   add_total = FALSE,   pre_output = NULL,   post_output = NULL,   basic_table_args = teal.widgets::basic_table_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_shift_by_arm_by_worst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Teal Module: Shift by Arm by Worst ‚Äî tm_t_shift_by_arm_by_worst","text":"label (character) menu item label module teal app. dataname (character) analysis data used teal module. parentname (character) parent analysis data used teal module, usually refers ADSL. arm_var (choices_selected data_extract_spec) object available choices preselected option variable names can used arm_var. defines grouping variable(s) results table. two elements selected arm_var, second variable nested first variable. paramcd (choices_selected data_extract_spec) variable value designating studied parameter. aval_var (choices_selected data_extract_spec) object available choices preselected option analysis variable. base_var (character) variable name baseline reference range indicator. worst_flag_var (character) Worst flag variable. worst_flag (character) Worst flag value. treatment_flag_var (choices_selected data_extract_spec) treatment flag variable. treatment_flag (choices_selected] data_extract_spec) value indicating treatment records treatment_flag_var. useNA (character) whether missing data (NA) displayed level. na_level (string) used replace NA empty values character factor variables data. add_total (logical) whether include row total number patients. pre_output optional, (shiny.tag) text placed output put output context. example title. post_output optional, (shiny.tag) text placed output put output context. example shiny::helpText() elements useful. basic_table_args optional, (basic_table_args) object created teal.widgets::basic_table_args() settings module table. argument merged option teal.basic_table_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-basic-table-arguments\", package = \"teal.widgets\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_shift_by_arm_by_worst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Teal Module: Shift by Arm by Worst ‚Äî tm_t_shift_by_arm_by_worst","text":"","code":"library(dplyr) library(tern) library(scda)  synthetic_cdisc_data_latest <- synthetic_cdisc_data(\"latest\") adsl <- synthetic_cdisc_data_latest$adsl adeg <- synthetic_cdisc_data_latest$adeg  app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", adsl,       code = \"synthetic_cdisc_data_latest <- synthetic_cdisc_data('latest')         ADSL <- synthetic_cdisc_data_latest$adsl\"     ),     cdisc_dataset(\"ADEG\", adeg,       code = \"synthetic_cdisc_data_latest <- synthetic_cdisc_data('latest')         ADEG <- synthetic_cdisc_data_latest$adeg\"     )   ),   modules = modules(     tm_t_shift_by_arm_by_worst(       label = \"Shift by Arm Table\",       dataname = \"ADEG\",       arm_var = choices_selected(         variable_choices(adsl, subset = c(\"ARM\", \"ARMCD\")),         selected = \"ARM\"       ),       paramcd = choices_selected(         value_choices(adeg, \"PARAMCD\"),         selected = \"ECGINTP\"       ),       worst_flag_var = choices_selected(         variable_choices(adeg, c(\"WORS02FL\", \"WORS01FL\")),         selected = \"WORS02FL\"       ),       worst_flag = choices_selected(         value_choices(adeg, \"WORS02FL\"),         selected = \"Y\", fixed = TRUE       ),       aval_var = choices_selected(         variable_choices(adeg, c(\"AVALC\", \"ANRIND\")),         selected = \"AVALC\"       ),       base_var = choices_selected(         variable_choices(adeg, c(\"BASEC\", \"BNRIND\")),         selected = \"BASEC\"       ),       useNA = \"ifany\"     )   ) ) #> [INFO] 2022-10-12 02:09:20.4248 pid:1445 token:[] teal.modules.clinical Initializing tm_t_shift_by_arm_by_worst if (FALSE) { shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_shift_by_grade.html","id":null,"dir":"Reference","previous_headings":"","what":"Teal Module: Grade Summary Table ‚Äî tm_t_shift_by_grade","title":"Teal Module: Grade Summary Table ‚Äî tm_t_shift_by_grade","text":"Teal Module: Grade Summary Table","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_shift_by_grade.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Teal Module: Grade Summary Table ‚Äî tm_t_shift_by_grade","text":"","code":"tm_t_shift_by_grade(   label,   dataname,   parentname = ifelse(inherits(arm_var, \"data_extract_spec\"),     teal.transform::datanames_input(arm_var), \"ADSL\"),   arm_var,   visit_var = teal.transform::choices_selected(teal.transform::variable_choices(dataname,     subset = \"AVISIT\"), selected = \"AVISIT\", fixed = TRUE),   paramcd,   worst_flag_var =     teal.transform::choices_selected(teal.transform::variable_choices(dataname, subset =     c(\"WGRLOVFL\", \"WGRLOFL\", \"WGRHIVFL\", \"WGRHIFL\")), selected = \"WGRLOVFL\"),   worst_flag_indicator =     teal.transform::choices_selected(teal.transform::value_choices(dataname, \"WGRLOVFL\"),     selected = \"Y\", fixed = TRUE),   anl_toxgrade_var =     teal.transform::choices_selected(teal.transform::variable_choices(dataname, subset =     c(\"ATOXGR\")), selected = c(\"ATOXGR\"), fixed = TRUE),   base_toxgrade_var =     teal.transform::choices_selected(teal.transform::variable_choices(dataname, subset =     c(\"BTOXGR\")), selected = c(\"BTOXGR\"), fixed = TRUE),   id_var = teal.transform::choices_selected(teal.transform::variable_choices(dataname,     subset = \"USUBJID\"), selected = \"USUBJID\", fixed = TRUE),   add_total = FALSE,   drop_arm_levels = TRUE,   pre_output = NULL,   post_output = NULL,   na_level = \"<Missing>\",   code_missing_baseline = FALSE,   basic_table_args = teal.widgets::basic_table_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_shift_by_grade.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Teal Module: Grade Summary Table ‚Äî tm_t_shift_by_grade","text":"label (character) menu item label module teal app. dataname (character) analysis data used teal module. parentname (character) parent analysis data used teal module, usually refers ADSL. arm_var (choices_selected data_extract_spec) object available choices preselected option variable names can used arm_var. defines grouping variable(s) results table. two elements selected arm_var, second variable nested first variable. visit_var (teal.transform::choices_selected() teal.transform::data_extract_spec()) object available choices preselected option variable names can used visit. paramcd (choices_selected data_extract_spec) variable value designating studied parameter. worst_flag_var (teal.transform::choices_selected() teal.transform::data_extract_spec()) object available choices preselected option variable names can used worst flag variable. worst_flag_indicator (teal.transform::choices_selected() teal.transform::data_extract_spec()) value indicating worst grade. anl_toxgrade_var (teal.transform::choices_selected() teal.transform::data_extract_spec()) variable analysis toxicity grade. base_toxgrade_var (teal.transform::choices_selected() teal.transform::data_extract_spec()) variable baseline toxicity grade. id_var (choices_selected data_extract_spec) object specifying variable name subject id. add_total (logical) whether include column total number patients. drop_arm_levels (logical) drop unused arm_var levels. TRUE, arm_var levels set used dataname dataset. FALSE, arm_var levels set used parantname dataset. pre_output optional, (shiny.tag) text placed output put output context. example title. post_output optional, (shiny.tag) text placed output put output context. example shiny::helpText() elements useful. na_level (string) used replace NA empty values character factor variables data. code_missing_baseline (character) whether missing baseline considered grade 0. basic_table_args optional, (basic_table_args) object created teal.widgets::basic_table_args() settings module table. argument merged option teal.basic_table_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-basic-table-arguments\", package = \"teal.widgets\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_shift_by_grade.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Teal Module: Grade Summary Table ‚Äî tm_t_shift_by_grade","text":"","code":"library(scda) library(dplyr)  synthetic_cdisc_data_latest <- synthetic_cdisc_data(\"latest\") adsl <- synthetic_cdisc_data_latest$adsl adlb <- synthetic_cdisc_data_latest$adlb  app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", adsl,       code = \"synthetic_cdisc_data_latest <- synthetic_cdisc_data('latest')         ADSL <- synthetic_cdisc_data_latest$adsl\"     ),     cdisc_dataset(\"ADLB\", adlb,       code = \"synthetic_cdisc_data_latest <- synthetic_cdisc_data('latest')         ADLB <- synthetic_cdisc_data_latest$adlb\"     )   ),   modules = modules(     tm_t_shift_by_grade(       label = \"Grade Laboratory Abnormality Table\",       dataname = \"ADLB\",       arm_var = choices_selected(         choices = variable_choices(adsl, subset = c(\"ARM\", \"ARMCD\")),         selected = \"ARM\"       ),       paramcd = choices_selected(         choices = value_choices(adlb, \"PARAMCD\", \"PARAM\"),         selected = \"ALT\"       ),       worst_flag_var = choices_selected(         choices = variable_choices(adlb, subset = c(\"WGRLOVFL\", \"WGRLOFL\", \"WGRHIVFL\", \"WGRHIFL\")),         selected = c(\"WGRLOVFL\")       ),       worst_flag_indicator = choices_selected(         value_choices(adlb, \"WGRLOVFL\"),         selected = \"Y\", fixed = TRUE       ),       anl_toxgrade_var = choices_selected(         choices = variable_choices(adlb, subset = c(\"ATOXGR\")),         selected = c(\"ATOXGR\"),         fixed = TRUE       ),       base_toxgrade_var = choices_selected(         choices = variable_choices(adlb, subset = c(\"BTOXGR\")),         selected = c(\"BTOXGR\"),         fixed = TRUE       ),       add_total = FALSE     )   ),   filter = list(     ADSL = list(SAFFL = \"Y\")   ) ) #> [INFO] 2022-10-12 02:09:22.3447 pid:1445 token:[] teal.modules.clinical Initializing tm_t_shift_by_grade if (FALSE) { shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_smq.html","id":null,"dir":"Reference","previous_headings":"","what":"Teal Module: SMQ Table ‚Äî tm_t_smq","title":"Teal Module: SMQ Table ‚Äî tm_t_smq","text":"Adverse Events Table Standardized MedDRA Query.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_smq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Teal Module: SMQ Table ‚Äî tm_t_smq","text":"","code":"tm_t_smq(   label,   dataname,   parentname = ifelse(inherits(arm_var, \"data_extract_spec\"),     teal.transform::datanames_input(arm_var), \"ADSL\"),   arm_var,   id_var = teal.transform::choices_selected(teal.transform::variable_choices(dataname,     subset = \"USUBJID\"), selected = \"USUBJID\", fixed = TRUE),   llt,   add_total = TRUE,   sort_criteria = c(\"freq_desc\", \"alpha\"),   drop_arm_levels = TRUE,   na_level = \"<Missing>\",   smq_varlabel = \"Standardized MedDRA Query\",   baskets,   scopes,   pre_output = NULL,   post_output = NULL,   basic_table_args = teal.widgets::basic_table_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_smq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Teal Module: SMQ Table ‚Äî tm_t_smq","text":"label (character) menu item label module teal app. dataname (character) analysis data used teal module. parentname (character) parent analysis data used teal module, usually refers ADSL. arm_var (choices_selected data_extract_spec) object available choices preselected option variable names can used arm_var. defines grouping variable(s) results table. two elements selected arm_var, second variable nested first variable. id_var (choices_selected data_extract_spec) object specifying variable name subject id. llt (choices_selected data_extract_spec) name variable low level term events. add_total (logical) whether include column total number patients. sort_criteria (character) sort final table. Default option freq_desc sorts decreasing total number patients event. Alternative option alpha sorts events alphabetically. drop_arm_levels (logical) drop unused arm_var levels. TRUE, arm_var levels set used dataname dataset. FALSE, arm_var levels set used parantname dataset. na_level (string) used replace NA empty values character factor variables data. smq_varlabel (character) label new column SMQ created tern::h_stack_by_baskets(). baskets (teal.transform::choices_selected() teal.transform::data_extract_spec()) object available choices preselected options Standardized/Customized queries scopes (teal.transform::choices_selected() teal.transform::data_extract_spec()) object available choices scopes Standardized queries. pre_output optional, (shiny.tag) text placed output put output context. example title. post_output optional, (shiny.tag) text placed output put output context. example shiny::helpText() elements useful. basic_table_args optional, (basic_table_args) object created teal.widgets::basic_table_args() settings module table. argument merged option teal.basic_table_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-basic-table-arguments\", package = \"teal.widgets\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_smq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Teal Module: SMQ Table ‚Äî tm_t_smq","text":"","code":"library(scda)  synthetic_cdisc_data_latest <- synthetic_cdisc_data(\"latest\") adsl <- synthetic_cdisc_data_latest$adsl adae <- synthetic_cdisc_data_latest$adae  names_baskets <- grep(\"^(SMQ|CQ).*NAM$\", names(adae), value = TRUE) names_scopes <- grep(\"^SMQ.*SC$\", names(adae), value = TRUE)  cs_baskets <- choices_selected(   choices = variable_choices(adae, subset = names_baskets),   selected = names_baskets )  cs_scopes <- choices_selected(   choices = variable_choices(adae, subset = names_scopes),   selected = names_scopes,   fixed = TRUE )  app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", adsl,       code = \"synthetic_cdisc_data_latest <- synthetic_cdisc_data('latest')         ADSL <- synthetic_cdisc_data_latest$adsl\"     ),     cdisc_dataset(\"ADAE\", adae,       code = \"synthetic_cdisc_data_latest <- synthetic_cdisc_data('latest')         ADAE <- synthetic_cdisc_data_latest$adae\"     )   ),   modules = modules(     tm_t_smq(       label = \"Adverse events by `SMQ` Table\",       dataname = \"ADAE\",       arm_var = choices_selected(         choices = variable_choices(adsl, subset = c(\"ARM\", \"SEX\")),         selected = \"ARM\"       ),       add_total = FALSE,       baskets = cs_baskets,       scopes = cs_scopes,       llt = choices_selected(         choices = variable_choices(adae, subset = c(\"AEDECOD\")),         selected = \"AEDECOD\"       )     )   ) ) #> [INFO] 2022-10-12 02:09:24.2165 pid:1445 token:[] teal.modules.clinical Initializing tm_t_smq if (FALSE) { shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Teal Module: Summary of Variables ‚Äî tm_t_summary","title":"Teal Module: Summary of Variables ‚Äî tm_t_summary","text":"Teal Module: Summary Variables","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Teal Module: Summary of Variables ‚Äî tm_t_summary","text":"","code":"tm_t_summary(   label,   dataname,   parentname = ifelse(inherits(arm_var, \"data_extract_spec\"),     teal.transform::datanames_input(arm_var), \"ADSL\"),   arm_var,   summarize_vars,   add_total = TRUE,   useNA = c(\"ifany\", \"no\"),   na_level = \"<Missing>\",   numeric_stats = c(\"n\", \"mean_sd\", \"mean_ci\", \"median\", \"median_ci\", \"quantiles\",     \"range\", \"geom_mean\"),   denominator = c(\"N\", \"n\", \"omit\"),   drop_arm_levels = TRUE,   pre_output = NULL,   post_output = NULL,   basic_table_args = teal.widgets::basic_table_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Teal Module: Summary of Variables ‚Äî tm_t_summary","text":"label (character) menu item label module teal app. dataname (character) analysis data used teal module. parentname (character) parent analysis data used teal module, usually refers ADSL. arm_var (teal.transform::choices_selected() teal.transform::data_extract_spec()) object available choices preselected option variable names can used arm_var. defines grouping variable(s) results table. two elements selected arm_var, second variable nested first variable. summarize_vars (choices_selected data_extract_spec) names variables summarized. add_total (logical) whether include column total number patients. useNA (character) whether missing data (NA) displayed level. na_level (string) used replace NA empty values character factor variables data. numeric_stats (character) selected statistics numeric summarize variables displayed. Possible values n, mean_sd, mean_ci, median, median_ci, quantiles, range geom_mean. default,  n, mean_sd, median, range selected. denominator (character) chooses percentages calculated. option N, reference population column total used denominator. option n, number non-missing records row column intersection used denominator. omit chosen, percentage omitted. drop_arm_levels (logical) drop unused arm_var levels. TRUE, arm_var levels set used dataname dataset. FALSE, arm_var levels set used parentname dataset. dataname dataset parentname dataset (.e. ADSL), drop_arm_levels always TRUE regardless user choice tm_t_summary called. pre_output optional, (shiny.tag) text placed output put output context. example title. post_output optional, (shiny.tag) text placed output put output context. example shiny::helpText() elements useful. basic_table_args optional, (basic_table_args) object created teal.widgets::basic_table_args() settings module table. argument merged option teal.basic_table_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-basic-table-arguments\", package = \"teal.widgets\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Teal Module: Summary of Variables ‚Äî tm_t_summary","text":"","code":"# Preparation of the test case. library(dplyr) library(scda) library(tern)  adsl <- synthetic_cdisc_data(\"latest\")$adsl  # Include `EOSDY` and `DCSREAS` variables below because they contain missing data. stopifnot(   any(is.na(adsl$EOSDY)),   any(is.na(adsl$DCSREAS)) )  app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", adsl),     code = 'ADSL <- synthetic_cdisc_data(\"latest\")$adsl',     check = TRUE   ),   modules = modules(     tm_t_summary(       label = \"Demographic Table\",       dataname = \"ADSL\",       arm_var = choices_selected(c(\"ARM\", \"ARMCD\"), \"ARM\"),       add_total = TRUE,       summarize_vars = choices_selected(         c(\"SEX\", \"RACE\", \"BMRKR2\", \"EOSDY\", \"DCSREAS\", \"AGE\"),         c(\"SEX\", \"RACE\")       ),       useNA = \"ifany\"     )   ) ) #> [INFO] 2022-10-12 02:09:27.1832 pid:1445 token:[] teal.modules.clinical Initializing tm_t_summary if (FALSE) { shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_summary_by.html","id":null,"dir":"Reference","previous_headings":"","what":"Teal Module: Summarize Variables by Row Groups Module ‚Äî tm_t_summary_by","title":"Teal Module: Summarize Variables by Row Groups Module ‚Äî tm_t_summary_by","text":"Teal Module: Summarize Variables Row Groups Module","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_summary_by.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Teal Module: Summarize Variables by Row Groups Module ‚Äî tm_t_summary_by","text":"","code":"tm_t_summary_by(   label,   dataname,   parentname = ifelse(inherits(arm_var, \"data_extract_spec\"),     teal.transform::datanames_input(arm_var), \"ADSL\"),   arm_var,   by_vars,   summarize_vars,   id_var = teal.transform::choices_selected(teal.transform::variable_choices(dataname,     subset = \"USUBJID\"), selected = \"USUBJID\", fixed = TRUE),   paramcd = NULL,   add_total = TRUE,   parallel_vars = FALSE,   row_groups = FALSE,   useNA = c(\"ifany\", \"no\"),   na_level = \"<Missing>\",   numeric_stats = c(\"n\", \"mean_sd\", \"median\", \"range\"),   denominator = teal.transform::choices_selected(c(\"n\", \"N\", \"omit\"), \"omit\", fixed =     TRUE),   drop_arm_levels = TRUE,   drop_zero_levels = TRUE,   pre_output = NULL,   post_output = NULL,   basic_table_args = teal.widgets::basic_table_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_summary_by.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Teal Module: Summarize Variables by Row Groups Module ‚Äî tm_t_summary_by","text":"label (character) menu item label module teal app. dataname (character) analysis data used teal module. parentname (character) parent analysis data used teal module, usually refers ADSL. arm_var (choices_selected data_extract_spec) object available choices preselected option variable names can used arm_var. defines grouping variable(s) results table. two elements selected arm_var, second variable nested first variable. by_vars (choices_selected data_extract_spec) object available choices preselected option variable names used split summary rows. summarize_vars (choices_selected data_extract_spec) names variables summarized. id_var (choices_selected data_extract_spec) object specifying variable name subject id. paramcd (choices_selected data_extract_spec) variable value designating studied parameter. add_total (logical) whether include column total number patients. parallel_vars (logical) used display summarize_vars parallel columns (FALSE default). Can used chosen analysis variables numeric. row_groups (logical) used display summarize_vars row groups (FALSE default). useNA (character) whether missing data (NA) displayed level. na_level (string) used replace NA empty values character factor variables data. numeric_stats (character) selected statistics numeric summarize variables displayed. Possible values n, mean_sd, mean_ci, median, median_ci, range, geom_mean. default,  n, mean_sd, median, range selected. denominator (character) chooses percentages calculated. option N, reference population column total used denominator. option n, number non-missing records row column intersection used denominator. omit chosen, percentage omitted. drop_arm_levels (logical) drop unused arm_var levels. TRUE, arm_var levels set used dataname dataset. FALSE, arm_var levels set used parentname dataset. dataname dataset parentname dataset (.e. ADSL), drop_arm_levels always TRUE regardless user choice tm_t_summary_by called. drop_zero_levels (logical) used remove rows zero counts result table. pre_output optional, (shiny.tag) text placed output put output context. example title. post_output optional, (shiny.tag) text placed output put output context. example shiny::helpText() elements useful. basic_table_args optional, (basic_table_args) object created teal.widgets::basic_table_args() settings module table. argument merged option teal.basic_table_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-basic-table-arguments\", package = \"teal.widgets\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_summary_by.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Teal Module: Summarize Variables by Row Groups Module ‚Äî tm_t_summary_by","text":"","code":"# Preparation of the test case. library(scda) synthetic_cdisc_data_latest <- synthetic_cdisc_data(\"latest\") adsl <- synthetic_cdisc_data_latest$adsl adlb <- synthetic_cdisc_data_latest$adlb  app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", adsl),     cdisc_dataset(\"ADLB\", adlb),     code = \"synthetic_cdisc_data_latest <- synthetic_cdisc_data('latest')       adsl <- synthetic_cdisc_data_latest$adsl       adlb <- synthetic_cdisc_data_latest$adlb\"   ),   modules = modules(     tm_t_summary_by(       label = \"Summary by Row Groups Table\",       dataname = \"ADLB\",       arm_var = choices_selected(         choices = variable_choices(adsl, c(\"ARM\", \"ARMCD\")),         selected = \"ARM\"       ),       add_total = TRUE,       by_vars = choices_selected(         choices = variable_choices(adlb, c(\"PARAM\", \"AVISIT\")),         selected = c(\"AVISIT\")       ),       summarize_vars = choices_selected(         choices = variable_choices(adlb, c(\"AVAL\", \"CHG\")),         selected = c(\"AVAL\")       ),       useNA = \"ifany\",       paramcd = choices_selected(         choices = value_choices(adlb, \"PARAMCD\", \"PARAM\"),         selected = \"ALT\"       )     )   ) ) #> [INFO] 2022-10-12 02:09:28.8853 pid:1445 token:[] teal.modules.clinical Initializing tm_t_summary_by if (FALSE) { shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_tte.html","id":null,"dir":"Reference","previous_headings":"","what":"Teal Module: Time To Event Table Teal Module ‚Äî tm_t_tte","title":"Teal Module: Time To Event Table Teal Module ‚Äî tm_t_tte","text":"Teal Module: Time Event Table Teal Module","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_tte.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Teal Module: Time To Event Table Teal Module ‚Äî tm_t_tte","text":"","code":"tm_t_tte(   label,   dataname,   parentname = ifelse(inherits(arm_var, \"data_extract_spec\"),     teal.transform::datanames_input(arm_var), \"ADSL\"),   arm_var,   arm_ref_comp = NULL,   paramcd,   strata_var,   aval_var = teal.transform::choices_selected(teal.transform::variable_choices(dataname,     \"AVAL\"), \"AVAL\", fixed = TRUE),   cnsr_var = teal.transform::choices_selected(teal.transform::variable_choices(dataname,     \"CNSR\"), \"CNSR\", fixed = TRUE),   conf_level_coxph = teal.transform::choices_selected(c(0.95, 0.9, 0.8), 0.95, keep_order     = TRUE),   conf_level_survfit = teal.transform::choices_selected(c(0.95, 0.9, 0.8), 0.95,     keep_order = TRUE),   time_points,   time_unit_var =     teal.transform::choices_selected(teal.transform::variable_choices(dataname, \"AVALU\"),     \"AVALU\", fixed = TRUE),   event_desc_var = teal.transform::choices_selected(\"EVNTDESC\", \"EVNTDESC\", fixed = TRUE),   add_total = FALSE,   pre_output = NULL,   post_output = NULL,   basic_table_args = teal.widgets::basic_table_args() )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_tte.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Teal Module: Time To Event Table Teal Module ‚Äî tm_t_tte","text":"label (character) menu item label module teal app. dataname (character) analysis data used teal module. parentname (character) parent analysis data used teal module, usually refers ADSL. arm_var (choices_selected data_extract_spec) object available choices preselected option variable names can used arm_var. defines grouping variable(s) results table. two elements selected arm_var, second variable nested first variable. arm_ref_comp optional, (list) specified must named list element corresponding arm variable ADSL element must another list (possibly delayed teal.transform::variable_choices() delayed teal.transform::value_choices() elements named ref comp defined default reference comparison arms arm variable changed. paramcd (choices_selected data_extract_spec) variable value designating studied parameter. strata_var (choices_selected data_extract_spec) names variables stratified analysis. aval_var (choices_selected data_extract_spec) object available choices preselected option analysis variable. cnsr_var (choices_selected data_extract_spec) object available choices preselected option censoring variable. conf_level_coxph (choices_selected()) object available choices pre-selected option confidence level, within range (0, 1). conf_level_survfit (choices_selected()) object available choices pre-selected option confidence level, within range (0, 1). time_points (choices_selected) object available choices preselected option time points can used tern::surv_timepoint(). time_unit_var (choices_selected data_extract_spec) object available choices preselected option time unit variable. event_desc_var (character data_extract_spec()) variable name event description information, optional. add_total (logical) whether include column total number patients. pre_output optional, (shiny.tag) text placed output put output context. example title. post_output optional, (shiny.tag) text placed output put output context. example shiny::helpText() elements useful. basic_table_args optional, (basic_table_args) object created teal.widgets::basic_table_args() settings module table. argument merged option teal.basic_table_args default module arguments (hard coded module body). details, see vignette: vignette(\"custom-basic-table-arguments\", package = \"teal.widgets\").","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_tte.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Teal Module: Time To Event Table Teal Module ‚Äî tm_t_tte","text":"module produces response summary table similar STREAM template ttet01. core functionality based coxph_pairwise(), surv_timepoint() surv_time() package tern. following variables used module: arm stratification variables taken parentname data.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/tm_t_tte.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Teal Module: Time To Event Table Teal Module ‚Äî tm_t_tte","text":"","code":"library(scda) synthetic_cdisc_data_latest <- synthetic_cdisc_data(\"latest\") ADSL <- synthetic_cdisc_data_latest$adsl ADTTE <- synthetic_cdisc_data_latest$adtte  arm_ref_comp <- list(   ACTARMCD = list(     ref = \"ARM B\",     comp = c(\"ARM A\", \"ARM C\")   ),   ARM = list(     ref = \"B: Placebo\",     comp = c(\"A: Drug X\", \"C: Combination\")   ) )  app <- init(   data = cdisc_data(     cdisc_dataset(\"ADSL\", ADSL,       code = \"synthetic_cdisc_data_latest <- synthetic_cdisc_data('latest')         ADSL <- synthetic_cdisc_data_latest$adsl\"     ),     cdisc_dataset(\"ADTTE\", ADTTE,       code = \"synthetic_cdisc_data_latest <- synthetic_cdisc_data('latest')         ADTTE <- synthetic_cdisc_data_latest$adtte\"     )   ),   modules = modules(     tm_t_tte(       label = \"Time To Event Table\",       dataname = \"ADTTE\",       arm_var = choices_selected(         variable_choices(ADSL, c(\"ARM\", \"ARMCD\", \"ACTARMCD\")),         \"ARM\"       ),       arm_ref_comp = arm_ref_comp,       paramcd = choices_selected(         value_choices(ADTTE, \"PARAMCD\", \"PARAM\"),         \"OS\"       ),       strata_var = choices_selected(         variable_choices(ADSL, c(\"SEX\", \"BMRKR2\")),         \"SEX\"       ),       time_points = choices_selected(c(182, 243), 182),       event_desc_var = choices_selected(         variable_choices(ADTTE, \"EVNTDESC\"),         \"EVNTDESC\",         fixed = TRUE       )     )   ) ) #> [INFO] 2022-10-12 02:09:30.6371 pid:1445 token:[] teal.modules.clinical Initializing tm_t_tte if (FALSE) { shinyApp(app$ui, app$server) }"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/validate_arm.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if vector is valid as to be used as a treatment arm variable ‚Äî validate_arm","title":"Check if vector is valid as to be used as a treatment arm variable ‚Äî validate_arm","text":"Check vector valid used treatment arm variable","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/validate_arm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if vector is valid as to be used as a treatment arm variable ‚Äî validate_arm","text":"","code":"validate_arm(arm_vec)"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/validate_arm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if vector is valid as to be used as a treatment arm variable ‚Äî validate_arm","text":"arm_vec vector validated","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/validate_arm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check if vector is valid as to be used as a treatment arm variable ‚Äî validate_arm","text":"validate error returned vector factor detailed error message entries empty strings","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/validate_standard_inputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate standard input values for a teal module ‚Äî validate_standard_inputs","text":"","code":"validate_standard_inputs(   adsl,   adslvars = character(0),   anl,   anlvars = character(0),   need_arm = TRUE,   arm_var,   ref_arm,   comp_arm,   min_n_levels_armvar = 1L,   max_n_levels_armvar = 100L,   min_nrow = 1 )"},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/validate_standard_inputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate standard input values for a teal module ‚Äî validate_standard_inputs","text":"adsl data.frame subject-level data adslvars required variables ADSL anl data.frame analysis data anlvars required variables ANL need_arm flag indicating whether grouping variable arm_var required can optionally NULL. arm_var character name grouping variable, typically arm ref_arm character name reference level arm_var comp_arm character name comparison level arm_var min_n_levels_armvar minimum number levels grouping variable arm_var. Defaults 1, NULL minimum. max_n_levels_armvar maximum number levels grouping variable arm_var. Use NULL maximum. min_nrow minimum number observations ADSL ANL","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/reference/validate_standard_inputs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate standard input values for a teal module ‚Äî validate_standard_inputs","text":"","code":"library(scda) library(shiny) ADSL <- synthetic_cdisc_data(\"latest\")$adsl ADAE <- synthetic_cdisc_data(\"latest\")$adae  ui <- fluidPage(   shiny::sliderInput(\"obs\", \"Max Age\",     min = 0, max = 100, value = 100   ),   shiny::sliderInput(\"maxgr\", \"Max Grade\",     min = 0, max = 5, value = 5   ),   plotOutput(\"plot\") )  server <- function(input, output) {   output$plot <- renderPlot({     keep_adsl <- c(\"USUBJID\", \"STUDYID\", \"ARMCD\", \"AGE\", \"ARM\")     keep_adae <- c(\"USUBJID\", \"STUDYID\", \"AETOXGR\")      ADSL_f <- ADSL[ADSL$AGE <= input$obs, keep_adsl]     ADAE_f <- ADAE[as.numeric(ADAE$AETOXGR) <= input$maxgr, keep_adae]      validate_standard_inputs(       adsl = ADSL_f,       adslvars = keep_adsl,       anl = ADAE_f,       anlvars = keep_adae,       arm_var = \"ARM\",       need_arm = TRUE     )      ANL <- merge(ADSL_f, ADAE_f, by = c(\"USUBJID\", \"STUDYID\"))       plot(ANL$AGE, jitter(as.numeric(ANL$AETOXGR)), xlab = \"AGE\", ylab = \"AETOXGR\")   }) } if (FALSE) { shinyApp(ui, server) }  server2 <- function(input, output) {   output$plot <- renderPlot({     keep_adsl <- c(\"USUBJID\", \"STUDYID\", \"ARMCD\", \"AGE\", \"ARM\")     keep_adae <- c(\"USUBJID\", \"STUDYID\", \"AETOXGR\")      ADSL_f <- ADSL[ADSL$AGE <= input$obs, keep_adsl]     ADAE_f <- ADAE[as.numeric(ADAE$AETOXGR) <= input$maxgr, keep_adae]      validate_standard_inputs(       adsl = ADSL_f,       adslvars = keep_adsl,       anl = ADAE_f,       anlvars = keep_adae,       arm_var = NULL,       need_arm = FALSE     )      ANL <- merge(ADSL_f, ADAE_f, by = c(\"USUBJID\", \"STUDYID\"))      plot(ANL$AGE, jitter(as.numeric(ANL$AETOXGR)), xlab = \"AGE\", ylab = \"AETOXGR\")   }) } if (FALSE) { shinyApp(ui, server2) }  server3 <- function(input, output) {   output$plot <- renderPlot({     keep_adsl <- c(\"USUBJID\", \"STUDYID\", \"ARMCD\", \"AGE\", \"ARM\")     keep_adae <- c(\"USUBJID\", \"STUDYID\", \"AETOXGR\")      ADSL_f <- ADSL[ADSL$AGE <= input$obs, keep_adsl]     ADAE_f <- ADAE[as.numeric(ADAE$AETOXGR) <= input$maxgr, keep_adae]      validate_standard_inputs(       adsl = ADSL_f,       adslvars = keep_adsl,       anl = ADAE_f,       anlvars = keep_adae,       arm_var = \"HELLO\",       need_arm = FALSE     )      ANL <- merge(ADSL_f, ADAE_f, by = c(\"USUBJID\", \"STUDYID\"))      plot(ANL$AGE, jitter(as.numeric(ANL$AETOXGR)), xlab = \"AGE\", ylab = \"AETOXGR\")   }) } if (FALSE) { shinyApp(ui, server3) }"},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/news/index.html","id":"enhancements-0-8-13-9037","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"teal.modules.clinical 0.8.13.9037","text":"Updated synthetic data tests version rcd_2022_02_28. Reverted missing data checkbox tm_t_summary (encoding filtering separate). Implemented new widget allows dragging dropping select comparison groups. Added teal.reporter functionality modules. Enhanced tm_t_pp_medical_history module use table_with_settings module return rtables object. Implemented nestcolor examples, refactored tm_g_barchart_simple allow use nestcolor. Added descriptive title/labels visit name subtitle tm_g_ci. Updated tm_a_mmrm column name deselecting treatment ‚Äúobs‚Äù ‚ÄúPatients‚Äù, added subtitles footnotes. Added title parameter category subtitle tm_t_exposure, cleaned labels. Added titles worse flag variable subtitles tm_t_shift_by_grade tm_t_shift_by_arm_by_worst. Added footnote tm_t_events_patyear CI method. Added subtitle footnotes tm_g_km. Added Stratified Analysis CI method option panel tm_t_binary_outcome. Added validation covariate/visit conflicts tm_a_mmrm. Remove unnecessary brackets header tm_t_exposure.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/news/index.html","id":"bug-fixes-0-8-13-9037","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"teal.modules.clinical 0.8.13.9037","text":"Fixed bug tm_g_barchart_simple prevented graph showing. Fixed broken example tm_t_abnormality_by_worst_grade. Fixed bug tm_a_mmrm prevented table headers displaying. Fixed bug tm_g_forest_rsp deselecting endpoint. Fixed bug tm_t_binary_outcome crashed app deselecting paramcd. Fixed teal.reporter card names tm_t_smq. Fixed bug tm_t_shift_by_arm_by_worst adding validations choosing different endpoint values.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/news/index.html","id":"miscellaneous-0-8-13-9037","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.modules.clinical 0.8.13.9037","text":"Added nestcolor dependency replaced deprecated function tern::color_palette nestcolor::color_palette.","code":""},{"path":[]},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/news/index.html","id":"tm_g_pp_adverse_events-0-8-13","dir":"Changelog","previous_headings":"Enhancements","what":"tm_g_pp_adverse_events","title":"teal.modules.clinical 0.8.13","text":"Updated position labels. Updated plot render color legend.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/news/index.html","id":"tm_t_summary_by-0-8-13","dir":"Changelog","previous_headings":"Enhancements","what":"tm_t_summary_by","title":"teal.modules.clinical 0.8.13","text":"Enhanced module support geometric mean encoding panel.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/news/index.html","id":"tm_t_summary-0-8-13","dir":"Changelog","previous_headings":"Enhancements","what":"tm_t_summary","title":"teal.modules.clinical 0.8.13","text":"Updated added footnote. Enhanced module support geometric mean encoding panel. Updated module display checkboxes numeric variables statistics numeric variables part selected. Updated validations warn users using dataset non unique identifiers selecting variables non supported types (.e.¬†Date, POSIXt). Added checkbox remove column generated missing values.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/news/index.html","id":"other-modules-0-8-13","dir":"Changelog","previous_headings":"Enhancements","what":"Other modules","title":"teal.modules.clinical 0.8.13","text":"Updated tm_t_binary_outcome enable option apply continuity correction Newcombe method. Simplified show R code tm_g_pp_patient_timeline module. Improved names code chunks shown Debug Info. Improved validation treatment variable factor.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/news/index.html","id":"bug-fixes-0-8-13","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"teal.modules.clinical 0.8.13","text":"Fixed summarize_logistic implementation broken empty string error. upstream. _NA_ new standard flag allow pivot empty entries data frames. Took @title tm_t_binary_outcome.R producing warning. Updated validation account error selecting single variable tm_g_pp_patient_timeline module.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/news/index.html","id":"miscellaneous-0-8-13","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.modules.clinical 0.8.13","text":"Added pkgdown template documentation. Updated package authors.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/news/index.html","id":"miscellaneous-0-8-12","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.modules.clinical 0.8.12","text":"Changed input Covariates tm_t_coxreg.R track user input reflect order table.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/news/index.html","id":"new-features-0-8-12","dir":"Changelog","previous_headings":"","what":"New features","title":"teal.modules.clinical 0.8.12","text":"Added new module tm_t_shift_by_arm_by_worst analysis laboratory abnormalities severe grade flag. Enhanced tm_t_events_patyear include selected parameter title table. Enhanced tm_t_mult_events include selected parameter title table.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/news/index.html","id":"enhancements-0-8-12","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"teal.modules.clinical 0.8.12","text":"Rewrote modules use moduleServer updated calls teal.devel modules also written use moduleServer. Changed way obtaining selection ordered changes teal.devel. Use ordered = TRUE cs_to_des_select cs_to_select_spec return ordered selection. Replaced calls teal::root_modules teal::modules following deprecation teal::root_modules. tm_t_events_summary now allows nested arm_var columns matching outputs tm_t_events. Added validation tm_t_abnormality_by_worst_grade arm_var selected. Enhanced tm_t_binary_outcome include responders response table default. Added subtitle tm_g_forest_tte, tm_t_coxreg, tm_t_binary_outcome listing stratification factors.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/news/index.html","id":"bug-fixes-0-8-12","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"teal.modules.clinical 0.8.12","text":"Fixed bug prevent processing empty sets data tm_g_forest_rsp.R causing shiny errors runtime. Fixed bug closed Compare Treatments conditional panel marked Combine comparison groups? option conflicted adding column patients tables tm_t_binary_outcome.R tm_t_tte.R.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/news/index.html","id":"miscellaneous-0-8-12-1","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.modules.clinical 0.8.12","text":"Replaced deprecated rtables::var_labels calls documentation examples. Add import tern.mmrm package change references split tern. Adjusted package imports take account changes teal framework. Ensure consistent vertical order tm_g_pp_patient_timeline output switching absolute relative days.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/news/index.html","id":"breaking-changes-0-8-11","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"teal.modules.clinical 0.8.11","text":"Updated tm_t_abnormality due changes count_abnormal abnormal argument taking list input now. Changed tm_g_pp_patient_timeline parameter, cmtrt, cmdecod.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/news/index.html","id":"new-features-0-8-11","dir":"Changelog","previous_headings":"","what":"New features","title":"teal.modules.clinical 0.8.11","text":"Added new module tm_t_abnormality_by_worst_grade analysis laboratory test results highest grade post-baseline. Enhanced tm_t_ancova include selected parameter(s), visit(s) analysis variable title table. Added new module tm_g_lineplot creating line plots. Enhanced tm_t_logistic include selected parameter title table. Enhanced tm_g_forest_rsp include selected parameter title table. Enhanced tm_g_forest_tte include selected parameter title table. Enhanced tm_g_pp_patient_timeline bold axes labels integer values axis. Enhanced tm_g_ipp allow users display AVALU title y axis.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/news/index.html","id":"enhancements-0-8-11","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"teal.modules.clinical 0.8.11","text":"Added support logging logger package added info level logs upon initialization module. Added default_responses argument tm_t_binary_outcome tm_g_forest_rsp allow user specify default selected responses possible response levels. Updated tm_t_binary_outcome show selected responses output table selecting ‚ÄúShow Selected Response Categories‚Äù. Added rsp_table argument tm_t_binary_outcome allow user initialize module matching RSPT01 STREAM template. Added support custom arguments ggplot2::labs ggplot2::theme plot based modules. Added support custom arguments rtables::basic_table table based modules. Updated tm_t_binary_outcome enable option apply continuity correction Wilson method.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/news/index.html","id":"miscellaneous-0-8-11","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.modules.clinical 0.8.11","text":"Updated required R version >= 3.6. Refactored calls defunct teal.devel::data_extract_input calls replacement teal.devel::data_extract_ui. Updated modules use new data_merge_module interface provided teal.devel removed usage now deprecated function teal.devel::get_input_order. Updated tm_t_binary_outcome module add template removed now deprecated module tm_t_rsp. Removed utils.nest dependency replaced calls checkmate equivalents.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/news/index.html","id":"bug-fixes-0-8-11","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"teal.modules.clinical 0.8.11","text":"Fixed bug tm_g_pp_therapy cmstdy cmendy argument type integer causes plot crash.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/news/index.html","id":"new-features-0-8-10","dir":"Changelog","previous_headings":"","what":"New features","title":"teal.modules.clinical 0.8.10","text":"Added new module tm_t_smq analysis adverse events Standardized MedDRA Query. Added new module tm_t_shift_by_grade analysis grade laboratory abnormalities. Added new module tm_t_exposure analysis duration exposure risk management plan. Added new module tm_t_shift_by_arm can display shift table ECG interval data.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/news/index.html","id":"bug-fixes-0-8-10","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"teal.modules.clinical 0.8.10","text":"Corrected tm_a_mmrm able consider treatment variable interactions. Fixed tm_t_binary_outcome tm_t_rsp choose correct CI estimation method Proportions Difference Stratified Analysis (.e.¬†Wald-type confidence interval CMH weights).","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/news/index.html","id":"enhancements-0-8-10","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"teal.modules.clinical 0.8.10","text":"Added validation checks tm_t_rsp tm_t_binary_outcome stratification errors applied filters. Added tm_g_km validation check plot tables font size. Enhanced tm_g_km add selected paramcd plot title. tm_t_events now can display layouts two nested column treatment variables. options pruning sorting available. Exported package helper functions. Updated tm_t_events_by_grade display grading groups nested columns col_by_grade option support pruning sorting options like tm_t_events. Used format_count_fraction fix formatting inconsistency tm_t_events_summary. Updated count_occurrences vars argument tm_t_shift_by_grade. Updated tm_t_pp_laboratory display 4 decimals default. Updated tm_t_events_by_grade use trim_levels_in_group split function instead trim_rows function. Added table title tm_t_tte. Added table titles tm_t_rsp tm_t_binary_outcome.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/news/index.html","id":"miscellaneous-0-8-10","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.modules.clinical 0.8.10","text":"Updated LICENCE README new package references. Added error_on_lint: TRUE .lintr. Removed insert_rrow updated usage count_patients_by_flags tm_t_events_summary. Changed package calls functions dplyr package. functions now fully specified (e.g.¬†dplyr::filter).","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/news/index.html","id":"new-features-0-8-9","dir":"Changelog","previous_headings":"","what":"New features","title":"teal.modules.clinical 0.8.9","text":"Added capability remember order user input encoding UI elements. Inputs marked double arrow icon tracking enabled. affected modules : tm_t_summary, tm_t_summary_by, tm_g_forest_rsp, tm_g_forest_tte, tm_t_events_summary, tm_t_abnormality, tm_t_mult_events. Added new argument numeric_stats tm_t_summary tm_t_summary_by control displayed summary statistics numeric variables. Added new argument drop_zero_levels tm_t_summary_by can drop rows zeros result table.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/news/index.html","id":"enhancements-0-8-9","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"teal.modules.clinical 0.8.9","text":"Split tm_g_patient_profile tabs 8 separate new modules. Added option select patient ID filter panel modules patient profile. Added validation tm_g_patient_timeline plot empty. Enhanced tm_a_mmrm work without treatment variable. Added option choose number decimal places rounding tm_t_pp_laboratory. Added check box tm_g_pp_patient_timeline hiding/showing relative study days x-axis. Added title patient‚Äôs id plots patient profile modules. Made grey error message tm_g_forest_tte informative deselecting Endpoint column left-hand encoding panel. Added twenty-fifth seventy-fifth quantile summary statistics tm_t_summary. Added interaction p-value column tm_t_coxreg. Added validation tm_t_ancova selected covariate variables contain one level. Added validation tm_t_events_patyear events variable empty. Changed font size input description tm_g_km precisely describe controls. Enhanced tm_t_logistic interaction choices depend selected covariates. Enhanced tm_t_rsp strata input visible comparing treatments.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/news/index.html","id":"bug-fixes-0-8-9","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"teal.modules.clinical 0.8.9","text":"Fixed Get R Code output tm_t_pp_laboratory return identical HTML formatted table displayed app. Added validation tm_t_coxreg ensure treatment, strata covariate variables overlap. Limited label repel feature tm_g_pp_patient_timeline X-axis consistent look. Updated tm_t_summary_by paramcd required analyzing ADSL variables. Updated tm_t_coxreg can work covariate selected. Updated tm_a_mmrm can work treatment variable selected. Updated tm_g_forest_tte total number events also shown table. Updated tm_t_events_summary work pooled studies. Updated validation level tm_t_coxreg. Updated validation level tm_t_logistic. Added validation tm_t_binary_outcome tm_t_rsp ensure strata variable contains one level selecting one strata variable. Updated warning message deselecting statistics tm_t_summary tm_t_summary_by explain need select least one statistic.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/news/index.html","id":"enhancements-0-8-8","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"teal.modules.clinical 0.8.8","text":"Added option download expand tables. tm_g_km added support downloading images updated x-axis label show title case. Added slider font size plots. Added persistence selected table lengths. timeline plot now supports edge cases. vitals tab, removed unused label text legend, updated plot display stable colors per levels, cleared x-axis limit fixed legend update filtering. Also added note clarify supported horizontal lines cases. Updated adverse events tab show warning message instead empty plot data empty. Fixed PARAMCD selected levels current patient. Updated pre-processing code inside template_tte dataset without events still produces table. Updated code use correct denominator duration response endpoints. Modified parameter arm_var accept one column. selecting two columns arm_var, second variable nest first one. Added argument show_labels template_summary show label single summary variable table. Added new parameter conf_arg tm_t_rsp consistent efficacy modules. Added validation statement tm_g_ipp module print message deselecting Timepoint Variable drop-. Removed header definition tm_g_forest_rsp tm_g_forest_tte now default header g_forest. Fixed validation statement tm_t_coxreg models without strata using likelihood tests return result. Clarified functionality drop_arm_levels tm_t_summary tm_t_summary_by. encodings panel, checkbox show parent dataset analysis dataset different.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/news/index.html","id":"miscellaneous-0-8-8","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.modules.clinical 0.8.8","text":"Replaced remaining two observe function calls observeEvent optimize performance. Fixed grammar ‚ÄúSelect patient‚Äôs id‚Äù error message tm_g_patient_profile. Fixed font_size default templates 12L instead vector 3 integers cleaned associated unnecessary code. Fixed deprecated function warning tm_g_barchart_simple. Fixed subgroup_var definition truncation tm_g_forest_rsp tm_g_forest_tte. Clarified labeling related regression type encoding panel tm_t_coxreg.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/news/index.html","id":"bug-fixes-0-8-8","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"teal.modules.clinical 0.8.8","text":"Added validation case filtering rows therapy tab tm_g_patient_profile. Updated internals modules read data correct field filter_spec objects. Fixed reactivity filter panel PARAMCD variable levels input tm_g_patient_profile vitals tab plot get reset filtering. Updated vitals plot tab tm_g_patient_profile drop NA entries plot. Updated tm_t_coxreg take values account. Added check tm_t_coxreg interactions univariate models multivariate models. Updated tm_t_events_summary work pooled studies.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/news/index.html","id":"new-module-0-8-7","dir":"Changelog","previous_headings":"","what":"New Module","title":"teal.modules.clinical 0.8.7","text":"Added new module tm_g_patient_profile profile patients based predefined categories. Added new module tm_g_ipp individual patient plots.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/news/index.html","id":"enhancements-0-8-7","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"teal.modules.clinical 0.8.7","text":"Added argument drop_arm_levels safety modules. allows removal columns based factor levels found filtered data. Updated tm_g_km allow plot failure probability y-axis, tick interval selection x-axis option create plot without confidence interval ribbon (new default). Added argument time_unit_var template_g_km add time unit x-axis label.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/news/index.html","id":"miscellaneous-0-8-7","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.modules.clinical 0.8.7","text":"Removed redundant Analysis Data: label Encodings Panel. Removed limit requiring 15 fewer columns tabulation modules. New upper threshold 100 columns. Decreased lower limit number observations required modules. Safety tables require least one record. Requirements efficacy outputs per treatment group: tm_a_mmrm requires five records, tm_t_logistic tm_t_coxreg require two records, remaining modules require least one record per treatment group. graphs, lower threshold two records. Removed argument cnsr_val tm_t_events_patyear added new argument events_var. arm_ref_comp_observer include parentname argument. Show R code include datasets retrieved data_extract_spec objects. Refactored stringr dependency patient profile module. Added missing table calls chunks tm_t_events tm_t_events_by_grade.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/news/index.html","id":"new-features-0-8-6","dir":"Changelog","previous_headings":"","what":"New Features","title":"teal.modules.clinical 0.8.6","text":"Added new module tm_g_ci confidence interval plots. Added new module tm_t_ancova analysis variance summary tables. Added new module tm_t_mult_events multi-event tables.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/news/index.html","id":"enhancements-0-8-6","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"teal.modules.clinical 0.8.6","text":"Refactored modules using redesigned rtables tern packages. Enhanced modules. now take advantage data_extract_spec data_merge_module functionality teal. Reduced clutter repeated datasets encodings panels. Updated modules use OptionalSelectInput conf_level.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/news/index.html","id":"miscellaneous-0-8-6","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.modules.clinical 0.8.6","text":"Added vignette substitute can helpful developing analysis template functions teal modules.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/news/index.html","id":"bug-fixes-0-8-6","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"teal.modules.clinical 0.8.6","text":"Updated tm_t_events module use user‚Äôs non-default choices prune_freq prune_diff.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/news/index.html","id":"tealmodulesclinical-085","dir":"Changelog","previous_headings":"","what":"teal.modules.clinical 0.8.5","title":"teal.modules.clinical 0.8.5","text":"graph modules now accept plot_width argument specifies plot width renders slider adjust width interactively module. FilteredData object now passed arm_ref_comp_observer modules now support nested lists containing delayed_data objects. Replace plot_with_height module new plot_with_settings module. Update examples use code argument inside cdisc_dataset.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/news/index.html","id":"tealmodulesclinical-084","dir":"Changelog","previous_headings":"","what":"teal.modules.clinical 0.8.4","title":"teal.modules.clinical 0.8.4","text":"Extend tm_t_coxreg optionally produce univariate Cox regressions. Updated tm_t_binary_outcome display Odds Ratio estimates, include new methods CIs p-values display summary individual response categories. Updated tm_t_tte optionally compare arms, removed conf_level argument. Updated tm_g_km optionally compare arms. Extend tm_g_km optionally scale X axis range case one plot. New tm_a_mmrm MMRM analysis. Deprecated tm_t_mmrm (superseded tm_a_mmrm).","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/news/index.html","id":"tealmodulesclinical-083","dir":"Changelog","previous_headings":"","what":"teal.modules.clinical 0.8.3","title":"teal.modules.clinical 0.8.3","text":"New tm_t_coxreg module multi-variable Cox regressions. New tm_t_binary_outcome module. New tm_t_events_patyear module: events rate adjusted patient-year risk table. Remove grade_levels argument tm_t_events_by_grade. Updated response table single arm. New tm_t_abnormality module. Removed get_relabel_call get_relabel_call2 favor teal.devel::get_relabel_call teal.devel::get_anl_relabel_call.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/news/index.html","id":"tealmodulesclinical-082","dir":"Changelog","previous_headings":"","what":"teal.modules.clinical 0.8.2","title":"teal.modules.clinical 0.8.2","text":"Add confidence level survfit, coxph, ztest; add confidence type, ties, percentiles tm_t_tte. Optionally use single term tm_t_events tm_t_events_by_grade modules. New tm_t_logistic module. New tm_t_mmrm module. New modules tm_t_summary_by tm_t_events_summary. Add stratified analysis tm_g_forest_tte tm_g_forest_rsp. Add confidence level plotting symbol size options tm_g_forest_rsp tm_g_forest_tte.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/news/index.html","id":"tealmodulesclinical-081","dir":"Changelog","previous_headings":"","what":"teal.modules.clinical 0.8.1","title":"teal.modules.clinical 0.8.1","text":"New tm_t_events tm_t_events_by_grade modules.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/news/index.html","id":"tealmodulesclinical-080","dir":"Changelog","previous_headings":"","what":"teal.modules.clinical 0.8.0","title":"teal.modules.clinical 0.8.0","text":"Optionally show KM CoxPH table tm_g_km.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/news/index.html","id":"tealmodulesclinical-070","dir":"Changelog","previous_headings":"","what":"teal.modules.clinical 0.7.0","title":"teal.modules.clinical 0.7.0","text":"Use teal.devel.","code":""},{"path":"https://insightsengineering.github.io/teal.modules.clinical/main/news/index.html","id":"tealmodulesclinical-060","dir":"Changelog","previous_headings":"","what":"teal.modules.clinical 0.6.0","title":"teal.modules.clinical 0.6.0","text":"Package renamed teal.modules.clinical. Rename tm_t_summarize_variables tm_t_summary. Usage teal::choices_selected() function instead *_var *_var_choices arguments.","code":""}]

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_g_ipp.R
\name{tm_g_ipp}
\alias{tm_g_ipp}
\title{Teal Module: Individual Patient Plot}
\usage{
tm_g_ipp(
  label,
  dataname,
  parentname = ifelse(inherits(arm_var, "data_extract_spec"),
    teal.devel::datanames_input(arm_var), "ADSL"),
  arm_var,
  paramcd,
  id_var = choices_selected(variable_choices(dataname, "USUBJID"), "USUBJID", fixed =
    TRUE),
  visit_var = choices_selected(variable_choices(dataname, "AVISIT"), "AVISIT", fixed =
    TRUE),
  aval_var = choices_selected(variable_choices(dataname, "AVAL"), "AVAL", fixed = TRUE),
  avalu_var = choices_selected(variable_choices(dataname, "AVALU"), "AVALU", fixed =
    TRUE),
  base_var = choices_selected(variable_choices(dataname, "BASE"), "BASE", fixed = TRUE),
  add_baseline_hline = FALSE,
  separate_by_obs = FALSE,
  plot_height = c(1200L, 400L, 5000L),
  plot_width = NULL,
  pre_output = NULL,
  post_output = NULL,
  ggplot2_args = teal.devel::ggplot2_args()
)
}
\arguments{
\item{label}{(\code{character})\cr
menu item label of the module in the teal app.}

\item{dataname}{(\code{character})\cr
analysis data used in teal module.}

\item{parentname}{(\code{character})\cr
parent analysis data used in teal module, usually this refers to \code{ADSL}.}

\item{arm_var}{(\code{\link[teal:choices_selected]{teal::choices_selected()}} or \code{\link[teal:data_extract_spec]{teal::data_extract_spec()}})\cr
object with all available choices
and preselected option for variable values that can be used as \code{arm_var}.}

\item{paramcd}{(\code{character})\cr
variable value designating the studied parameter.}

\item{id_var}{(\code{character})\cr
the variable name for subject id.}

\item{visit_var}{(\code{string})\cr variable name designating the visit timepoint variable.}

\item{aval_var}{(\code{character})\cr
name of the analysis variable.}

\item{avalu_var}{(\code{\link[teal:choices_selected]{teal::choices_selected()}} or \code{\link[teal:data_extract_spec]{teal::data_extract_spec()}})\cr
object with all available choices
and preselected option for variable values that can be used as \code{avalu_var}.}

\item{base_var}{(\code{\link[teal:choices_selected]{teal::choices_selected()}} or \code{\link[teal:data_extract_spec]{teal::data_extract_spec()}})\cr
object with all available choices
and preselected option for variable values that can be used as \code{base_var}.}

\item{add_baseline_hline}{(\code{flag})\cr adds horizontal line at baseline y-value on plot}

\item{separate_by_obs}{(\code{flag})\cr creates multi panel plots when TRUE}

\item{plot_height}{optional, (\code{numeric})\cr
a vector of length three with \code{c(value, min, max)}. Specifies the height of
the main plot and renders a slider on the plot to interactively adjust the plot
height.}

\item{plot_width}{optional, (\code{numeric})\cr
a vector of length three with \code{c(value, min, max)}. Specifies the width of
the main plot and renders a slider on the plot to interactively adjust the plot
width.}

\item{pre_output}{optional, (\code{shiny.tag})\cr
with text placed before the output to put the output into context.
For example a title.}

\item{post_output}{optional, (\code{shiny.tag})\cr
with text placed after the output to put the output into context. For example
the \code{\link[shiny:helpText]{shiny::helpText()}} elements are useful.}

\item{ggplot2_args}{optional, (\code{ggplot2_args})\cr
object created by \code{\link[teal.devel:ggplot2_args]{teal.devel::ggplot2_args()}} with settings for the module plot.
For this module, this argument will only accept \code{labs} arguments such as: \code{title}, \code{subtitle}, \code{x}, \code{y}.
\code{theme} arguments will be not taken into account. The argument is merged with option \code{teal.ggplot2_args} and
with default module arguments (hard coded in the module body).\cr For more details, see the help vignette:\cr
\code{vignette("Custom ggplot2_args arguments module", package = "teal.devel")}.}
}
\description{
This teal module produces grid style Individual patient plot(s) that show
trends in parameter values over time for each patient using data with
ADaM structure.
}
\examples{
library(dplyr)
library(scda)

adsl <- synthetic_cdisc_data("latest")$adsl \%>\% slice(1:20)
adlb <- synthetic_cdisc_data("latest")$adlb
adlb <- adlb \%>\% filter(USUBJID \%in\% adsl$USUBJID)

adsl <- df_explicit_na(adsl)
adlb <- df_explicit_na(adlb) \%>\%
  dplyr::filter(AVISIT != "SCREENING")

app <- init(
  data = cdisc_data(
    cdisc_dataset(
      "ADSL",
      adsl,
      code = "ADSL <- synthetic_cdisc_data('latest')$adsl \%>\% slice(1:20)
      ADSL <- df_explicit_na(ADSL)"
    ),
    cdisc_dataset(
      "ADLB",
      adlb,
      code = "ADLB <- synthetic_cdisc_data('latest')$adlb
      ADLB <- df_explicit_na(ADLB) \%>\%
      dplyr::filter(AVISIT != 'SCREENING')"
    )
  ),
  modules = root_modules(
    tm_g_ipp(
      label = "Individual Patient Plot",
      dataname = "ADLB",
      arm_var = choices_selected(
        value_choices(adlb, "ARMCD"),
        "ARM A"
      ),
      paramcd = choices_selected(
        value_choices(adlb, "PARAMCD"),
        "ALT"
      ),
      aval_var = choices_selected(
        variable_choices(adlb, c("AVAL", "CHG")),
        "AVAL"
      ),
      avalu_var = choices_selected(
        variable_choices(adlb, c("AVALU")),
        "AVALU",
        fixed = TRUE
      ),
      id_var = choices_selected(
        variable_choices(adlb, c("USUBJID")),
        "USUBJID",
        fixed = TRUE
      ),
      visit_var = choices_selected(
        variable_choices(adlb, c("AVISIT")),
        "AVISIT"
      ),
      base_var = choices_selected(
        variable_choices(adlb, c("BASE")),
        "BASE",
        fixed = TRUE
      ),
      add_baseline_hline = FALSE,
      separate_by_obs = FALSE
    )
  )
)
\dontrun{
shinyApp(ui = app$ui, server = app$server)
}

}

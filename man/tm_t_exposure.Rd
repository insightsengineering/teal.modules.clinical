% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_t_exposure.R
\name{tm_t_exposure}
\alias{tm_t_exposure}
\title{teal Module: Exposure Table for Risk management plan}
\usage{
tm_t_exposure(
  label,
  dataname,
  parentname = ifelse(inherits(col_by_var, "data_extract_spec"),
    teal.transform::datanames_input(col_by_var), "ADSL"),
  row_by_var,
  col_by_var,
  paramcd = teal.transform::choices_selected(choices =
    teal.transform::value_choices(dataname, "PARAMCD", "PARAM"), selected = "TDURD"),
  paramcd_label = "PARAM",
  id_var = teal.transform::choices_selected(teal.transform::variable_choices(dataname,
    subset = "USUBJID"), selected = "USUBJID", fixed = TRUE),
  parcat,
  aval_var = teal.transform::choices_selected(teal.transform::variable_choices(dataname,
    subset = "AVAL"), selected = "AVAL", fixed = TRUE),
  avalu_var = teal.transform::choices_selected(teal.transform::variable_choices(dataname,
    subset = "AVALU"), selected = "AVALU", fixed = TRUE),
  add_total,
  total_label = default_total_label(),
  add_total_row = TRUE,
  total_row_label = "Total number of patients and patient time*",
  na_level = default_na_str(),
  pre_output = NULL,
  post_output = NULL,
  basic_table_args = teal.widgets::basic_table_args()
)
}
\arguments{
\item{label}{(\code{character})\cr menu item label of the module in the teal app.}

\item{dataname}{(\code{character})\cr analysis data used in teal module.}

\item{parentname}{(\code{character})\cr parent analysis data used in teal module, usually this refers to \code{ADSL}.}

\item{row_by_var}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr
object with all available choices and preselected option for
variable names that can be used to split rows.}

\item{col_by_var}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr
object with all available choices and preselected option for
variable names that can be used to split columns.}

\item{paramcd}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr object with all
available choices and preselected option for the parameter code variable from \code{dataname}.}

\item{paramcd_label}{(\code{character})\cr the column from the dataset where the value will be used to
label the argument \code{paramcd}.}

\item{id_var}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr object specifying
the variable name for subject id.}

\item{parcat}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr
object with all available choices and preselected option for
parameter category values.}

\item{aval_var}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr object with
all available choices and pre-selected option for the analysis variable.}

\item{avalu_var}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr object with
all available choices and preselected option for the analysis unit variable.}

\item{add_total}{(\code{logical})\cr whether to include column with total number of patients.}

\item{total_label}{(\code{string})\cr string to display as total column/row label if column/row is
enabled (see \code{add_total}). Defaults to \code{"All Patients"}. To set a new default \code{total_label} to
apply in all modules, run \code{set_default_total_label("new_default")}.}

\item{add_total_row}{(\code{flag})\cr whether a "total" level should be added after the others which includes all the
levels that constitute the split. A custom label can be set for this level via the \code{total_row_label} argument.}

\item{total_row_label}{(\code{character})\cr string to display as total row label if row is
enabled (see \code{add_total_row}).}

\item{na_level}{(\code{string})\cr used to replace all \code{NA} or empty values
in character or factor variables in the data. Defaults to \code{"<Missing>"}. To set a
default \code{na_level} to apply in all modules, run \code{set_default_na_str("new_default")}.}

\item{pre_output}{(\code{shiny.tag}) optional,\cr with text placed before the output to put the output into context.
For example a title.}

\item{post_output}{(\code{shiny.tag}) optional,\cr with text placed after the output to put the output into context.
For example the \code{\link[shiny:helpText]{shiny::helpText()}} elements are useful.}

\item{basic_table_args}{(\code{basic_table_args}) optional\cr object created by \code{\link[teal.widgets:basic_table_args]{teal.widgets::basic_table_args()}}
with settings for the module table. The argument is merged with option \code{teal.basic_table_args} and with default
module arguments (hard coded in the module body).
For more details, see the vignette: \code{vignette("custom-basic-table-arguments", package = "teal.widgets")}.}
}
\value{
a \code{teal_module} object.
}
\description{
The module produces an exposure table for risk management plan.
}
\examples{
library(dplyr)

data <- teal_data()
data <- within(data, {
  ADSL <- tmc_ex_adsl
  ADEX <- tmc_ex_adex

  set.seed(1, kind = "Mersenne-Twister")
  labels <- col_labels(ADEX, fill = FALSE)
  ADEX <- ADEX \%>\%
    distinct(USUBJID, .keep_all = TRUE) \%>\%
    mutate(
      PARAMCD = "TDURD",
      PARAM = "Overall duration (days)",
      AVAL = sample(x = seq(1, 200), size = n(), replace = TRUE),
      AVALU = "Days"
    ) \%>\%
    bind_rows(ADEX)
  col_labels(ADEX) <- labels
})
datanames(data) <- c("ADSL", "ADEX")
join_keys(data) <- default_cdisc_join_keys[datanames(data)]

app <- init(
  data = data,
  modules = modules(
    tm_t_exposure(
      label = "Duration of Exposure Table",
      dataname = "ADEX",
      paramcd = choices_selected(
        choices = value_choices(data[["ADEX"]], "PARAMCD", "PARAM"),
        selected = "TDURD"
      ),
      col_by_var = choices_selected(
        choices = variable_choices(data[["ADEX"]], subset = c("SEX", "ARM")),
        selected = "SEX"
      ),
      row_by_var = choices_selected(
        choices = variable_choices(data[["ADEX"]], subset = c("RACE", "REGION1", "STRATA1", "SEX")),
        selected = "RACE"
      ),
      parcat = choices_selected(
        choices = value_choices(data[["ADEX"]], "PARCAT2"),
        selected = "Drug A"
      ),
      add_total = FALSE
    )
  ),
  filter = teal_slices(teal_slice("ADSL", "SAFFL", selected = "Y"))
)
if (interactive()) {
  shinyApp(app$ui, app$server)
}

}
\seealso{
The \href{https://insightsengineering.github.io/tlg-catalog/stable/}{TLG Catalog} where additional example
apps implementing this module can be found.
}
\section{Examples in Shinylive}{
\describe{
  \item{example-1}{
    \href{https://shinylive.io/r/app/#code=NobwRAdghgtgpmAXGKAHVA6ASmANGAYwHsIAXOMpMAGwEsAjAJykYE8AKcqajGIgEwCu1OAGcMBOhFoFuASgA60snGYFStAG5wABAB4AtDoBmgiOtol2cnQBUsAVQCiSpXSYsO-VNVaNFEEr8UKRQ+kZc1AD6waHWQSFhhjoA7rSkABa0EOyxULg6IEo6OgCCACIAygAy4TqkMARRcAAeUVD8otTFZeVOABp1DU2t7fytrhAlonCkGDNw-OwAjAUA1tn8OgC8OgpgALKqMxAQcAa2aaLkjPsBJdRQ9HDUonXE0Y-Pr+wVAwXGWjUag7HQAMVK1UqTnuvQGdT+gwApAA+JE9Er8WjXbLqdgOSoOABCACkAJLlAoYNZwOCodrA0H2Zw2VHoqYlHQwQShcjsDGcgAKpSwpQOAGFyqD9rZyg4sOV9rgBSVhaKDtKwAB5bTMRlCZgaEg6XJQViiRR4FVlABqkNBolgPjg7BaDrgAEcVgUAEwABj9cgKoloAC9dLsckGdIw6Y8CBG7I4YcqOZzbZCHJrymbRPsBay0QL6JsoowiClRL8+v1YR8ol8XlXETZko3XkoAL4BPLQeBVvKtowEflgCo1JV7Mc1u5KABWRGyURp5tNoSHOnGxigwlIUQIWNETQXS5XomAvdgYjXUDkAF1JmhUHVsul+Ry8qC8qmSnwhCI3l2P9hGvAUGiiPdWlQIhREEWN33TB4nhebM4JCSwpiIYwdCcFpoNg2M7CeEQlWtS94E1RFSLTTlUBYWAD1BAgMkXBNRCiGYRHURYEMQkpmNYsRQU0bhBDgfcWJka88mAYB9iosA7zvAp9jVMVJUnVSRTFO4fz4nROLgbitl2GU5QVfMaJKINrXrehWCiETGCYyS2I4l4jPIJZrX41yhN2JzaGI8SBKkgdElk+SZ0U5SDMEegZlIJjR2hfpNLHLADjuGyrM5QzjM1VLLL4nK+PLFIonsxyWBcwT2PyrzeL40K2OElggvoEQJLqm9IunAZ9iU4N4sS5L9lFcUXDwKcsCcABxMktQAOWWdLKnsUpbFKVbpv2IqwDkUr9IaxZNQmqbrSO9M6MYWQkt2FqxHcrjGp8nRHsAnQROoMTurC3q5P6tKYpUsA1XFTafV0t6TpMqdykYQQAHMymKxCrs5Dp+AgohQhBXYIShFwaNhI7AWoG5QUiDi6DYzg4G4GmpNHcdqjW0owTBNnpthzUAE1sqUAJaGw9hshuKALG0awbCKDlRCyCBWFKdB2CfAASQRaAKDWZkYXUAk7JQwE7O8gA}{Open in Shinylive}
    \if{html}{\out{<script type="text/javascript">$(function() {  var if_pkgdown = [...document.scripts].filter(x => x.src.includes("pkgdown.js")).length > 0;  if (if_pkgdown) {    $("iframe.iframe_shinylive").css("width", "150\%");  }});</script>}}
    \if{html}{\out{<iframe class="iframe_shinylive" src="https://shinylive.io/r/app/#code=NobwRAdghgtgpmAXGKAHVA6ASmANGAYwHsIAXOMpMAGwEsAjAJykYE8AKcqajGIgEwCu1OAGcMBOhFoFuASgA60snGYFStAG5wABAB4AtDoBmgiOtol2cnQBUsAVQCiSpXSYsO-VNVaNFEEr8UKRQ+kZc1AD6waHWQSFhhjoA7rSkABa0EOyxULg6IEo6OgCCACIAygAy4TqkMARRcAAeUVD8otTFZeVOABp1DU2t7fytrhAlonCkGDNw-OwAjAUA1tn8OgC8OgpgALKqMxAQcAa2aaLkjPsBJdRQ9HDUonXE0Y-Pr+wVAwXGWjUag7HQAMVK1UqTnuvQGdT+gwApAA+JE9Er8WjXbLqdgOSoOABCACkAJLlAoYNZwOCodrA0H2Zw2VHoqYlHQwQShcjsDGcgAKpSwpQOAGFyqD9rZyg4sOV9rgBSVhaKDtKwAB5bTMRlCZgaEg6XJQViiRR4FVlABqkNBolgPjg7BaDrgAEcVgUAEwABj9cgKoloAC9dLsckGdIw6Y8CBG7I4YcqOZzbZCHJrymbRPsBay0QL6JsoowiClRL8+v1YR8ol8XlXETZko3XkoAL4BPLQeBVvKtowEflgCo1JV7Mc1u5KABWRGyURp5tNoSHOnGxigwlIUQIWNETQXS5XomAvdgYjXUDkAF1JmhUHVsul+Ry8qC8qmSnwhCI3l2P9hGvAUGiiPdWlQIhREEWN33TB4nhebM4JCSwpiIYwdCcFpoNg2M7CeEQlWtS94E1RFSLTTlUBYWAD1BAgMkXBNRCiGYRHURYEMQkpmNYsRQU0bhBDgfcWJka88mAYB9iosA7zvAp9jVMVJUnVSRTFO4fz4nROLgbitl2GU5QVfMaJKINrXrehWCiETGCYyS2I4l4jPIJZrX41yhN2JzaGI8SBKkgdElk+SZ0U5SDMEegZlIJjR2hfpNLHLADjuGyrM5QzjM1VLLL4nK+PLFIonsxyWBcwT2PyrzeL40K2OElggvoEQJLqm9IunAZ9iU4N4sS5L9lFcUXDwKcsCcABxMktQAOWWdLKnsUpbFKVbpv2IqwDkUr9IaxZNQmqbrSO9M6MYWQkt2FqxHcrjGp8nRHsAnQROoMTurC3q5P6tKYpUsA1XFTafV0t6TpMqdykYQQAHMymKxCrs5Dp+AgohQhBXYIShFwaNhI7AWoG5QUiDi6DYzg4G4GmpNHcdqjW0owTBNnpthzUAE1sqUAJaGw9hshuKALG0awbCKDlRCyCBWFKdB2CfAASQRaAKDWZkYXUAk7JQwE7O8gA" style="height: 800px; width: 100\%; border: 1px solid rgba(0,0,0,0.175); border-radius: .375rem; position: relative; z-index: 1"></iframe>}}
  }
}
}


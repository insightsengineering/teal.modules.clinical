% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_t_events_gtsummary.R
\name{tm_t_events_gtsummary}
\alias{tm_t_events_gtsummary}
\title{teal Module: Adverse Events Summary}
\usage{
tm_t_events_gtsummary(
  label,
  dataname,
  parentname = ifelse(inherits(arm_var, "data_extract_spec"),
    teal.transform::datanames_input(arm_var), "ADSL"),
  arm_var,
  flag_var_anl = NULL,
  flag_var_aesi = NULL,
  dthfl_var =
    teal.transform::choices_selected(teal.transform::variable_choices(parentname,
    "DTHFL"), "DTHFL", fixed = TRUE),
  dcsreas_var = teal.transform::choices_selected(teal.transform::variable_choices("ADSL",
    "AEWITHFL"), "AEWITHFL", fixed = TRUE),
  llt = teal.transform::choices_selected(teal.transform::variable_choices(dataname,
    "AEDECOD"), "AEDECOD", fixed = TRUE),
  aeseq_var = teal.transform::choices_selected(teal.transform::variable_choices(dataname,
    "AESEQ"), "AESEQ", fixed = TRUE),
  add_total = TRUE,
  total_label = default_total_label(),
  na_level = tern::default_na_str(),
  count_dth = TRUE,
  count_wd = TRUE,
  count_subj = TRUE,
  count_pt = TRUE,
  count_events = TRUE,
  pre_output = NULL,
  post_output = NULL,
  basic_table_args = teal.widgets::basic_table_args(),
  transformators = list(),
  decorators = list()
)
}
\arguments{
\item{label}{(\code{character})\cr menu item label of the module in the teal app.}

\item{dataname}{(\code{character})\cr analysis data used in teal module.}

\item{parentname}{(\code{character})\cr parent analysis data used in teal module, usually this refers to \code{ADSL}.}

\item{arm_var}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr object with all
available choices and preselected option for variable names that can be used as \code{arm_var}.
It defines the grouping variable(s) in the results table.
If there are two elements selected for \code{arm_var},
second variable will be nested under the first variable.}

\item{flag_var_anl}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}} or \code{NULL})\cr
vector with names of flag variables from \code{dataset} used to count adverse event sub-groups (e.g. Serious events,
Related events, etc.). Variable labels are used as table row names if they exist.}

\item{flag_var_aesi}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}} or \code{NULL})\cr
vector with names of flag variables from \code{dataset} used to count adverse event special interest groups. All flag
variables must be of type \code{logical}. Variable labels are used as table row names if they exist.}

\item{dthfl_var}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr object
with all available choices and preselected option for variable names that can be used as death flag variable.
Records with \code{"Y"} are summarized in the table row for "Total number of deaths".}

\item{dcsreas_var}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr object
with all available choices and preselected option for variable names that can be used as study discontinuation
reason variable. Records with \code{"ADVERSE EVENTS"} are summarized in the table row for
"Total number of patients withdrawn from study due to an AE".}

\item{llt}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr name of the variable
with low level term for events.}

\item{aeseq_var}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr variable for
adverse events sequence number from \code{dataset}. Used for counting total number of events.}

\item{add_total}{(\code{logical})\cr whether to include column with total number of patients.}

\item{total_label}{(\code{string})\cr string to display as total column/row label if column/row is
enabled (see \code{add_total}). Defaults to \code{"All Patients"}. To set a new default \code{total_label} to
apply in all modules, run \code{set_default_total_label("new_default")}.}

\item{na_level}{(\code{string})\cr used to replace all \code{NA} or empty values
in character or factor variables in the data. Defaults to \code{"<Missing>"}. To set a
default \code{na_level} to apply in all modules, run \code{set_default_na_str("new_default")}.}

\item{count_dth}{(\code{logical})\cr whether to show count of total deaths (based on \code{dthfl_var}). Defaults to \code{TRUE}.}

\item{count_wd}{(\code{logical})\cr whether to show count of patients withdrawn from study due to an adverse event
(based on \code{dcsreas_var}). Defaults to \code{TRUE}.}

\item{count_subj}{(\code{logical})\cr whether to show count of unique subjects (based on \code{USUBJID}). Only applies if
event flag variables are provided.}

\item{count_pt}{(\code{logical})\cr whether to show count of unique preferred terms (based on \code{llt}). Only applies if
event flag variables are provided.}

\item{count_events}{(\code{logical})\cr whether to show count of events (based on \code{aeseq_var}). Only applies if event
flag variables are provided.}

\item{pre_output}{(\code{shiny.tag}) optional,\cr with text placed before the output to put the output into context.
For example a title.}

\item{post_output}{(\code{shiny.tag}) optional,\cr with text placed after the output to put the output into context.
For example the \code{\link[shiny:helpText]{shiny::helpText()}} elements are useful.}

\item{basic_table_args}{(\code{basic_table_args}) optional\cr object created by \code{\link[teal.widgets:basic_table_args]{teal.widgets::basic_table_args()}}
with settings for the module table. The argument is merged with option \code{teal.basic_table_args} and with default
module arguments (hard coded in the module body).
For more details, see the vignette: \code{vignette("custom-basic-table-arguments", package = "teal.widgets")}.}

\item{transformators}{(\code{list} of \code{teal_transform_module}) that will be applied to transform module's data input.
To learn more check \code{vignette("transform-input-data", package = "teal")}.}

\item{decorators}{\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}
(named \code{list} of lists of \code{teal_transform_module}) optional,
decorator for tables or plots included in the module output reported.
The decorators are applied to the respective output objects.

See section "Decorating Module" below for more details.}
}
\value{
a \code{teal_module} object.
}
\description{
This module produces an adverse events summary table.
}
\section{Decorating Module}{


This module generates the following objects, which can be modified in place using decorators:
\itemize{
\item \code{table} (\code{TableTree} as created from \code{rtables::build_table})
}

A Decorator is applied to the specific output using a named list of \code{teal_transform_module} objects.
The name of this list corresponds to the name of the output to which the decorator is applied.
See code snippet below:

\if{html}{\out{<div class="sourceCode">}}\preformatted{tm_t_events_summary(
   ..., # arguments for module
   decorators = list(
     table = teal_transform_module(...) # applied only to `table` output
   )
)
}\if{html}{\out{</div>}}

For additional details and examples of decorators, refer to the vignette
\code{vignette("decorate-module-output", package = "teal.modules.clinical")}.

To learn more please refer to the vignette
\code{vignette("transform-module-output", package = "teal")} or the \code{\link[teal:teal_transform_module]{teal::teal_transform_module()}} documentation.
}

\examples{
library(dplyr)

data <- within(teal_data(), {
  ADSL <- teal.modules.clinical::tmc_ex_adsl \%>\%
    mutate(
      DTHFL = case_when(
        !is.na(DTHDT) ~ "Y",
        TRUE ~ ""
      ) \%>\% with_label("Subject Death Flag")
    )
  ADAE <- teal.modules.clinical::tmc_ex_adae

})
join_keys(data) <- default_cdisc_join_keys[names(data)]

app <- init(
  data = data,
  modules = modules(
    tm_t_events_gtsummary(
      label = "Adverse Events Summary",
      dataname = "ADAE",
      arm_var = choices_selected(
        choices = variable_choices("ADSL", c("ARM", "ARMCD")),
        selected = "ARM"
      ),
      flag_var_anl = choices_selected(
        choices = variable_choices("ADAE", data[[".ae_anl_vars"]]),
        selected = data[[".ae_anl_vars"]][1],
        keep_order = TRUE,
        fixed = FALSE
      ),
      flag_var_aesi = choices_selected(
        choices = variable_choices("ADAE", data[[".aesi_vars"]]),
        selected = data[[".aesi_vars"]][1],
        keep_order = TRUE,
        fixed = FALSE
      ),
      add_total = TRUE
    )
  )
)
if (interactive()) {
  shinyApp(app$ui, app$server)
}

}
\seealso{
The \href{https://insightsengineering.github.io/tlg-catalog/stable/}{TLG Catalog} where additional example
apps implementing this module can be found.
}
\section{Examples in Shinylive}{
\describe{
  \item{example-1}{
    \href{https://shinylive.io/r/app/#code=NobwRAdghgtgpmAXGKAHVA6ASmANGAYwHsIAXOMpMAGwEsAjAJykYE8AKcqajGIgEwCu1OAGcMBOhFoFuASgA60snGYFStAG5wABAB4AtDoBmgiOtol2cnQBUsAVQCiSpXSYsO-VNVaNFEEr8UKRQ+kYA7rSkABa0EJxw3AD6waHWuDogSjo6AIIAIgDKADLhOlw8fEIi4pLxMtyIiKQwBMlwAB7JUPyi1DoApAB8gzm5OjCCoeTs4xM6BbYAEgBiZQC8OrKicMkRMRRzEAsLAIS04tDsS8tLNgB+OgpgAJovuPOn9s46Ty8Ak6nGwjQY6KKxZLUKD0ODUOZgIqCegAKzg6kWSViOlW0IA5i8AgsifkCnknOVKrwBMIxBIpI1qM1Wu0uj1gnBXBAAL4BFFEeLJADWcFYonYaSgNkMOn4cGMUGEpGSBH4l3a-MFIrFwGg8HFkrkAF0uWhUOUGqRjrlJTotpLPkDqrTRHbJjTataJq1ksq4NoyKJknjSKJBDAYJ4vQtobCBlsXnl+NpGLsdE4A6GdEiI54Pl8bSEoHrdAmwIVyfmgQsWDBkpoWG6CDEBQQxMldiJ1HB+NHTs3W2I3Q3GLQYSIVS2ZGIEYVSh9trOsABZBeJlcAYQKhLkjtOE076PI-Dd69XYALOl3l+M+PrLB6EHj2ynbaDh+7vcvuQH09dWxHMd6AnX831nMkXDwWUi2AYAXgwKA9mLah71TF4jSNa9q1OD9jzdSVYPgxDHxQkdRHQo1gAARiNPd9x0EU4FQZIiEYOVGDdH4nDo-djFoToezdVY8hKIoXGw3IsN4u8Rx6MRaCbV921wns+wWUChwAlggJApTxUTCCFwIuCwAQ+TUPIsAMKk+iVJPe0YJMszRFoCyKOo2jvwYuAmJYtjVE4xxuK8viBPsnERLEy8bJrfh+F9IhQmfLivhJAIAloYwdHYeJyDUDRtGsGxsiBUQ4ggVg8nQdgzQAEkEWhMjq3ZGBTAJuSUMBuSNIA}{Open in Shinylive}
    \if{html}{\out{<iframe class="iframe_shinylive" src="https://shinylive.io/r/app/#code=NobwRAdghgtgpmAXGKAHVA6ASmANGAYwHsIAXOMpMAGwEsAjAJykYE8AKcqajGIgEwCu1OAGcMBOhFoFuASgA60snGYFStAG5wABAB4AtDoBmgiOtol2cnQBUsAVQCiSpXSYsO-VNVaNFEEr8UKRQ+kYA7rSkABa0EJxw3AD6waHWuDogSjo6AIIAIgDKADLhOlw8fEIi4pLxMtyIiKQwBMlwAB7JUPyi1DoApAB8gzm5OjCCoeTs4xM6BbYAEgBiZQC8OrKicMkRMRRzEAsLAIS04tDsS8tLNgB+OgpgAJovuPOn9s46Ty8Ak6nGwjQY6KKxZLUKD0ODUOZgIqCegAKzg6kWSViOlW0IA5i8AgsifkCnknOVKrwBMIxBIpI1qM1Wu0uj1gnBXBAAL4BFFEeLJADWcFYonYaSgNkMOn4cGMUGEpGSBH4l3a-MFIrFwGg8HFkrkAF0uWhUOUGqRjrlJTotpLPkDqrTRHbJjTataJq1ksq4NoyKJknjSKJBDAYJ4vQtobCBlsXnl+NpGLsdE4A6GdEiI54Pl8bSEoHrdAmwIVyfmgQsWDBkpoWG6CDEBQQxMldiJ1HB+NHTs3W2I3Q3GLQYSIVS2ZGIEYVSh9trOsABZBeJlcAYQKhLkjtOE076PI-Dd69XYALOl3l+M+PrLB6EHj2ynbaDh+7vcvuQH09dWxHMd6AnX831nMkXDwWUi2AYAXgwKA9mLah71TF4jSNa9q1OD9jzdSVYPgxDHxQkdRHQo1gAARiNPd9x0EU4FQZIiEYOVGDdH4nDo-djFoToezdVY8hKIoXGw3IsN4u8Rx6MRaCbV921wns+wWUChwAlggJApTxUTCCFwIuCwAQ+TUPIsAMKk+iVJPe0YJMszRFoCyKOo2jvwYuAmJYtjVE4xxuK8viBPsnERLEy8bJrfh+F9IhQmfLivhJAIAloYwdHYeJyDUDRtGsGxsiBUQ4ggVg8nQdgzQAEkEWhMjq3ZGBTAJuSUMBuSNIA" style="height: 800px; width: 100vw; max-width: 1400px; border: 1px solid rgba(0,0,0,0.175); border-radius: .375rem; position: absolute; left: 50\%; margin-top: 30px; transform: translateX(-50\%); z-index: 1"></iframe>}}
    \if{html}{\out{<a style='height: 800px; display: block;'></a>}}
  }
}
}


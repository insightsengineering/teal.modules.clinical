% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_g_pp_vitals.R
\name{tm_g_pp_vitals}
\alias{tm_g_pp_vitals}
\title{teal Module: Patient Profile Vitals Plot}
\usage{
tm_g_pp_vitals(
  label,
  dataname = "ADVS",
  parentname = "ADSL",
  patient_col = "USUBJID",
  paramcd = NULL,
  aval = lifecycle::deprecated(),
  aval_var = NULL,
  xaxis = NULL,
  font_size = c(12L, 12L, 25L),
  plot_height = c(700L, 200L, 2000L),
  plot_width = NULL,
  pre_output = NULL,
  post_output = NULL,
  ggplot2_args = teal.widgets::ggplot2_args()
)
}
\arguments{
\item{label}{(\code{character})\cr menu item label of the module in the teal app.}

\item{dataname}{(\code{character})\cr analysis data used in teal module.}

\item{parentname}{(\code{character})\cr parent analysis data used in teal module, usually this refers to \code{ADSL}.}

\item{patient_col}{(\code{character})\cr name of patient ID variable.}

\item{paramcd}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr object with all
available choices and preselected option for the parameter code variable from \code{dataname}.}

\item{aval}{\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#deprecated}{\figure{lifecycle-deprecated.svg}{options: alt='[Deprecated]'}}}{\strong{[Deprecated]}} Please use the \code{aval_var} argument instead.}

\item{aval_var}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr object with
all available choices and pre-selected option for the analysis variable.}

\item{xaxis}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr object with all
available choices and preselected option for the time variable from \code{dataname} to be put on the plot x-axis.}

\item{font_size}{(\code{numeric})\cr numeric vector of length 3 of current, minimum and maximum font size values.}

\item{plot_height}{(\code{numeric}) optional\cr vector of length three with \code{c(value, min, max)}. Specifies the
height of the main plot and renders a slider on the plot to interactively adjust the plot height.}

\item{plot_width}{(\code{numeric}) optional\cr vector of length three with \code{c(value, min, max)}. Specifies the width
of the main plot and renders a slider on the plot to interactively adjust the plot width.}

\item{pre_output}{(\code{shiny.tag}) optional,\cr with text placed before the output to put the output into context.
For example a title.}

\item{post_output}{(\code{shiny.tag}) optional,\cr with text placed after the output to put the output into context.
For example the \code{\link[shiny:helpText]{shiny::helpText()}} elements are useful.}

\item{ggplot2_args}{(\code{ggplot2_args}) optional\cr object created by \code{\link[teal.widgets:ggplot2_args]{teal.widgets::ggplot2_args()}} with settings
for the module plot. The argument is merged with option \code{teal.ggplot2_args} and with default module arguments
(hard coded in the module body).
For more details, see the vignette: \code{vignette("custom-ggplot2-arguments", package = "teal.widgets")}.}
}
\value{
a \code{teal_module} object.
}
\description{
This module produces a patient profile vitals \code{\link[ggplot2:ggplot]{ggplot2::ggplot()}} type plot using ADaM datasets.
}
\details{
This plot supports horizontal lines for the following 6 \code{PARAMCD} levels when they are present in \code{dataname}:
\code{"SYSBP"}, \code{"DIABP"}, \code{"TEMP"}, \code{"RESP"}, \code{"OXYSAT"}.
}
\examples{
library(nestcolor)

data <- teal_data()
data <- within(data, {
  ADSL <- tmc_ex_adsl
  ADVS <- tmc_ex_advs
})
datanames(data) <- c("ADSL", "ADVS")
join_keys(data) <- default_cdisc_join_keys[datanames(data)]

ADSL <- data[["ADSL"]]
ADVS <- data[["ADVS"]]

app <- init(
  data = data,
  modules = modules(
    tm_g_pp_vitals(
      label = "Vitals",
      dataname = "ADVS",
      parentname = "ADSL",
      patient_col = "USUBJID",
      plot_height = c(600L, 200L, 2000L),
      paramcd = choices_selected(
        choices = variable_choices(ADVS, "PARAMCD"),
        selected = "PARAMCD"
      ),
      xaxis = choices_selected(
        choices = variable_choices(ADVS, "ADY"),
        selected = "ADY"
      ),
      aval_var = choices_selected(
        choices = variable_choices(ADVS, "AVAL"),
        selected = "AVAL"
      )
    )
  )
)
if (interactive()) {
  shinyApp(app$ui, app$server)
}

}
\section{Examples in Shinylive}{
\describe{
  \item{example-1}{
    \href{https://shinylive.io/r/app/#code=NobwRAdghgtgpmAXGKAHVA6ASmANGAYwHsIAXOMpMAGwEsAjAJykYE8AKcqajGIgEwCu1OAGcMBOhFoFuASgA60snGYFStAG5wABAB4AtDoBmgiOtol2cnQBUsAVQCiSpXSYsOEMaWLUijIoQSvxQpFD6RlzUAPqh4dYhYRGGOgDutKQAFrQQ7PFQuDogSjo6AIIAIgDKADKROqQwBDFwAB4xUPyi1KUVlQBq1Q1NLe2d-JqiSgC+QQXQ8KL5yTapBOwKYFV1W0VbVUNbQQBWRLkxANZwrMsFa0b8cMZQwqQxBPy0oi1nF9e3YALWBiFbhOQAXVcEB29VSBWAwAONVqWwhUJhg2G8OSiORRzA6OhaFQDVymU2EDKBR0AF4dAVcH0+EIRKI6ToWcJQX0yk0YgBzGLoGKaTLcZa8so6ahQehwagcrYDcXUaZ4KXU5KLXT0-HVPaanSoFgUUg6pXbFGGqnSsomjRmj5ERV6sAOaoOABCACkAJKVG12+3+d5ZOC0AVZUgcjYANgADAnakUAExJlM6dMZuRM212k3MZr8WNZc4EMQxUQKuDqOD8SnB6UEMsyMQczQsWhykQfVsV5aHar7MAABXKWHKAFkAMKBsC5o1lasiOslt3jyez+dGxf56VtKBtb6l8uVle18gNpc6Ftn9n0zuMbv0Xt3tuDrEjqoATWOeabZcazXS1fy2XcAODKBO1iJ9Tw-KtgKvRtAPfAcOy7Hs4D7e92CHb8BnKVEF0gpsLxAt1ykI4jdylIIyiCIJaGMHR2Fycg1A0bRrBsEpbVEHIIFYcp0HYEkABJBFoIoJOrRhtECWYlDAGYISAA}{Open in Shinylive}
    \if{html}{\out{<script type="text/javascript">$(function() {  var if_pkgdown = [...document.scripts].filter(x => x.src.includes("pkgdown.js")).length > 0;  if (if_pkgdown) {    $("iframe.iframe_shinylive").css("width", "150\%");  }});</script>}}
    \if{html}{\out{<iframe class="iframe_shinylive" src="https://shinylive.io/r/app/#code=NobwRAdghgtgpmAXGKAHVA6ASmANGAYwHsIAXOMpMAGwEsAjAJykYE8AKcqajGIgEwCu1OAGcMBOhFoFuASgA60snGYFStAG5wABAB4AtDoBmgiOtol2cnQBUsAVQCiSpXSYsOEMaWLUijIoQSvxQpFD6RlzUAPqh4dYhYRGGOgDutKQAFrQQ7PFQuDogSjo6AIIAIgDKADKROqQwBDFwAB4xUPyi1KUVlQBq1Q1NLe2d-JqiSgC+QQXQ8KL5yTapBOwKYFV1W0VbVUNbQQBWRLkxANZwrMsFa0b8cMZQwqQxBPy0oi1nF9e3YALWBiFbhOQAXVcEB29VSBWAwAONVqWwhUJhg2G8OSiORRzA6OhaFQDVymU2EDKBR0AF4dAVcH0+EIRKI6ToWcJQX0yk0YgBzGLoGKaTLcZa8so6ahQehwagcrYDcXUaZ4KXU5KLXT0-HVPaanSoFgUUg6pXbFGGqnSsomjRmj5ERV6sAOaoOABCACkAJKVG12+3+d5ZOC0AVZUgcjYANgADAnakUAExJlM6dMZuRM212k3MZr8WNZc4EMQxUQKuDqOD8SnB6UEMsyMQczQsWhykQfVsV5aHar7MAABXKWHKAFkAMKBsC5o1lasiOslt3jyez+dGxf56VtKBtb6l8uVle18gNpc6Ftn9n0zuMbv0Xt3tuDrEjqoATWOeabZcazXS1fy2XcAODKBO1iJ9Tw-KtgKvRtAPfAcOy7Hs4D7e92CHb8BnKVEF0gpsLxAt1ykI4jdylIIyiCIJaGMHR2Fycg1A0bRrBsEpbVEHIIFYcp0HYEkABJBFoIoJOrRhtECWYlDAGYISAA" style="height: 800px; width: 100\%; border: 1px solid rgba(0,0,0,0.175); border-radius: .375rem; position: relative; z-index: 1"></iframe>}}
  }
}
}


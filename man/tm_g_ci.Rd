% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_g_ci.R
\name{tm_g_ci}
\alias{tm_g_ci}
\title{teal Module: Confidence Interval Plot}
\usage{
tm_g_ci(
  label,
  x_var,
  y_var,
  color,
  stat = c("mean", "median"),
  conf_level = teal.transform::choices_selected(c(0.95, 0.9, 0.8), 0.95, keep_order =
    TRUE),
  plot_height = c(700L, 200L, 2000L),
  plot_width = NULL,
  pre_output = NULL,
  post_output = NULL,
  ggplot2_args = teal.widgets::ggplot2_args()
)
}
\arguments{
\item{label}{(\code{character})\cr menu item label of the module in the teal app.}

\item{x_var}{(\code{character})\cr name of the treatment variable to put on the x-axis.}

\item{y_var}{(\code{character})\cr name of the response variable to put on the y-axis.}

\item{color}{(\code{data_extract_spec})\cr the group variable used to determine the plot colors, shapes, and line types.}

\item{stat}{(\code{character})\cr statistic to plot. Options are \code{"mean"} and \code{"median"}.}

\item{conf_level}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr object with
all available choices and pre-selected option for the confidence level, each within range of (0, 1).}

\item{plot_height}{(\code{numeric}) optional\cr vector of length three with \code{c(value, min, max)}. Specifies the
height of the main plot and renders a slider on the plot to interactively adjust the plot height.}

\item{plot_width}{(\code{numeric}) optional\cr vector of length three with \code{c(value, min, max)}. Specifies the width
of the main plot and renders a slider on the plot to interactively adjust the plot width.}

\item{pre_output}{(\code{shiny.tag}) optional,\cr with text placed before the output to put the output into context.
For example a title.}

\item{post_output}{(\code{shiny.tag}) optional,\cr with text placed after the output to put the output into context.
For example the \code{\link[shiny:helpText]{shiny::helpText()}} elements are useful.}

\item{ggplot2_args}{(\code{ggplot2_args}) optional\cr object created by \code{\link[teal.widgets:ggplot2_args]{teal.widgets::ggplot2_args()}} with settings
for the module plot. The argument is merged with option \code{teal.ggplot2_args} and with default module arguments
(hard coded in the module body).
For more details, see the vignette: \code{vignette("custom-ggplot2-arguments", package = "teal.widgets")}.}
}
\value{
a \code{teal_module} object.
}
\description{
This module produces a \code{\link[ggplot2:ggplot]{ggplot2::ggplot()}} type confidence interval plot consistent with the TLG Catalog template
\code{CIG01} available \href{https://insightsengineering.github.io/tlg-catalog/stable/graphs/other/cig01.html}{here}.
}
\examples{
library(nestcolor)

data <- teal_data()
data <- within(data, {
  ADSL <- tmc_ex_adsl
  ADLB <- tmc_ex_adlb
})
datanames(data) <- c("ADSL", "ADLB")
join_keys(data) <- default_cdisc_join_keys[datanames(data)]

ADSL <- data[["ADSL"]]
ADLB <- data[["ADLB"]]

app <- init(
  data = data,
  modules = modules(
    tm_g_ci(
      label = "Confidence Interval Plot",
      x_var = data_extract_spec(
        dataname = "ADSL",
        select = select_spec(
          choices = c("ARMCD", "BMRKR2"),
          selected = c("ARMCD"),
          multiple = FALSE,
          fixed = FALSE
        )
      ),
      y_var = data_extract_spec(
        dataname = "ADLB",
        filter = list(
          filter_spec(
            vars = "PARAMCD",
            choices = levels(ADLB$PARAMCD),
            selected = levels(ADLB$PARAMCD)[1],
            multiple = FALSE,
            label = "Select lab:"
          ),
          filter_spec(
            vars = "AVISIT",
            choices = levels(ADLB$AVISIT),
            selected = levels(ADLB$AVISIT)[1],
            multiple = FALSE,
            label = "Select visit:"
          )
        ),
        select = select_spec(
          label = "Analyzed Value",
          choices = c("AVAL", "CHG"),
          selected = "AVAL",
          multiple = FALSE,
          fixed = FALSE
        )
      ),
      color = data_extract_spec(
        dataname = "ADSL",
        select = select_spec(
          label = "Color by variable",
          choices = c("SEX", "STRATA1", "STRATA2"),
          selected = c("STRATA1"),
          multiple = FALSE,
          fixed = FALSE
        )
      )
    )
  )
)
if (interactive()) {
  shinyApp(app$ui, app$server)
}

}
\seealso{
The \href{https://insightsengineering.github.io/tlg-catalog/stable/}{TLG Catalog} where additional example
apps implementing this module can be found.
}
\section{Examples in Shinylive}{
\describe{
  \item{example-1}{
    \href{https://shinylive.io/r/app/#code=NobwRAdghgtgpmAXGKAHVA6ASmANGAYwHsIAXOMpMAGwEsAjAJykYE8AKcqajGIgEwCu1OAGcMBOhFoFuASgA60snGYFStAG5wABAB4AtDoBmgiOtol2cnQBUsAVQCiSpXSYsOEMaWLUijIoQSvxQpFD6RlzUAPqh4dYhYRGGOgDutKQAFrQQ7PFQuDogSjo6AIIAIgDKADKROqQwBDFwAB4xUPyi1KUVlbUAQg1NLe2d-NT0SgC+QQXQ8KL5yTapBOwKYFV1W0VbVUNbQQBWRLkxANZwrMsFa0b8cMZQwqQxBPy0oi1nF9e3YALWBiFbhOQAXVcEB29VSBWAwAONVqWwhUJhA2G8OSiORRzA6OhaFQDVymU2EDKBR0AF4dAVcH0+EIRKI6ToWcJQX0yk0YgBzD60SllMU6ahQehwagcrYAYRIxloT3MugAkipGJpuDoAAr+Uh7Xlijo6xgcgqtNqkNTvUSoOAbE3i4HwOXbFHGqnisWiGVO0gc-0idQxB1O0W+8UELLnAhiDnO7ZYACy8sqex0W0GqawAGksAAmY5Mn3RsohwNwfhJzYp9OZsByMsVsUwN60VAiDkAMXKtWqTlbbZMtDaNb7A6HLrFQWjLdnrBi5styWttqgYYjzvLvrdunp+MG3rbyuo5At9LoolIUbPtAvqnDjt3o7F5vZR7AevKWHKjanu+OixvGibXnA2jUMshyDAAJL+-6Noue5tlW6iThBUEwViCF-gBGZyMAACMEIju+HYXl2Pb0v2g7DrO0aStKsrftUAbqBKUqIFsjFzuRFbnpeL6Rnx4qfh65QAGrqtU6q2EB76gTI4ESpBMo4UMcHSbJ8kocBOjoeQtZYRp7CwdpMlybYRGkQJbaURo3aHjodFDvZFbMTKHrsaGQaaN8mQ8WAYk6POFb6RWRnBhx9qvvenlSt537lNA1CsAAXpOUncIIcCKRWykJl+IH1tJA5ZgqAASADipahUZmHZtsUkVXgoWOdRLluQxqG+sqE4ma504uH1ZTheKkUxkQ-hXgy67tJu27xXxB6SV67VjYZsUxX5IlvqOXmsc1iqzTo9CsDo5q0FKIgFdGRWqcmQ4ABqVWA1T2OUtjlMR72ff+P0ls2Hnio1Q3PV9P1-SDHWds5U70aDYoDU1PV8RNc4muFQRBLQxg6OwuSXluGjaNYNglD6og5BArDlOg7AknBgi0EUzP+tqqhBDMShgDMEJAA}{Open in Shinylive}
    \if{html}{\out{<script type="text/javascript">$(function() {  var if_pkgdown = [...document.scripts].filter(x => x.src.includes("pkgdown.js")).length > 0;  if (if_pkgdown) {    $("iframe.iframe_shinylive").css("width", "150\%");  }});</script>}}
    \if{html}{\out{<iframe class="iframe_shinylive" src="https://shinylive.io/r/app/#code=NobwRAdghgtgpmAXGKAHVA6ASmANGAYwHsIAXOMpMAGwEsAjAJykYE8AKcqajGIgEwCu1OAGcMBOhFoFuASgA60snGYFStAG5wABAB4AtDoBmgiOtol2cnQBUsAVQCiSpXSYsOEMaWLUijIoQSvxQpFD6RlzUAPqh4dYhYRGGOgDutKQAFrQQ7PFQuDogSjo6AIIAIgDKADKROqQwBDFwAB4xUPyi1KUVlbUAQg1NLe2d-NT0SgC+QQXQ8KL5yTapBOwKYFV1W0VbVUNbQQBWRLkxANZwrMsFa0b8cMZQwqQxBPy0oi1nF9e3YALWBiFbhOQAXVcEB29VSBWAwAONVqWwhUJhA2G8OSiORRzA6OhaFQDVymU2EDKBR0AF4dAVcH0+EIRKI6ToWcJQX0yk0YgBzD60SllMU6ahQehwagcrYAYRIxloT3MugAkipGJpuDoAAr+Uh7Xlijo6xgcgqtNqkNTvUSoOAbE3i4HwOXbFHGqnisWiGVO0gc-0idQxB1O0W+8UELLnAhiDnO7ZYACy8sqex0W0GqawAGksAAmY5Mn3RsohwNwfhJzYp9OZsByMsVsUwN60VAiDkAMXKtWqTlbbZMtDaNb7A6HLrFQWjLdnrBi5styWttqgYYjzvLvrdunp+MG3rbyuo5At9LoolIUbPtAvqnDjt3o7F5vZR7AevKWHKjanu+OixvGibXnA2jUMshyDAAJL+-6Noue5tlW6iThBUEwViCF-gBGZyMAACMEIju+HYXl2Pb0v2g7DrO0aStKsrftUAbqBKUqIFsjFzuRFbnpeL6Rnx4qfh65QAGrqtU6q2EB76gTI4ESpBMo4UMcHSbJ8kocBOjoeQtZYRp7CwdpMlybYRGkQJbaURo3aHjodFDvZFbMTKHrsaGQaaN8mQ8WAYk6POFb6RWRnBhx9qvvenlSt537lNA1CsAAXpOUncIIcCKRWykJl+IH1tJA5ZgqAASADipahUZmHZtsUkVXgoWOdRLluQxqG+sqE4ma504uH1ZTheKkUxkQ-hXgy67tJu27xXxB6SV67VjYZsUxX5IlvqOXmsc1iqzTo9CsDo5q0FKIgFdGRWqcmQ4ABqVWA1T2OUtjlMR72ff+P0ls2Hnio1Q3PV9P1-SDHWds5U70aDYoDU1PV8RNc4muFQRBLQxg6OwuSXluGjaNYNglD6og5BArDlOg7AknBgi0EUzP+tqqhBDMShgDMEJAA" style="height: 800px; width: 100\%; border: 1px solid rgba(0,0,0,0.175); border-radius: .375rem; position: relative; z-index: 1"></iframe>}}
  }
}
}


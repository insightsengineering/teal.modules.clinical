% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_t_shift_by_grade.R
\name{tm_t_shift_by_grade}
\alias{tm_t_shift_by_grade}
\title{teal Module: Grade Summary Table}
\usage{
tm_t_shift_by_grade(
  label,
  dataname,
  parentname = ifelse(inherits(arm_var, "data_extract_spec"),
    teal.transform::datanames_input(arm_var), "ADSL"),
  arm_var,
  visit_var = teal.transform::choices_selected(teal.transform::variable_choices(dataname,
    subset = "AVISIT"), selected = "AVISIT", fixed = TRUE),
  paramcd,
  worst_flag_var =
    teal.transform::choices_selected(teal.transform::variable_choices(dataname, subset =
    c("WGRLOVFL", "WGRLOFL", "WGRHIVFL", "WGRHIFL")), selected = "WGRLOVFL"),
  worst_flag_indicator =
    teal.transform::choices_selected(teal.transform::value_choices(dataname, "WGRLOVFL"),
    selected = "Y", fixed = TRUE),
  anl_toxgrade_var =
    teal.transform::choices_selected(teal.transform::variable_choices(dataname, subset =
    c("ATOXGR")), selected = c("ATOXGR"), fixed = TRUE),
  base_toxgrade_var =
    teal.transform::choices_selected(teal.transform::variable_choices(dataname, subset =
    c("BTOXGR")), selected = c("BTOXGR"), fixed = TRUE),
  id_var = teal.transform::choices_selected(teal.transform::variable_choices(dataname,
    subset = "USUBJID"), selected = "USUBJID", fixed = TRUE),
  add_total = FALSE,
  total_label = default_total_label(),
  drop_arm_levels = TRUE,
  pre_output = NULL,
  post_output = NULL,
  na_level = default_na_str(),
  code_missing_baseline = FALSE,
  basic_table_args = teal.widgets::basic_table_args()
)
}
\arguments{
\item{label}{(\code{character})\cr menu item label of the module in the teal app.}

\item{dataname}{(\code{character})\cr analysis data used in teal module.}

\item{parentname}{(\code{character})\cr parent analysis data used in teal module, usually this refers to \code{ADSL}.}

\item{arm_var}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr object with all
available choices and preselected option for variable names that can be used as \code{arm_var}.
It defines the grouping variable in the results table.}

\item{visit_var}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr object with
all available choices and preselected option for variable names that can be used as \code{visit} variable.
Must be a factor in \code{dataname}.}

\item{paramcd}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr object with all
available choices and preselected option for the parameter code variable from \code{dataname}.}

\item{worst_flag_var}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr object
with all available choices and preselected option for variable names that can be used as worst flag variable.}

\item{worst_flag_indicator}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr
value indicating worst grade.}

\item{anl_toxgrade_var}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr
variable for analysis toxicity grade.}

\item{base_toxgrade_var}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr
variable for baseline toxicity grade.}

\item{id_var}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr object specifying
the variable name for subject id.}

\item{add_total}{(\code{logical})\cr whether to include column with total number of patients.}

\item{total_label}{(\code{string})\cr string to display as total column/row label if column/row is
enabled (see \code{add_total}). Defaults to \code{"All Patients"}. To set a new default \code{total_label} to
apply in all modules, run \code{set_default_total_label("new_default")}.}

\item{drop_arm_levels}{(\code{logical})\cr whether to drop unused levels of \code{arm_var}. If \code{TRUE}, \code{arm_var} levels are
set to those used in the \code{dataname} dataset. If \code{FALSE}, \code{arm_var} levels are set to those used in the
\code{parentname} dataset. If \code{dataname} and \code{parentname} are the same, then \code{drop_arm_levels} is set to \code{TRUE} and
user input for this parameter is ignored.}

\item{pre_output}{(\code{shiny.tag}) optional,\cr with text placed before the output to put the output into context.
For example a title.}

\item{post_output}{(\code{shiny.tag}) optional,\cr with text placed after the output to put the output into context.
For example the \code{\link[shiny:helpText]{shiny::helpText()}} elements are useful.}

\item{na_level}{(\code{string})\cr used to replace all \code{NA} or empty values
in character or factor variables in the data. Defaults to \code{"<Missing>"}. To set a
default \code{na_level} to apply in all modules, run \code{set_default_na_str("new_default")}.}

\item{code_missing_baseline}{(\code{logical})\cr whether missing baseline grades should be counted as grade 0.}

\item{basic_table_args}{(\code{basic_table_args}) optional\cr object created by \code{\link[teal.widgets:basic_table_args]{teal.widgets::basic_table_args()}}
with settings for the module table. The argument is merged with option \code{teal.basic_table_args} and with default
module arguments (hard coded in the module body).
For more details, see the vignette: \code{vignette("custom-basic-table-arguments", package = "teal.widgets")}.}
}
\value{
a \code{teal_module} object.
}
\description{
This module produces a summary table of worst grades per subject by visit and parameter.
}
\examples{
data <- teal_data()
data <- within(data, {
  ADSL <- tmc_ex_adsl
  ADLB <- tmc_ex_adlb
})
datanames(data) <- c("ADSL", "ADLB")
join_keys(data) <- default_cdisc_join_keys[datanames(data)]

ADSL <- data[["ADSL"]]
ADLB <- data[["ADLB"]]

app <- init(
  data = data,
  modules = modules(
    tm_t_shift_by_grade(
      label = "Grade Laboratory Abnormality Table",
      dataname = "ADLB",
      arm_var = choices_selected(
        choices = variable_choices(ADSL, subset = c("ARM", "ARMCD")),
        selected = "ARM"
      ),
      paramcd = choices_selected(
        choices = value_choices(ADLB, "PARAMCD", "PARAM"),
        selected = "ALT"
      ),
      worst_flag_var = choices_selected(
        choices = variable_choices(ADLB, subset = c("WGRLOVFL", "WGRLOFL", "WGRHIVFL", "WGRHIFL")),
        selected = c("WGRLOVFL")
      ),
      worst_flag_indicator = choices_selected(
        value_choices(ADLB, "WGRLOVFL"),
        selected = "Y", fixed = TRUE
      ),
      anl_toxgrade_var = choices_selected(
        choices = variable_choices(ADLB, subset = c("ATOXGR")),
        selected = c("ATOXGR"),
        fixed = TRUE
      ),
      base_toxgrade_var = choices_selected(
        choices = variable_choices(ADLB, subset = c("BTOXGR")),
        selected = c("BTOXGR"),
        fixed = TRUE
      ),
      add_total = FALSE
    )
  ),
  filter = teal_slices(teal_slice("ADSL", "SAFFL", selected = "Y"))
)
if (interactive()) {
  shinyApp(app$ui, app$server)
}

}
\seealso{
The \href{https://insightsengineering.github.io/tlg-catalog/stable/}{TLG Catalog} where additional example
apps implementing this module can be found.
}
\section{Examples in Shinylive}{
\describe{
  \item{example-1}{
    \href{https://shinylive.io/r/app/#code=NobwRAdghgtgpmAXGKAHVA6ASmANGAYwHsIAXOMpMAGwEsAjAJykYE8AKcqajGIgEwCu1OAGcMBOhFoFuASgA60snGYFStAG5wABAB4AtDoBmgiOtol2cnQBUsAVQCiSpfyiko+o12oB9d09rNw8vQx0Ad1pSAAtaCHZAqFwdECUdHQBBABEAZQAZbx1SGAI-OAAPPyh+UWp0rOz8gCEikrLK6v5qeiUAX0UIJOh4UUTQm3CCdgUwHILZlNmcltnBgCsieL8AazhWMaTJo344YyhhUj8CflpRMs3tvYPgYdgxcc85AF1XCHnCuEksBgMs8vlZt9fv8mq0gaEQWDVmAoX80KgivFojMIBkkjoALw6JK4Bp8IQiUSEnTk4QfBoZEp+K6iOLGK70Vh+ADmzFOOIygp01Cg9Dg1GpswA4nzdPlRURmKRFawsvQIIqYNxoqrbKKRIsGYK3vBJXNYYbcUKdCwYH5NCxqQQYlsCGI-KJxXB1HB+ALrRlna6xNSHYxaPq4NcXTIPgCUqJBPRPaQnTM5lgALKLHTLLMAYWyazkpKtAc9Ih9-DNmSzsyNGRLDZ0qBYsBuTpjbtEHq9Vf9AaDsapRId1EEUaH3fYK2aSzAAAVa5lM4Wc7Ml1gV2tSwGMhXveRq0TlvlbPWy4Km5eMhFFaIrsYRdz7Y6iVP3Qf+83A12Q6OWAjegRGjYMxlnBMkxTNNZgAdSlLB8gAeQANQAMQhPBczAeDEKQjD1xwhCAAkAEl0Mw+dcLIgiwDka89x0L8jxgoi8IotZmwY6070YB8-CfKAX3iW5ZGVRhOzA3tKyPAdrTHCdQOHGdYSohDkI4ujdz3ZjfTNABNHNjFoCo9KJexnC47ShSgCB-GVCpeRqKMw0k4dpMPX05KFD8Rx0MMgJA3yVJaSDkzgVN33TTJbCQgANBDi2s61dOPHRpmWWKEqwHcfxMEyzLsRwXBvHRuKFegoE9ZkiEc2VXwk98-x7VLvMFXzQ0AyMlOnCCmKgiLWOaLLEro8qUr7FiotmYb4tG8ahWM0y0oskqAwWm1+H4GrPAlIk0MyfJcjWq8Gm44zqHIRrijgbgPToadfHu2NovBQjckyNDaITSbCtmQyxqUQZaGMHR2HiK6oAsbRrBsNIrVZeJWEydB2HRAASQRaBSDHPUYbRGEGPolDAPpviAA}{Open in Shinylive}
    \if{html}{\out{<script type="text/javascript">$(function() {  var if_pkgdown = [...document.scripts].filter(x => x.src.includes("pkgdown.js")).length > 0;  if (if_pkgdown) {    $("iframe.iframe_shinylive").css("width", "150\%");  }});</script>}}
    \if{html}{\out{<iframe class="iframe_shinylive" src="https://shinylive.io/r/app/#code=NobwRAdghgtgpmAXGKAHVA6ASmANGAYwHsIAXOMpMAGwEsAjAJykYE8AKcqajGIgEwCu1OAGcMBOhFoFuASgA60snGYFStAG5wABAB4AtDoBmgiOtol2cnQBUsAVQCiSpfyiko+o12oB9d09rNw8vQx0Ad1pSAAtaCHZAqFwdECUdHQBBABEAZQAZbx1SGAI-OAAPPyh+UWp0rOz8gCEikrLK6v5qeiUAX0UIJOh4UUTQm3CCdgUwHILZlNmcltnBgCsieL8AazhWMaTJo344YyhhUj8CflpRMs3tvYPgYdgxcc85AF1XCHnCuEksBgMs8vlZt9fv8mq0gaEQWDVmAoX80KgivFojMIBkkjoALw6JK4Bp8IQiUSEnTk4QfBoZEp+K6iOLGK70Vh+ADmzFOOIygp01Cg9Dg1GpswA4nzdPlRURmKRFawsvQIIqYNxoqrbKKRIsGYK3vBJXNYYbcUKdCwYH5NCxqQQYlsCGI-KJxXB1HB+ALrRlna6xNSHYxaPq4NcXTIPgCUqJBPRPaQnTM5lgALKLHTLLMAYWyazkpKtAc9Ih9-DNmSzsyNGRLDZ0qBYsBuTpjbtEHq9Vf9AaDsapRId1EEUaH3fYK2aSzAAAVa5lM4Wc7Ml1gV2tSwGMhXveRq0TlvlbPWy4Km5eMhFFaIrsYRdz7Y6iVP3Qf+83A12Q6OWAjegRGjYMxlnBMkxTNNZgAdSlLB8gAeQANQAMQhPBczAeDEKQjD1xwhCAAkAEl0Mw+dcLIgiwDka89x0L8jxgoi8IotZmwY6070YB8-CfKAX3iW5ZGVRhOzA3tKyPAdrTHCdQOHGdYSohDkI4ujdz3ZjfTNABNHNjFoCo9KJexnC47ShSgCB-GVCpeRqKMw0k4dpMPX05KFD8Rx0MMgJA3yVJaSDkzgVN33TTJbCQgANBDi2s61dOPHRpmWWKEqwHcfxMEyzLsRwXBvHRuKFegoE9ZkiEc2VXwk98-x7VLvMFXzQ0AyMlOnCCmKgiLWOaLLEro8qUr7FiotmYb4tG8ahWM0y0oskqAwWm1+H4GrPAlIk0MyfJcjWq8Gm44zqHIRrijgbgPToadfHu2NovBQjckyNDaITSbCtmQyxqUQZaGMHR2HiK6oAsbRrBsNIrVZeJWEydB2HRAASQRaBSDHPUYbRGEGPolDAPpviAA" style="height: 800px; width: 100\%; border: 1px solid rgba(0,0,0,0.175); border-radius: .375rem; position: relative; z-index: 1"></iframe>}}
  }
}
}


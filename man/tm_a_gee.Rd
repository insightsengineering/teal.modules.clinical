% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_a_gee.R
\name{tm_a_gee}
\alias{tm_a_gee}
\title{teal Module: Generalized Estimating Equations (GEE) analysis}
\usage{
tm_a_gee(
  label,
  dataname,
  parentname = ifelse(inherits(arm_var, "data_extract_spec"),
    teal.transform::datanames_input(arm_var), "ADSL"),
  aval_var,
  id_var,
  arm_var,
  visit_var,
  cov_var,
  arm_ref_comp = NULL,
  paramcd,
  conf_level = teal.transform::choices_selected(c(0.95, 0.9, 0.8), 0.95, keep_order =
    TRUE),
  pre_output = NULL,
  post_output = NULL,
  basic_table_args = teal.widgets::basic_table_args()
)
}
\arguments{
\item{label}{(\code{character})\cr menu item label of the module in the teal app.}

\item{dataname}{(\code{character})\cr analysis data used in teal module.}

\item{parentname}{(\code{character})\cr parent analysis data used in teal module, usually this refers to \code{ADSL}.}

\item{aval_var}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr object with
all available choices and pre-selected option for the analysis variable.}

\item{id_var}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr object specifying
the variable name for subject id.}

\item{arm_var}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr object with all
available choices and preselected option for variable names that can be used as \code{arm_var}.
It defines the grouping variable in the results table.}

\item{visit_var}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr object with
all available choices and preselected option for variable names that can be used as \code{visit} variable.
Must be a factor in \code{dataname}.}

\item{cov_var}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr object with all
available choices and preselected option for the covariates variables.}

\item{arm_ref_comp}{(\code{list}) optional,\cr if specified it must be a named list with each element corresponding to
an arm variable in \code{ADSL} and the element must be another list (possibly
with delayed \code{\link[teal.transform:variable_choices]{teal.transform::variable_choices()}} or delayed \code{\link[teal.transform:value_choices]{teal.transform::value_choices()}}
with the elements named \code{ref} and \code{comp} that the defined the default
reference and comparison arms when the arm variable is changed.}

\item{paramcd}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr object with all
available choices and preselected option for the parameter code variable from \code{dataname}.}

\item{conf_level}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr object with
all available choices and pre-selected option for the confidence level, each within range of (0, 1).}

\item{pre_output}{(\code{shiny.tag}) optional,\cr with text placed before the output to put the output into context.
For example a title.}

\item{post_output}{(\code{shiny.tag}) optional,\cr with text placed after the output to put the output into context.
For example the \code{\link[shiny:helpText]{shiny::helpText()}} elements are useful.}

\item{basic_table_args}{(\code{basic_table_args}) optional\cr object created by \code{\link[teal.widgets:basic_table_args]{teal.widgets::basic_table_args()}}
with settings for the module table. The argument is merged with option \code{teal.basic_table_args} and with default
module arguments (hard coded in the module body).
For more details, see the vignette: \code{vignette("custom-basic-table-arguments", package = "teal.widgets")}.}
}
\value{
a \code{teal_module} object.
}
\description{
This module produces an analysis table using Generalized Estimating Equations (GEE).
}
\examples{
library(dplyr)

data <- teal_data()
data <- within(data, {
  ADSL <- tmc_ex_adsl
  ADQS <- tmc_ex_adqs \%>\%
    filter(ABLFL != "Y" & ABLFL2 != "Y") \%>\%
    mutate(
      AVISIT = as.factor(AVISIT),
      AVISITN = rank(AVISITN) \%>\%
        as.factor() \%>\%
        as.numeric() \%>\%
        as.factor(),
      AVALBIN = AVAL < 50 # Just as an example to get a binary endpoint.
    ) \%>\%
    droplevels()
})
datanames(data) <- c("ADSL", "ADQS")
join_keys(data) <- default_cdisc_join_keys[datanames(data)]

app <- init(
  data = data,
  modules = modules(
    tm_a_gee(
      label = "GEE",
      dataname = "ADQS",
      aval_var = choices_selected("AVALBIN", fixed = TRUE),
      id_var = choices_selected(c("USUBJID", "SUBJID"), "USUBJID"),
      arm_var = choices_selected(c("ARM", "ARMCD"), "ARM"),
      visit_var = choices_selected(c("AVISIT", "AVISITN"), "AVISIT"),
      paramcd = choices_selected(
        choices = value_choices(data[["ADQS"]], "PARAMCD", "PARAM"),
        selected = "FKSI-FWB"
      ),
      cov_var = choices_selected(c("BASE", "AGE", "SEX", "BASE:AVISIT"), NULL)
    )
  )
)
if (interactive()) {
  shinyApp(app$ui, app$server)
}

}
\seealso{
The \href{https://insightsengineering.github.io/tlg-catalog/stable/}{TLG Catalog} where additional example
apps implementing this module can be found.
}
\section{Examples in Shinylive}{
\describe{
  \item{example-1}{
    \href{https://shinylive.io/r/app/#code=NobwRAdghgtgpmAXGKAHVA6ASmANGAYwHsIAXOMpMAGwEsAjAJykYE8AKcqajGIgEwCu1OAGcMBOhFoFuASgA60snGYFStAG5wABAB4AtDoBmgiOtol2cnQBUsAVQCiSpXSYsO-VNVaNFEEr8UKRQ+kZc1AD6waHWQSFhhjoA7rSkABa0EOyxULg6IEo6OgCCACIAygAy4TqkMARRcAAeUVD8otTFZeUAipV1DU2t7fwAjqI6AKQAfNM9Jca01OSM7KUAQtUAYrUAhAC8OgpgAJqnOgBkZdt7AEw6RyfnpzZzCxAlJTCCoeTsRbfUoANQAkpUwbYdMcoOJjFB1ER1qCIVC5LggSVUZDbAA5GE6ZgQADWG3BuLx73mWO+cIwCKR62pn2+bJ09IggngjBk1hmNK+7JK9MZpGR1kxQrZoNK1U2YIJx1ltT0OgArAAGHQAYh0AClBKJSByplAvq1YD5dOKdABzOAmsL0bKeHQUbxEbKkDBAllA-iMIjW7TUUTxCAAXwCeWg8HDeRsyQIgLAFRqpwKpwqAzeSgAVl6IFESXBWAnEkmjPw4AjhKQogR+LRRE1C9kS2XRMBY7AxLlKwBdVzQdB1bLpQFCvKEvJSn4CYRiQl8IQicNAhrtKIOuBT4XUKD0ODUQmnADiThceFpvfgZ7T-UqmdpUE03Ci78YhIIGS9BDEKJRBPOB1DgfhUxVBU8UzExaBacDCXsZwMVpWh+E-Fgfz-GRAOAkQwIglNTgcSoHE2fUwXKWDTjIiiqLeLMwFI8jKOosBUOlOlGBgTDv2OX9-zwkDCPYYi0ywABZGiJMkgBhdiMReUopMY2lNBbdI+OwoTRCAkTyCIyCKShGScShGCOKY8zbDUriSlQFhYCbHTcL0-DQMM-dhR0QS3MJd9qEEOBGxwgCK1CYBgGzJ9TkHQcmIABRU0p5PYpKUukqzaRKDzCIfHYAGlIQMHYAHVNlOWlOOFYhNG0gSwuEgivPEzZSkqa9rMvGTOoADRk9rOsQGzGJ0PEHGqaoAjZGadACAJaGMHR2G9VREQ0bRrBsIohVELIIFYUp0HYNBUAAEkEWgCjO87gMYbR-CUSMlDASNByAA}{Open in Shinylive}
    \if{html}{\out{<script type="text/javascript">$(function() {  var if_pkgdown = [...document.scripts].filter(x => x.src.includes("pkgdown.js")).length > 0;  if (if_pkgdown) {    $("iframe.iframe_shinylive").css("width", "150\%");  }});</script>}}
    \if{html}{\out{<iframe class="iframe_shinylive" src="https://shinylive.io/r/app/#code=NobwRAdghgtgpmAXGKAHVA6ASmANGAYwHsIAXOMpMAGwEsAjAJykYE8AKcqajGIgEwCu1OAGcMBOhFoFuASgA60snGYFStAG5wABAB4AtDoBmgiOtol2cnQBUsAVQCiSpXSYsO-VNVaNFEEr8UKRQ+kZc1AD6waHWQSFhhjoA7rSkABa0EOyxULg6IEo6OgCCACIAygAy4TqkMARRcAAeUVD8otTFZeUAipV1DU2t7fwAjqI6AKQAfNM9Jca01OSM7KUAQtUAYrUAhAC8OgpgAJqnOgBkZdt7AEw6RyfnpzZzCxAlJTCCoeTsRbfUoANQAkpUwbYdMcoOJjFB1ER1qCIVC5LggSVUZDbAA5GE6ZgQADWG3BuLx73mWO+cIwCKR62pn2+bJ09IggngjBk1hmNK+7JK9MZpGR1kxQrZoNK1U2YIJx1ltT0OgArAAGHQAYh0AClBKJSByplAvq1YD5dOKdABzOAmsL0bKeHQUbxEbKkDBAllA-iMIjW7TUUTxCAAXwCeWg8HDeRsyQIgLAFRqpwKpwqAzeSgAVl6IFESXBWAnEkmjPw4AjhKQogR+LRRE1C9kS2XRMBY7AxLlKwBdVzQdB1bLpQFCvKEvJSn4CYRiQl8IQicNAhrtKIOuBT4XUKD0ODUQmnADiThceFpvfgZ7T-UqmdpUE03Ci78YhIIGS9BDEKJRBPOB1DgfhUxVBU8UzExaBacDCXsZwMVpWh+E-Fgfz-GRAOAkQwIglNTgcSoHE2fUwXKWDTjIiiqLeLMwFI8jKOosBUOlOlGBgTDv2OX9-zwkDCPYYi0ywABZGiJMkgBhdiMReUopMY2lNBbdI+OwoTRCAkTyCIyCKShGScShGCOKY8zbDUriSlQFhYCbHTcL0-DQMM-dhR0QS3MJd9qEEOBGxwgCK1CYBgGzJ9TkHQcmIABRU0p5PYpKUukqzaRKDzCIfHYAGlIQMHYAHVNlOWlOOFYhNG0gSwuEgivPEzZSkqa9rMvGTOoADRk9rOsQGzGJ0PEHGqaoAjZGadACAJaGMHR2G9VREQ0bRrBsIohVELIIFYUp0HYNBUAAEkEWgCjO87gMYbR-CUSMlDASNByAA" style="height: 800px; width: 100\%; border: 1px solid rgba(0,0,0,0.175); border-radius: .375rem; position: relative; z-index: 1"></iframe>}}
  }
}
}


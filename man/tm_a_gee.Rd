% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_a_gee.R
\name{tm_a_gee}
\alias{tm_a_gee}
\title{teal Module: Generalized Estimating Equations (GEE) analysis}
\usage{
tm_a_gee(
  label,
  dataname,
  parentname = ifelse(inherits(arm_var, "data_extract_spec"),
    teal.transform::datanames_input(arm_var), "ADSL"),
  aval_var,
  id_var,
  arm_var,
  visit_var,
  cov_var,
  arm_ref_comp = NULL,
  paramcd,
  conf_level = teal.transform::choices_selected(c(0.95, 0.9, 0.8), 0.95, keep_order =
    TRUE),
  pre_output = NULL,
  post_output = NULL,
  basic_table_args = teal.widgets::basic_table_args(),
  transformators = list(),
  decorators = list()
)
}
\arguments{
\item{label}{(\code{character})\cr menu item label of the module in the teal app.}

\item{dataname}{(\code{character})\cr analysis data used in teal module.}

\item{parentname}{(\code{character})\cr parent analysis data used in teal module, usually this refers to \code{ADSL}.}

\item{aval_var}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr object with
all available choices and pre-selected option for the analysis variable.}

\item{id_var}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr object specifying
the variable name for subject id.}

\item{arm_var}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr object with all
available choices and preselected option for variable names that can be used as \code{arm_var}.
It defines the grouping variable in the results table.}

\item{visit_var}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr object with
all available choices and preselected option for variable names that can be used as \code{visit} variable.
Must be a factor in \code{dataname}.}

\item{cov_var}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr object with all
available choices and preselected option for the covariates variables.}

\item{arm_ref_comp}{(\code{list}) optional,\cr if specified it must be a named list with each element corresponding to
an arm variable in \code{ADSL} and the element must be another list (possibly
with delayed \code{\link[teal.transform:variable_choices]{teal.transform::variable_choices()}} or delayed \code{\link[teal.transform:value_choices]{teal.transform::value_choices()}}
with the elements named \code{ref} and \code{comp} that the defined the default
reference and comparison arms when the arm variable is changed.}

\item{paramcd}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr object with all
available choices and preselected option for the parameter code variable from \code{dataname}.}

\item{conf_level}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr object with
all available choices and pre-selected option for the confidence level, each within range of (0, 1).}

\item{pre_output}{(\code{shiny.tag}) optional,\cr with text placed before the output to put the output into context.
For example a title.}

\item{post_output}{(\code{shiny.tag}) optional,\cr with text placed after the output to put the output into context.
For example the \code{\link[shiny:helpText]{shiny::helpText()}} elements are useful.}

\item{basic_table_args}{(\code{basic_table_args}) optional\cr object created by \code{\link[teal.widgets:basic_table_args]{teal.widgets::basic_table_args()}}
with settings for the module table. The argument is merged with option \code{teal.basic_table_args} and with default
module arguments (hard coded in the module body).
For more details, see the vignette: \code{vignette("custom-basic-table-arguments", package = "teal.widgets")}.}

\item{transformators}{(\code{list} of \code{teal_transform_module}) that will be applied to transform module's data input.
To learn more check \code{vignette("transform-input-data", package = "teal")}.}

\item{decorators}{\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}
(named \code{list} of lists of \code{teal_transform_module}) optional,
decorator for tables or plots included in the module output reported.
The decorators are applied to the respective output objects.

See section "Decorating Module" below for more details.}
}
\value{
a \code{teal_module} object.
}
\description{
This module produces an analysis table using Generalized Estimating Equations (GEE).
}
\section{Decorating Module}{


This module generates the following objects, which can be modified in place using decorators:
\itemize{
\item \code{table} (\code{ElementaryTable} - output of \code{rtables::build_table()})
}

A Decorator is applied to the specific output using a named list of \code{teal_transform_module} objects.
The name of this list corresponds to the name of the output to which the decorator is applied.
See code snippet below:

\if{html}{\out{<div class="sourceCode">}}\preformatted{tm_a_gee(
   ..., # arguments for module
   decorators = list(
     table = teal_transform_module(...) # applied to the `table` output
   )
)
}\if{html}{\out{</div>}}

For additional details and examples of decorators, refer to the vignette
\code{vignette("decorate-module-output", package = "teal.modules.clinical")}.

To learn more please refer to the vignette
\code{vignette("transform-module-output", package = "teal")} or the \code{\link[teal:teal_transform_module]{teal::teal_transform_module()}} documentation.
}

\examples{

data <- teal_data()
data <- within(data, {
  library(dplyr)
  ADSL <- teal.modules.clinical::tmc_ex_adsl
  ADQS <- teal.modules.clinical::tmc_ex_adqs \%>\%
    filter(ABLFL != "Y" & ABLFL2 != "Y") \%>\%
    mutate(
      AVISIT = as.factor(AVISIT),
      AVISITN = rank(AVISITN) \%>\%
        as.factor() \%>\%
        as.numeric() \%>\%
        as.factor(),
      AVALBIN = AVAL < 50 # Just as an example to get a binary endpoint.
    ) \%>\%
    droplevels()
})
join_keys(data) <- default_cdisc_join_keys[names(data)]

app <- init(
  data = data,
  modules = modules(
    tm_a_gee(
      label = "GEE",
      dataname = "ADQS",
      aval_var = choices_selected("AVALBIN", fixed = TRUE),
      id_var = choices_selected(c("USUBJID", "SUBJID"), "USUBJID"),
      arm_var = choices_selected(c("ARM", "ARMCD"), "ARM"),
      visit_var = choices_selected(c("AVISIT", "AVISITN"), "AVISIT"),
      paramcd = choices_selected(
        choices = value_choices(data[["ADQS"]], "PARAMCD", "PARAM"),
        selected = "FKSI-FWB"
      ),
      cov_var = choices_selected(c("BASE", "AGE", "SEX", "BASE:AVISIT"), NULL)
    )
  )
)
if (interactive()) {
  shinyApp(app$ui, app$server)
}

}
\seealso{
The \href{https://insightsengineering.github.io/tlg-catalog/stable/}{TLG Catalog} where additional example
apps implementing this module can be found.
}
\section{Examples in Shinylive}{
\describe{
  \item{example-1}{
    \href{https://shinylive.io/r/app/#code=NobwRAdghgtgpmAXGKAHVA6ASmANGAYwHsIAXOMpMAGwEsAjAJykYE8AKcqajGIgEwCu1OAGcMBOhFoFuASgA60snGYFStAG5wABAB4AtDoBmgiOtol2cnQBUsAVQCiS1xH5RSUfUa7UA+h5e1kpB3oY6AO60pAAWtBDsYbg6IEo6OnRMLBz8qNSsjIoQGQCCACIAygAyPjp+vALCYhJSMtyIiKQwBP5wAB7+UPyi1Ok6FQCKlXUNfEIi4pIJ7dSd3b0DQ-wAjqI6AKQAfAfjGca01OSM7KUAQtUAYrUAhAC8OgpgAJpfOgBkEwezwATDp3p8fl8bMdTiUMjoYIIvOR2GcEaUAGoASUq2NsOg+UHExig6iINyxuPxclw6LKOLxtgAcoSdMwIABrW6M-HMmEnekI4kYUnkm4CuEI6U6EUQQTwRgyayHQXwmWyklk0gU6x09UYzGlap3bGsj5Y436HQAVgADDoAMQ6ABSglEpE1spKA1g+V0Op0AHM4J7vPQEjkdBQ8kQEqQMOjJej+IwiP7tNRRCEIABfYoAKzjEH8nLgrGzYRsEX4cFJwlI-gI-Fool6RYSpfLomA0Hglc8UDkAF03GhUHUVqQ0fCwmzkuN5s19h8l4sZ9LukN-CG4BuZdQoPQ4NQ2V8AOJOFx4IVhPu6D5fKaVL76jVQTTcfyfxhsgixOMCDEfxRBPOB1Dgfg0TAS0TTNV8TFofpILZexnFpIVaH4b8WD-ACZGA0CRAgqCCGghxKgcO4XWxcoEK+SjqNo6EUi+CiqJouiwAwg0MhYGAcN-D5-0AwiwJI9gyKfLAAFl6Jg2SAGEuNpSFSlklihU0VsYkEvDRNEEDxPIUjoKpJl5PMvkWLU3lbE03idFQFhYGbfSCMMojwJM-cNREjy2U-ahBDgJt8KAgcvGAYAn3KaYvmHYdWLAAAFdTShk5T5LSrAMocjUMi8kizzAR4AGk8QMR4AHU7i+IUeL8ohND04TwrE4ifKksA7lKSpr2S0pL3k-qAA15N6-rECs+zuJSZkHGqapimlFadGKYpaGMHR2HjVRtS0Pc5BsNJ4VEeIIFYUp0HYccABJBFoFJ7tAxhtCKJRcyUMBc2HIA}{Open in Shinylive}
    \if{html}{\out{<iframe class="iframe_shinylive" src="https://shinylive.io/r/app/#code=NobwRAdghgtgpmAXGKAHVA6ASmANGAYwHsIAXOMpMAGwEsAjAJykYE8AKcqajGIgEwCu1OAGcMBOhFoFuASgA60snGYFStAG5wABAB4AtDoBmgiOtol2cnQBUsAVQCiS1xH5RSUfUa7UA+h5e1kpB3oY6AO60pAAWtBDsYbg6IEo6OnRMLBz8qNSsjIoQGQCCACIAygAyPjp+vALCYhJSMtyIiKQwBP5wAB7+UPyi1Ok6FQCKlXUNfEIi4pIJ7dSd3b0DQ-wAjqI6AKQAfAfjGca01OSM7KUAQtUAYrUAhAC8OgpgAJpfOgBkEwezwATDp3p8fl8bMdTiUMjoYIIvOR2GcEaUAGoASUq2NsOg+UHExig6iINyxuPxclw6LKOLxtgAcoSdMwIABrW6M-HMmEnekI4kYUnkm4CuEI6U6EUQQTwRgyayHQXwmWyklk0gU6x09UYzGlap3bGsj5Y436HQAVgADDoAMQ6ABSglEpE1spKA1g+V0Op0AHM4J7vPQEjkdBQ8kQEqQMOjJej+IwiP7tNRRCEIABfYoAKzjEH8nLgrGzYRsEX4cFJwlI-gI-Fool6RYSpfLomA0Hglc8UDkAF03GhUHUVqQ0fCwmzkuN5s19h8l4sZ9LukN-CG4BuZdQoPQ4NQ2V8AOJOFx4IVhPu6D5fKaVL76jVQTTcfyfxhsgixOMCDEfxRBPOB1Dgfg0TAS0TTNV8TFofpILZexnFpIVaH4b8WD-ACZGA0CRAgqCCGghxKgcO4XWxcoEK+SjqNo6EUi+CiqJouiwAwg0MhYGAcN-D5-0AwiwJI9gyKfLAAFl6Jg2SAGEuNpSFSlklihU0VsYkEvDRNEEDxPIUjoKpJl5PMvkWLU3lbE03idFQFhYGbfSCMMojwJM-cNREjy2U-ahBDgJt8KAgcvGAYAn3KaYvmHYdWLAAAFdTShk5T5LSrAMocjUMi8kizzAR4AGk8QMR4AHU7i+IUeL8ohND04TwrE4ifKksA7lKSpr2S0pL3k-qAA15N6-rECs+zuJSZkHGqapimlFadGKYpaGMHR2HjVRtS0Pc5BsNJ4VEeIIFYUp0HYccABJBFoFJ7tAxhtCKJRcyUMBc2HIA" style="height: 800px; width: 100vw; max-width: 1400px; border: 1px solid rgba(0,0,0,0.175); border-radius: .375rem; position: absolute; left: 50\%; margin-top: 30px; transform: translateX(-50\%); z-index: 1"></iframe>}}
    \if{html}{\out{<a style='height: 800px; display: block;'></a>}}
  }
}
}


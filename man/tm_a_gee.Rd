% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_a_gee.R
\name{tm_a_gee}
\alias{tm_a_gee}
\title{Teal Module: Teal module for Generalized Estimating Equations (GEE) analysis}
\usage{
tm_a_gee(
  label,
  dataname,
  parentname = ifelse(inherits(arm_var, "data_extract_spec"),
    teal.transform::datanames_input(arm_var), "ADSL"),
  aval_var,
  id_var,
  arm_var,
  visit_var,
  cov_var,
  arm_ref_comp = NULL,
  paramcd,
  conf_level = teal.transform::choices_selected(c(0.95, 0.9, 0.8), 0.95, keep_order =
    TRUE),
  pre_output = NULL,
  post_output = NULL,
  basic_table_args = teal.widgets::basic_table_args()
)
}
\arguments{
\item{label}{(\code{character})\cr
menu item label of the module in the teal app.}

\item{dataname}{(\code{character})\cr
analysis data used in teal module.}

\item{parentname}{(\code{character})\cr
parent analysis data used in teal module, usually this refers to \code{ADSL}.}

\item{aval_var}{(\code{choices_selected} or \code{data_extract_spec})\cr
object with all available choices and preselected option for the analysis
variable.}

\item{id_var}{(\code{choices_selected} or \code{data_extract_spec})\cr
object specifying the variable name for subject id.}

\item{arm_var}{(\code{choices_selected} or \code{data_extract_spec})\cr
object with all available choices
and preselected option for variable names that can be used as \code{arm_var}.
It defines the grouping variable(s) in the results table.
If there are two elements selected for \code{arm_var},
second variable will be nested under the first variable.}

\item{visit_var}{(\code{choices_selected} or \code{data_extract_spec})\cr
object with all available choices and preselected option
for variable names that can be used as \code{visit} variable. Must be a factor
in \code{dataname}.}

\item{cov_var}{(\code{choices_selected} or \code{data_extract_spec})\cr
object with all available choices and preselected option for the covariates
variables.}

\item{arm_ref_comp}{optional, (\code{list})\cr
If specified it must be a named list with each element corresponding to
an arm variable in \code{ADSL} and the element must be another list (possibly
with delayed \code{\link[teal.transform:variable_choices]{teal.transform::variable_choices()}} or delayed \code{\link[teal.transform:value_choices]{teal.transform::value_choices()}}
with the elements named \code{ref} and \code{comp} that the defined the default
reference and comparison arms when the arm variable is changed.}

\item{paramcd}{(\code{choices_selected} or \code{data_extract_spec})\cr
variable value designating the studied parameter.}

\item{conf_level}{(\code{choices_selected})\cr
object with all available choices and preselected option for the confidence
level, each within range of (0, 1).}

\item{pre_output}{optional, (\code{shiny.tag})\cr
with text placed before the output to put the output into context.
For example a title.}

\item{post_output}{optional, (\code{shiny.tag})\cr
with text placed after the output to put the output into context. For example
the \code{\link[shiny:helpText]{shiny::helpText()}} elements are useful.}

\item{basic_table_args}{optional, (\code{basic_table_args})\cr
object created by \code{\link[teal.widgets:basic_table_args]{teal.widgets::basic_table_args()}} with settings for the module table.
The argument is merged with option \code{teal.basic_table_args} and with default module arguments
(hard coded in the module body).

For more details, see the vignette: \code{vignette("custom-basic-table-arguments", package = "teal.widgets")}.}
}
\description{
Teal Module: Teal module for Generalized Estimating Equations (GEE) analysis
}
\examples{
adsl <- tmc_ex_adsl
adqs <- tmc_ex_adqs \%>\%
  dplyr::filter(ABLFL != "Y" & ABLFL2 != "Y") \%>\%
  dplyr::mutate(
    AVISIT = as.factor(AVISIT),
    AVISITN = rank(AVISITN) \%>\%
      as.factor() \%>\%
      as.numeric() \%>\%
      as.factor(),
    AVALBIN = AVAL < 50 # Just as an example to get a binary endpoint.
  ) \%>\%
  droplevels()

app <- init(
  data = cdisc_data(
    cdisc_dataset("ADSL", adsl),
    cdisc_dataset("ADQS", adqs)
  ),
  modules = modules(
    tm_a_gee(
      label = "GEE",
      dataname = "ADQS",
      aval_var = choices_selected("AVALBIN", fixed = TRUE),
      id_var = choices_selected(c("USUBJID", "SUBJID"), "USUBJID"),
      arm_var = choices_selected(c("ARM", "ARMCD"), "ARM"),
      visit_var = choices_selected(c("AVISIT", "AVISITN"), "AVISIT"),
      paramcd = choices_selected(
        choices = value_choices(adqs, "PARAMCD", "PARAM"),
        selected = "FKSI-FWB"
      ),
      cov_var = choices_selected(c("BASE", "AGE", "SEX", "BASE:AVISIT"), NULL)
    )
  )
)
if (interactive()) {
  shiny::shinyApp(app$ui, app$server)
}

}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_t_shift_by_arm.R
\name{tm_t_shift_by_arm}
\alias{tm_t_shift_by_arm}
\title{Teal Module: Shift by Arm}
\usage{
tm_t_shift_by_arm(
  label,
  dataname,
  parentname = ifelse(inherits(arm_var, "data_extract_spec"),
    teal.transform::datanames_input(arm_var), "ADSL"),
  arm_var,
  paramcd,
  visit_var,
  aval_var,
  base_var,
  treatment_flag_var =
    teal.transform::choices_selected(teal.transform::variable_choices(dataname, subset =
    "ONTRTFL"), selected = "ONTRTFL", fixed = TRUE),
  treatment_flag =
    teal.transform::choices_selected(teal.transform::value_choices(dataname, "ONTRTFL"),
    selected = "Y", fixed = TRUE),
  useNA = c("ifany", "no"),
  na_level = "<Missing>",
  add_total = FALSE,
  total_label = "All Patients",
  pre_output = NULL,
  post_output = NULL,
  basic_table_args = teal.widgets::basic_table_args()
)
}
\arguments{
\item{label}{(\code{character})\cr
menu item label of the module in the teal app.}

\item{dataname}{(\code{character})\cr
analysis data used in teal module.}

\item{parentname}{(\code{character})\cr
parent analysis data used in teal module, usually this refers to \code{ADSL}.}

\item{arm_var}{(\code{choices_selected} or \code{data_extract_spec})\cr
object with all available choices
and preselected option for variable names that can be used as \code{arm_var}.
It defines the grouping variable(s) in the results table.
If there are two elements selected for \code{arm_var},
second variable will be nested under the first variable.}

\item{paramcd}{(\code{choices_selected} or \code{data_extract_spec})\cr
variable value designating the studied parameter.}

\item{visit_var}{(\code{choices_selected} or \code{data_extract_spec})\cr
object with all available choices and preselected option
for variable names that can be used as \code{visit} variable. Must be a factor
in \code{dataname}.}

\item{aval_var}{(\code{choices_selected} or \code{data_extract_spec})\cr
object with all available choices and preselected option for the analysis
variable.}

\item{base_var}{(\code{character})\cr the variable name for the baseline reference range indicator.}

\item{treatment_flag_var}{(\code{choices_selected} or \code{data_extract_spec})\cr on treatment flag variable.}

\item{treatment_flag}{(\code{choices_selected}] or \code{data_extract_spec})\cr value indicating on treatment
records in \code{treatment_flag_var}.}

\item{useNA}{(\code{character})\cr
whether missing data (\code{NA}) should be displayed as a level.}

\item{na_level}{(\code{string})\cr used to replace all \code{NA} or empty values
in character or factor variables in the data.}

\item{add_total}{(\code{logical})\cr
whether to include row with total number of patients.}

\item{total_label}{(\code{string})\cr string to display as total column/row label if column/row is
enabled (see \code{add_total}).}

\item{pre_output}{optional, (\code{shiny.tag})\cr
with text placed before the output to put the output into context.
For example a title.}

\item{post_output}{optional, (\code{shiny.tag})\cr
with text placed after the output to put the output into context. For example
the \code{\link[shiny:helpText]{shiny::helpText()}} elements are useful.}

\item{basic_table_args}{optional, (\code{basic_table_args})\cr
object created by \code{\link[teal.widgets:basic_table_args]{teal.widgets::basic_table_args()}} with settings for the module table.
The argument is merged with option \code{teal.basic_table_args} and with default module arguments
(hard coded in the module body).

For more details, see the vignette: \code{vignette("custom-basic-table-arguments", package = "teal.widgets")}.}
}
\description{
Teal Module: Shift by Arm
}
\examples{
adsl <- tmc_ex_adsl
adeg <- tmc_ex_adeg

app <- init(
  data = cdisc_data(
    cdisc_dataset("ADSL", adsl),
    cdisc_dataset("ADEG", adeg)
  ),
  modules = modules(
    tm_t_shift_by_arm(
      label = "Shift by Arm Table",
      dataname = "ADEG",
      arm_var = choices_selected(
        variable_choices(adsl, subset = c("ARM", "ARMCD")),
        selected = "ARM"
      ),
      paramcd = choices_selected(
        value_choices(adeg, "PARAMCD"),
        selected = "HR"
      ),
      visit_var = choices_selected(
        value_choices(adeg, "AVISIT"),
        selected = "POST-BASELINE MINIMUM"
      ),
      aval_var = choices_selected(
        variable_choices(adeg, subset = "ANRIND"),
        selected = "ANRIND", fixed = TRUE
      ),
      base_var = choices_selected(
        variable_choices(adeg, subset = "BNRIND"),
        selected = "BNRIND", fixed = TRUE
      ),
      useNA = "ifany"
    )
  )
)
if (interactive()) {
  shinyApp(app$ui, app$server)
}

}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_t_abnormality.R
\name{tm_t_abnormality}
\alias{tm_t_abnormality}
\title{Teal Module: Abnormality Summary Table}
\usage{
tm_t_abnormality(
  label,
  dataname,
  parentname = ifelse(inherits(arm_var, "data_extract_spec"),
    teal.transform::datanames_input(arm_var), "ADSL"),
  arm_var,
  by_vars,
  grade,
  abnormal = list(low = c("LOW", "LOW LOW"), high = c("HIGH", "HIGH HIGH")),
  id_var = teal.transform::choices_selected(teal.transform::variable_choices(dataname,
    subset = "USUBJID"), selected = "USUBJID", fixed = TRUE),
  baseline_var =
    teal.transform::choices_selected(teal.transform::variable_choices(dataname, subset =
    "BNRIND"), selected = "BNRIND", fixed = TRUE),
  treatment_flag_var =
    teal.transform::choices_selected(teal.transform::variable_choices(dataname, subset =
    "ONTRTFL"), selected = "ONTRTFL", fixed = TRUE),
  treatment_flag =
    teal.transform::choices_selected(teal.transform::value_choices(dataname, "ONTRTFL"),
    selected = "Y", fixed = TRUE),
  add_total = TRUE,
  total_label = "All Patients",
  exclude_base_abn = FALSE,
  drop_arm_levels = TRUE,
  pre_output = NULL,
  post_output = NULL,
  na_level = "<Missing>",
  basic_table_args = teal.widgets::basic_table_args()
)
}
\arguments{
\item{label}{(\code{character})\cr
menu item label of the module in the teal app.}

\item{dataname}{(\code{character})\cr
analysis data used in teal module.}

\item{parentname}{(\code{character})\cr
parent analysis data used in teal module, usually this refers to \code{ADSL}.}

\item{arm_var}{(\code{choices_selected} or \code{data_extract_spec})\cr
object with all available choices
and preselected option for variable names that can be used as \code{arm_var}.
It defines the grouping variable(s) in the results table.
If there are two elements selected for \code{arm_var},
second variable will be nested under the first variable.}

\item{by_vars}{(\code{choices_selected} or \code{data_extract_spec})\cr
object with all available choices and preselected option for variable names
used to split the summary by rows.}

\item{grade}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}} or \code{\link[teal.transform:data_extract_spec]{teal.transform::data_extract_spec()}})\cr
object with all available choices and preselected option for variable names that can be used to
specify the abnormality grade. Variable must be factor.}

\item{abnormal}{(\verb{named list})\cr defined by user to indicate what abnormalities are to be displayed.}

\item{id_var}{(\code{choices_selected} or \code{data_extract_spec})\cr
object specifying the variable name for subject id.}

\item{baseline_var}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}} or \code{\link[teal.transform:data_extract_spec]{teal.transform::data_extract_spec()}})\cr
variable for baseline abnormality grade.}

\item{treatment_flag_var}{(\code{choices_selected} or \code{data_extract_spec})\cr on treatment flag variable.}

\item{treatment_flag}{(\code{choices_selected}] or \code{data_extract_spec})\cr value indicating on treatment
records in \code{treatment_flag_var}.}

\item{add_total}{(\code{logical})\cr
whether to include column with total number of patients.}

\item{total_label}{(\code{string})\cr string to display as total column/row label if column/row is
enabled (see \code{add_total}).}

\item{exclude_base_abn}{(\code{logical})\cr whether to exclude patients who had abnormal values at baseline.}

\item{drop_arm_levels}{(\code{logical})\cr drop the unused \code{arm_var} levels.
When \code{TRUE}, \code{arm_var} levels are set to those used in the \code{dataname} dataset. When \code{FALSE},
\code{arm_var} levels are set to those used in the \code{parantname} dataset.}

\item{pre_output}{optional, (\code{shiny.tag})\cr
with text placed before the output to put the output into context.
For example a title.}

\item{post_output}{optional, (\code{shiny.tag})\cr
with text placed after the output to put the output into context. For example
the \code{\link[shiny:helpText]{shiny::helpText()}} elements are useful.}

\item{na_level}{(\code{character})\cr the NA level in the input dataset, default to \code{"<Missing>"}.}

\item{basic_table_args}{optional, (\code{basic_table_args})\cr
object created by \code{\link[teal.widgets:basic_table_args]{teal.widgets::basic_table_args()}} with settings for the module table.
The argument is merged with option \code{teal.basic_table_args} and with default module arguments
(hard coded in the module body).

For more details, see the vignette: \code{vignette("custom-basic-table-arguments", package = "teal.widgets")}.}
}
\description{
Teal Module: Abnormality Summary Table
}
\note{
Patients with the same abnormality at baseline as on the treatment visit can be
excluded in accordance with \code{GDSR} specifications by using \code{exclude_base_abn}.
}
\examples{
adsl <- tmc_ex_adsl
adlb <- tmc_ex_adlb \%>\%
  dplyr::mutate(
    ONTRTFL = dplyr::case_when(
      AVISIT \%in\% c("SCREENING", "BASELINE") ~ "",
      TRUE ~ "Y"
    ) \%>\% formatters::with_label("On Treatment Record Flag")
  )

app <- init(
  data = cdisc_data(
    cdisc_dataset("ADSL", adsl),
    cdisc_dataset("ADLB", adlb)
  ),
  modules = modules(
    tm_t_abnormality(
      label = "Abnormality Table",
      dataname = "ADLB",
      arm_var = choices_selected(
        choices = variable_choices(adsl, subset = c("ARM", "ARMCD")),
        selected = "ARM"
      ),
      add_total = FALSE,
      by_vars = choices_selected(
        choices = variable_choices(adlb, subset = c("LBCAT", "PARAM", "AVISIT")),
        selected = c("LBCAT", "PARAM"),
        keep_order = TRUE
      ),
      baseline_var = teal.transform::choices_selected(
        teal.transform::variable_choices(adlb, subset = "BNRIND"),
        selected = "BNRIND", fixed = TRUE
      ),
      grade = choices_selected(
        choices = variable_choices(adlb, subset = "ANRIND"),
        selected = "ANRIND",
        fixed = TRUE
      ),
      abnormal = list(low = "LOW", high = "HIGH"),
      exclude_base_abn = FALSE
    )
  )
)
if (interactive()) {
  shinyApp(app$ui, app$server)
}

}

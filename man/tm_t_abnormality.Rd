% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_t_abnormality.R
\name{tm_t_abnormality}
\alias{tm_t_abnormality}
\title{teal Module: Abnormality Summary Table}
\usage{
tm_t_abnormality(
  label,
  dataname,
  parentname = ifelse(inherits(arm_var, "data_extract_spec"),
    teal.transform::datanames_input(arm_var), "ADSL"),
  arm_var,
  by_vars,
  grade,
  abnormal = list(low = c("LOW", "LOW LOW"), high = c("HIGH", "HIGH HIGH")),
  id_var = teal.transform::choices_selected(teal.transform::variable_choices(dataname,
    subset = "USUBJID"), selected = "USUBJID", fixed = TRUE),
  baseline_var =
    teal.transform::choices_selected(teal.transform::variable_choices(dataname, subset =
    "BNRIND"), selected = "BNRIND", fixed = TRUE),
  treatment_flag_var =
    teal.transform::choices_selected(teal.transform::variable_choices(dataname, subset =
    "ONTRTFL"), selected = "ONTRTFL", fixed = TRUE),
  treatment_flag = teal.transform::choices_selected("Y"),
  add_total = TRUE,
  total_label = default_total_label(),
  exclude_base_abn = FALSE,
  drop_arm_levels = TRUE,
  pre_output = NULL,
  post_output = NULL,
  na_level = default_na_str(),
  basic_table_args = teal.widgets::basic_table_args()
)
}
\arguments{
\item{label}{(\code{character})\cr menu item label of the module in the teal app.}

\item{dataname}{(\code{character})\cr analysis data used in teal module.}

\item{parentname}{(\code{character})\cr parent analysis data used in teal module, usually this refers to \code{ADSL}.}

\item{arm_var}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr object with all
available choices and preselected option for variable names that can be used as \code{arm_var}.
It defines the grouping variable in the results table.}

\item{by_vars}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr object with all
available choices and preselected option for variable names used to split the summary by rows.}

\item{grade}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr
object with all available choices and preselected option for variable names that can be used to
specify the abnormality grade. Variable must be factor.}

\item{abnormal}{(\verb{named list})\cr defined by user to indicate what abnormalities are to be displayed.}

\item{id_var}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr object specifying
the variable name for subject id.}

\item{baseline_var}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr
variable for baseline abnormality grade.}

\item{treatment_flag_var}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr on
treatment flag variable.}

\item{treatment_flag}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr value
indicating on treatment records in \code{treatment_flag_var}.}

\item{add_total}{(\code{logical})\cr whether to include column with total number of patients.}

\item{total_label}{(\code{string})\cr string to display as total column/row label if column/row is
enabled (see \code{add_total}). Defaults to \code{"All Patients"}. To set a new default \code{total_label} to
apply in all modules, run \code{set_default_total_label("new_default")}.}

\item{exclude_base_abn}{(\code{logical})\cr whether to exclude patients who had abnormal values at baseline.}

\item{drop_arm_levels}{(\code{logical})\cr whether to drop unused levels of \code{arm_var}. If \code{TRUE}, \code{arm_var} levels are
set to those used in the \code{dataname} dataset. If \code{FALSE}, \code{arm_var} levels are set to those used in the
\code{parentname} dataset. If \code{dataname} and \code{parentname} are the same, then \code{drop_arm_levels} is set to \code{TRUE} and
user input for this parameter is ignored.}

\item{pre_output}{(\code{shiny.tag}) optional,\cr with text placed before the output to put the output into context.
For example a title.}

\item{post_output}{(\code{shiny.tag}) optional,\cr with text placed after the output to put the output into context.
For example the \code{\link[shiny:helpText]{shiny::helpText()}} elements are useful.}

\item{na_level}{(\code{character})\cr the NA level in the input dataset, default to \code{"<Missing>"}.}

\item{basic_table_args}{(\code{basic_table_args}) optional\cr object created by \code{\link[teal.widgets:basic_table_args]{teal.widgets::basic_table_args()}}
with settings for the module table. The argument is merged with option \code{teal.basic_table_args} and with default
module arguments (hard coded in the module body).
For more details, see the vignette: \code{vignette("custom-basic-table-arguments", package = "teal.widgets")}.}
}
\value{
a \code{teal_module} object.
}
\description{
This module produces a table to summarize abnormality.
}
\note{
Patients with the same abnormality at baseline as on the treatment visit can be
excluded in accordance with GDSR specifications by using \code{exclude_base_abn}.
}
\examples{
library(dplyr)

data <- teal_data()
data <- within(data, {
  ADSL <- tmc_ex_adsl
  ADLB <- tmc_ex_adlb \%>\%
    mutate(
      ONTRTFL = case_when(
        AVISIT \%in\% c("SCREENING", "BASELINE") ~ "",
        TRUE ~ "Y"
      ) \%>\% with_label("On Treatment Record Flag")
    )
})
datanames(data) <- c("ADSL", "ADLB")
join_keys(data) <- default_cdisc_join_keys[datanames(data)]

ADSL <- data[["ADSL"]]
ADLB <- data[["ADLB"]]

app <- init(
  data = data,
  modules = modules(
    tm_t_abnormality(
      label = "Abnormality Table",
      dataname = "ADLB",
      arm_var = choices_selected(
        choices = variable_choices(ADSL, subset = c("ARM", "ARMCD")),
        selected = "ARM"
      ),
      add_total = FALSE,
      by_vars = choices_selected(
        choices = variable_choices(ADLB, subset = c("LBCAT", "PARAM", "AVISIT")),
        selected = c("LBCAT", "PARAM"),
        keep_order = TRUE
      ),
      baseline_var = choices_selected(
        variable_choices(ADLB, subset = "BNRIND"),
        selected = "BNRIND", fixed = TRUE
      ),
      grade = choices_selected(
        choices = variable_choices(ADLB, subset = "ANRIND"),
        selected = "ANRIND",
        fixed = TRUE
      ),
      abnormal = list(low = "LOW", high = "HIGH"),
      exclude_base_abn = FALSE
    )
  )
)
if (interactive()) {
  shinyApp(app$ui, app$server)
}

}
\seealso{
The \href{https://insightsengineering.github.io/tlg-catalog/stable/}{TLG Catalog} where additional example
apps implementing this module can be found.
}
\section{Examples in Shinylive}{
\describe{
  \item{example-1}{
    \href{https://shinylive.io/r/app/#code=NobwRAdghgtgpmAXGKAHVA6ASmANGAYwHsIAXOMpMAGwEsAjAJykYE8AKcqajGIgEwCu1OAGcMBOhFoFuASgA60snGYFStAG5wABAB4AtDoBmgiOtol2cnQBUsAVQCiSpXSYsO-VNVaNFEEr8UKRQ+kZc1AD6waHWQSFhhjoA7rSkABa0EOyxULg6IEo6OgCCACIAygAy4TqkMARRcAAeUVD8otTFZeXVAEJ1DU2t7fzU9DoApAB8Uz0lMIKh5OwLJToA8gBy9rYAYrUAvDqyonBRKRkUaxAb92UAagCSlc+209lTp2tglQDCWCcTm2z22AHEFHgdFD+qVKk5qmCXGAbAA-GFgKG4db3ezOHQYqEATShuJ0Nlm3zSmSi1Cg9Dg1F+mzutkYcBC8DIOiwcGIjH4On29IA5lCAvcAgBfAJ5aDwUS5RI2ZIEX4VGrYzEVAYSpQAKyI2SiAGs4KwlXlVUZ+HBjFBhKQogR+LRRE0jSbzZbgPLYGJlaE5ABdVwQTW1ZJ5YDAKGRqEhsMRvqDaOJWPx1OJ5NKNCoOrZdK3Ep5HQnPI4u46PhCESics1gTCQPrBpRZ0MiBERgwbjpDjk+mM6iN+P0bu9-ukVh2BkibHk-3wMdgXX9RfV+4sGBRTQsRsEDLGghiKLnETqOD8EsPEpHk9iRv7xi0ecXB8yQORgqiQT0c5SEPDUsAAWW1eMwP+coJTkKs7xKC9+XIIUTkg8CsS3DY4PJDp+A7IhQlHE59lKaoEXgh56FYPcWAbE5P1PURzyZZDr1vO9GKfE4XzfegRBdY8vyVddf3-QDgKhAZ-lKWwILAAAFUosFKDCCnjF43jk1EcKw+4kKvVCfik-oZO09TFOU1SJUou9zTgVAoh7O1GEbfEXD0ilbI2egoAvbILhfQ8hKYljLxQjiHl499BMfETUzEgC4CAtCwH6bYsDBGDUW8-TWMM1d0sy7ZsoKYxaBaa83McDy710u9RWYO1grisK2Jvcl7xC7idGi-iP26+KBkSiTUtKDKspszqdAMlDV3G4rSum8rKqM9zyXqh4ux7PtiJ0OhRFIdhqCIFJV2qTYAHVtSyUUMlXAAJZ5wQeqbPNaSRBDtKJfPOdoJ0bUjyNq7CegCAJaGMHR2Gycg1A0bRrBsIpq1ELIIFYUp0HYfMABJBFoAo8fORhtH8JRpSUMBpRDIA}{Open in Shinylive}
    \if{html}{\out{<script type="text/javascript">$(function() {  var if_pkgdown = [...document.scripts].filter(x => x.src.includes("pkgdown.js")).length > 0;  if (if_pkgdown) {    $("iframe.iframe_shinylive").css("width", "150\%");  }});</script>}}
    \if{html}{\out{<iframe class="iframe_shinylive" src="https://shinylive.io/r/app/#code=NobwRAdghgtgpmAXGKAHVA6ASmANGAYwHsIAXOMpMAGwEsAjAJykYE8AKcqajGIgEwCu1OAGcMBOhFoFuASgA60snGYFStAG5wABAB4AtDoBmgiOtol2cnQBUsAVQCiSpXSYsO-VNVaNFEEr8UKRQ+kZc1AD6waHWQSFhhjoA7rSkABa0EOyxULg6IEo6OgCCACIAygAy4TqkMARRcAAeUVD8otTFZeXVAEJ1DU2t7fzU9DoApAB8Uz0lMIKh5OwLJToA8gBy9rYAYrUAvDqyonBRKRkUaxAb92UAagCSlc+209lTp2tglQDCWCcTm2z22AHEFHgdFD+qVKk5qmCXGAbAA-GFgKG4db3ezOHQYqEATShuJ0Nlm3zSmSi1Cg9Dg1F+mzutkYcBC8DIOiwcGIjH4On29IA5lCAvcAgBfAJ5aDwUS5RI2ZIEX4VGrYzEVAYSpQAKyI2SiAGs4KwlXlVUZ+HBjFBhKQogR+LRRE0jSbzZbgPLYGJlaE5ABdVwQTW1ZJ5YDAKGRqEhsMRvqDaOJWPx1OJ5NKNCoOrZdK3Ep5HQnPI4u46PhCESics1gTCQPrBpRZ0MiBERgwbjpDjk+mM6iN+P0bu9-ukVh2BkibHk-3wMdgXX9RfV+4sGBRTQsRsEDLGghiKLnETqOD8EsPEpHk9iRv7xi0ecXB8yQORgqiQT0c5SEPDUsAAWW1eMwP+coJTkKs7xKC9+XIIUTkg8CsS3DY4PJDp+A7IhQlHE59lKaoEXgh56FYPcWAbE5P1PURzyZZDr1vO9GKfE4XzfegRBdY8vyVddf3-QDgKhAZ-lKWwILAAAFUosFKDCCnjF43jk1EcKw+4kKvVCfik-oZO09TFOU1SJUou9zTgVAoh7O1GEbfEXD0ilbI2egoAvbILhfQ8hKYljLxQjiHl499BMfETUzEgC4CAtCwH6bYsDBGDUW8-TWMM1d0sy7ZsoKYxaBaa83McDy710u9RWYO1grisK2Jvcl7xC7idGi-iP26+KBkSiTUtKDKspszqdAMlDV3G4rSum8rKqM9zyXqh4ux7PtiJ0OhRFIdhqCIFJV2qTYAHVtSyUUMlXAAJZ5wQeqbPNaSRBDtKJfPOdoJ0bUjyNq7CegCAJaGMHR2Gycg1A0bRrBsIpq1ELIIFYUp0HYfMABJBFoAo8fORhtH8JRpSUMBpRDIA" style="height: 800px; width: 100\%; border: 1px solid rgba(0,0,0,0.175); border-radius: .375rem; position: relative; z-index: 1"></iframe>}}
  }
}
}


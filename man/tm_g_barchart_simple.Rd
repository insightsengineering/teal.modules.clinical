% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_g_barchart_simple.R
\name{tm_g_barchart_simple}
\alias{tm_g_barchart_simple}
\title{teal Module: Simple Bar Chart and Table of Counts per Category}
\usage{
tm_g_barchart_simple(
  x = NULL,
  fill = NULL,
  x_facet = NULL,
  y_facet = NULL,
  label = "Count Barchart",
  plot_options = NULL,
  plot_height = c(600L, 200L, 2000L),
  plot_width = NULL,
  pre_output = NULL,
  post_output = NULL,
  ggplot2_args = teal.widgets::ggplot2_args()
)
}
\arguments{
\item{x}{(\code{data_extract_spec})\cr variable on the x-axis.}

\item{fill}{(\code{data_extract_spec})\cr grouping variable to determine bar colors.}

\item{x_facet}{(\code{data_extract_spec})\cr row-wise faceting groups.}

\item{y_facet}{(\code{data_extract_spec})\cr column-wise faceting groups.}

\item{label}{(\code{character})\cr menu item label of the module in the teal app.}

\item{plot_options}{(\code{list})\cr list of plot options.}

\item{plot_height}{(\code{numeric}) optional\cr vector of length three with \code{c(value, min, max)}. Specifies the
height of the main plot and renders a slider on the plot to interactively adjust the plot height.}

\item{plot_width}{(\code{numeric}) optional\cr vector of length three with \code{c(value, min, max)}. Specifies the width
of the main plot and renders a slider on the plot to interactively adjust the plot width.}

\item{pre_output}{(\code{shiny.tag}) optional,\cr with text placed before the output to put the output into context.
For example a title.}

\item{post_output}{(\code{shiny.tag}) optional,\cr with text placed after the output to put the output into context.
For example the \code{\link[shiny:helpText]{shiny::helpText()}} elements are useful.}

\item{ggplot2_args}{(\code{ggplot2_args}) optional\cr object created by \code{\link[teal.widgets:ggplot2_args]{teal.widgets::ggplot2_args()}} with settings
for the module plot. The argument is merged with option \code{teal.ggplot2_args} and with default module arguments
(hard coded in the module body).
For more details, see the vignette: \code{vignette("custom-ggplot2-arguments", package = "teal.widgets")}.}
}
\value{
a \code{teal_module} object.
}
\description{
This module produces a \code{\link[ggplot2:ggplot]{ggplot2::ggplot()}} type bar chart and summary table of counts per category.
}
\details{
Categories can be defined up to four levels deep and are defined through the \code{x}, \code{fill},
\code{x_facet}, and \code{y_facet} parameters. Any parameters set to \code{NULL} (default) are ignored.
}
\examples{
library(nestcolor)
library(dplyr)

data <- teal_data()
data <- within(data, {
  ADSL <- tmc_ex_adsl \%>\%
    mutate(ITTFL = factor("Y") \%>\%
      with_label("Intent-To-Treat Population Flag"))
  ADAE <- tmc_ex_adae \%>\%
    filter(!((AETOXGR == 1) & (AESEV == "MILD") & (ARM == "A: Drug X")))
})
datanames(data) <- c("ADSL", "ADAE")
join_keys(data) <- default_cdisc_join_keys[datanames(data)]

ADSL <- data[["ADSL"]]
ADAE <- data[["ADAE"]]

app <- init(
  data = data,
  modules = modules(
    tm_g_barchart_simple(
      label = "ADAE Analysis",
      x = data_extract_spec(
        dataname = "ADSL",
        select = select_spec(
          choices = variable_choices(
            ADSL,
            c(
              "ARM", "ACTARM", "SEX",
              "RACE", "ITTFL", "SAFFL", "STRATA2"
            )
          ),
          selected = "ACTARM",
          multiple = FALSE
        )
      ),
      fill = list(
        data_extract_spec(
          dataname = "ADSL",
          select = select_spec(
            choices = variable_choices(
              ADSL,
              c(
                "ARM", "ACTARM", "SEX",
                "RACE", "ITTFL", "SAFFL", "STRATA2"
              )
            ),
            selected = "SEX",
            multiple = FALSE
          )
        ),
        data_extract_spec(
          dataname = "ADAE",
          select = select_spec(
            choices = variable_choices(ADAE, c("AETOXGR", "AESEV", "AESER")),
            selected = NULL,
            multiple = FALSE
          )
        )
      ),
      x_facet = list(
        data_extract_spec(
          dataname = "ADAE",
          select = select_spec(
            choices = variable_choices(ADAE, c("AETOXGR", "AESEV", "AESER")),
            selected = "AETOXGR",
            multiple = FALSE
          )
        ),
        data_extract_spec(
          dataname = "ADSL",
          select = select_spec(
            choices = variable_choices(
              ADSL,
              c(
                "ARM", "ACTARM", "SEX",
                "RACE", "ITTFL", "SAFFL", "STRATA2"
              )
            ),
            selected = NULL,
            multiple = FALSE
          )
        )
      ),
      y_facet = list(
        data_extract_spec(
          dataname = "ADAE",
          select = select_spec(
            choices = variable_choices(ADAE, c("AETOXGR", "AESEV", "AESER")),
            selected = "AESEV",
            multiple = FALSE
          )
        ),
        data_extract_spec(
          dataname = "ADSL",
          select = select_spec(
            choices = variable_choices(
              ADSL,
              c(
                "ARM", "ACTARM", "SEX",
                "RACE", "ITTFL", "SAFFL", "STRATA2"
              )
            ),
            selected = NULL,
            multiple = FALSE
          )
        )
      )
    )
  )
)
if (interactive()) {
  shinyApp(app$ui, app$server)
}

}
\seealso{
The \href{https://insightsengineering.github.io/tlg-catalog/stable/}{TLG Catalog} where additional example
apps implementing this module can be found.
}
\section{Examples in Shinylive}{
\describe{
  \item{example-1}{
    \href{https://shinylive.io/r/app/#code=NobwRAdghgtgpmAXGKAHVA6ASmANGAYwHsIAXOMpMAGwEsAjAJykYE8AKcqajGIgEwCu1OAGcMBOhFoFuASgA60snGYFStAG5wABAB4AtDoBmgiOtol2cnQBUsAVQCiSpXSYsOEMaWLUijIoQ7sxs7Pyo1KyBrhD8UKRQ+kZc1AD68YnWSplJhjoA7rSkABa0EOEJULg6IEo6OgCCACIAygAyyTqkMARpcAAeaVD8otQ6AKQAfBP1DTowgonk7ACStrYAYp0AvCZQ6gHsCmAAmic207MQ8-NFpWnUUPRw1MdgqypkBrZEP4xwBI6AAKRFQwgSlhumyeAHMLkEGi1Gk4uj0+oNhvFdFc5g1jLRqORGOwAITsdgo2wAeQAGgBxLA6HZ7ACMNgAZDpKU5Wk4AGrMvYnACyq3azQuOi5lKwIqFOhOjUQOmajEEsJ0tIRQQAvkFctB4KJKokbPkCO8Wh0TjUlc0URclAArIjlNIAazgrBNuXNRn4cGMUGEpDSBH4tFEfVd7q9PuAhtgYlNUDkAF1YtbOvlcsBgPabWB05mIMjUbmqvn7Y7i6WlGhUF1ysVjjcdLlmR2qrg5nwhCJRF3+8IU3jujA0rC0vQWAQSiww6JaDBInA27cGk8XuNhWBy01oFFl6JbeOGgMu7l+gNSGol6g4Jbz-Mk-Au4X2mf25udKJXk+pBdv+IjqGkoiPs+P6-jo85ugQYhdpoLC0M8IjhiU8FjtBMFNG07S9jhMFQbhv5KnKtqKvuADCtiNBReBUXy2p4C+uEnFgjTUS4jEnOsWxfrxYCtI0mzbJRJytPYjR0QATCcbGboipFyIRpF-gB6hwPwH40XRDFqaRixErQa5dpsjTtHyinKbcqkvgS1C7jodCiKQG4wdegx3gcD5Ph5uFvroe7Zt+6kgYBwGaX5JHqbBmEyIhezIYwqH0OhcGJSaim-tmhlxbBAUFVR9EihJemleVzFhcVDQcVxPF2h8GziUJIliYJTVSZxckKURuG2Sp+WkRFWk6Xu1Wsf1m7GRoZl7BZVkuNNDSDXZw23F5t73uBkFFb+QW6eWNW4aNQF7Gdu3+Tl8yZQhQ7JShaFwBhWEmuWNTPvuTg0gyWDlSifL8gDvJOP9YByPZK3zGd2ldgAcg47QETdDSzaZIjmZZ1nQ2t8x41Dv5DMGCHnS5UbuYpW0+WBEHXdDh0hQ6jU3WdUWgTF+3EQl91IU96UvXdKYfYVSo-XSjIg0DUtgwiG0wbD40leLf0nUZoYY8FOiLTj6l46t8sNNTO107FgVVEaWufmrv5sxd0VXWbpFCw9OgpWlGU89htV5ajt1c+p5FlUJXH6cHXVOCxhukfV3HlfxrVdaJidMdJvVgH7q1+4TcWKwjSMo9DaMa-N2vY8tes2S+Oe3KwaQk3AZOuZT03G75jsB6+FvJkdzM25udsaRzHd+y7fOpc9r1ZZSzOfVaKuSyHoPA0vfLg5D0e3HnIXL-3v7o6XOsVypNnR23tN7TdjMlfhe8w9F7OASPRfxW948e4LXvZS-SL4Zvm5OwKkHAGtFKptUjnfdiYBOJxyEgnTqTFk4IMkmnRo8kM4-x0PrJS-8Gjbx0IjZGuCFgl0xgtcuN1sEE3HMpIIQRaDGG5OUYkvktDrkhrUOYogygQFYI0dA7BGwABJBC0BqMI-8jBtAxAgLqJQYBdTpiAA}{Open in Shinylive}
    \if{html}{\out{<script type="text/javascript">$(function() {  var if_pkgdown = [...document.scripts].filter(x => x.src.includes("pkgdown.js")).length > 0;  if (if_pkgdown) {    $("iframe.iframe_shinylive").css("width", "150\%");  }});</script>}}
    \if{html}{\out{<iframe class="iframe_shinylive" src="https://shinylive.io/r/app/#code=NobwRAdghgtgpmAXGKAHVA6ASmANGAYwHsIAXOMpMAGwEsAjAJykYE8AKcqajGIgEwCu1OAGcMBOhFoFuASgA60snGYFStAG5wABAB4AtDoBmgiOtol2cnQBUsAVQCiSpXSYsOEMaWLUijIoQ7sxs7Pyo1KyBrhD8UKRQ+kZc1AD68YnWSplJhjoA7rSkABa0EOEJULg6IEo6OgCCACIAygAyyTqkMARpcAAeaVD8otQ6AKQAfBP1DTowgonk7ACStrYAYp0AvCZQ6gHsCmAAmic207MQ8-NFpWnUUPRw1MdgqypkBrZEP4xwBI6AAKRFQwgSlhumyeAHMLkEGi1Gk4uj0+oNhvFdFc5g1jLRqORGOwAITsdgo2wAeQAGgBxLA6HZ7ACMNgAZDpKU5Wk4AGrMvYnACyq3azQuOi5lKwIqFOhOjUQOmajEEsJ0tIRQQAvkFctB4KJKokbPkCO8Wh0TjUlc0URclAArIjlNIAazgrBNuXNRn4cGMUGEpDSBH4tFEfVd7q9PuAhtgYlNUDkAF1YtbOvlcsBgPabWB05mIMjUbmqvn7Y7i6WlGhUF1ysVjjcdLlmR2qrg5nwhCJRF3+8IU3jujA0rC0vQWAQSiww6JaDBInA27cGk8XuNhWBy01oFFl6JbeOGgMu7l+gNSGol6g4Jbz-Mk-Au4X2mf25udKJXk+pBdv+IjqGkoiPs+P6-jo85ugQYhdpoLC0M8IjhiU8FjtBMFNG07S9jhMFQbhv5KnKtqKvuADCtiNBReBUXy2p4C+uEnFgjTUS4jEnOsWxfrxYCtI0mzbJRJytPYjR0QATCcbGboipFyIRpF-gB6hwPwH40XRDFqaRixErQa5dpsjTtHyinKbcqkvgS1C7jodCiKQG4wdegx3gcD5Ph5uFvroe7Zt+6kgYBwGaX5JHqbBmEyIhezIYwqH0OhcGJSaim-tmhlxbBAUFVR9EihJemleVzFhcVDQcVxPF2h8GziUJIliYJTVSZxckKURuG2Sp+WkRFWk6Xu1Wsf1m7GRoZl7BZVkuNNDSDXZw23F5t73uBkFFb+QW6eWNW4aNQF7Gdu3+Tl8yZQhQ7JShaFwBhWEmuWNTPvuTg0gyWDlSifL8gDvJOP9YByPZK3zGd2ldgAcg47QETdDSzaZIjmZZ1nQ2t8x41Dv5DMGCHnS5UbuYpW0+WBEHXdDh0hQ6jU3WdUWgTF+3EQl91IU96UvXdKYfYVSo-XSjIg0DUtgwiG0wbD40leLf0nUZoYY8FOiLTj6l46t8sNNTO107FgVVEaWufmrv5sxd0VXWbpFCw9OgpWlGU89htV5ajt1c+p5FlUJXH6cHXVOCxhukfV3HlfxrVdaJidMdJvVgH7q1+4TcWKwjSMo9DaMa-N2vY8tes2S+Oe3KwaQk3AZOuZT03G75jsB6+FvJkdzM25udsaRzHd+y7fOpc9r1ZZSzOfVaKuSyHoPA0vfLg5D0e3HnIXL-3v7o6XOsVypNnR23tN7TdjMlfhe8w9F7OASPRfxW948e4LXvZS-SL4Zvm5OwKkHAGtFKptUjnfdiYBOJxyEgnTqTFk4IMkmnRo8kM4-x0PrJS-8Gjbx0IjZGuCFgl0xgtcuN1sEE3HMpIIQRaDGG5OUYkvktDrkhrUOYogygQFYI0dA7BGwABJBC0BqMI-8jBtAxAgLqJQYBdTpiAA" style="height: 800px; width: 100\%; border: 1px solid rgba(0,0,0,0.175); border-radius: .375rem; position: relative; z-index: 1"></iframe>}}
  }
}
}


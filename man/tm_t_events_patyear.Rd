% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_t_events_patyear.R
\name{tm_t_events_patyear}
\alias{tm_t_events_patyear}
\title{Teal module: Event rates adjusted for patient-years}
\usage{
tm_t_events_patyear(
  label,
  dataname,
  parentname = ifelse(inherits(arm_var, "data_extract_spec"),
    teal.transform::datanames_input(arm_var), "ADSL"),
  arm_var,
  events_var,
  paramcd,
  aval_var = teal.transform::choices_selected(teal.transform::variable_choices(dataname,
    "AVAL"), "AVAL", fixed = TRUE),
  avalu_var = teal.transform::choices_selected(teal.transform::variable_choices(dataname,
    "AVALU"), "AVALU", fixed = TRUE),
  add_total = TRUE,
  total_label = "All Patients",
  conf_level = teal.transform::choices_selected(c(0.95, 0.9, 0.8), 0.95, keep_order =
    TRUE),
  drop_arm_levels = TRUE,
  pre_output = NULL,
  post_output = NULL,
  basic_table_args = teal.widgets::basic_table_args()
)
}
\arguments{
\item{label}{(\code{character})\cr
menu item label of the module in the teal app.}

\item{dataname}{(\code{character})\cr
analysis data used in teal module.}

\item{parentname}{(\code{character})\cr
parent analysis data used in teal module, usually this refers to \code{ADSL}.}

\item{arm_var}{(\code{choices_selected} or \code{data_extract_spec})\cr
object with all available choices
and preselected option for variable names that can be used as \code{arm_var}.
It defines the grouping variable(s) in the results table.
If there are two elements selected for \code{arm_var},
second variable will be nested under the first variable.}

\item{events_var}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}} or \code{\link[teal.transform:data_extract_spec]{teal.transform::data_extract_spec()}})\cr
object with all event counts.}

\item{paramcd}{(\code{choices_selected} or \code{data_extract_spec})\cr
variable value designating the studied parameter.}

\item{aval_var}{(\code{choices_selected} or \code{data_extract_spec})\cr
object with all available choices and preselected option for the analysis
variable.}

\item{avalu_var}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}} or \code{\link[teal.transform:data_extract_spec]{teal.transform::data_extract_spec()}})\cr
object with all available choices and preselected option for the analysis unit variable.}

\item{add_total}{(\code{logical})\cr
whether to include column with total number of patients.}

\item{total_label}{(\code{string})\cr string to display as total column/row label if column/row is
enabled (see \code{add_total}).}

\item{conf_level}{(\code{choices_selected})\cr
object with all available choices and preselected option for the confidence
level, each within range of (0, 1).}

\item{drop_arm_levels}{(\code{logical})\cr drop the unused \code{arm_var} levels.
When \code{TRUE}, \code{arm_var} levels are set to those used in the \code{dataname} dataset. When \code{FALSE},
\code{arm_var} levels are set to those used in the \code{parantname} dataset.}

\item{pre_output}{optional, (\code{shiny.tag})\cr
with text placed before the output to put the output into context.
For example a title.}

\item{post_output}{optional, (\code{shiny.tag})\cr
with text placed after the output to put the output into context. For example
the \code{\link[shiny:helpText]{shiny::helpText()}} elements are useful.}

\item{basic_table_args}{optional, (\code{basic_table_args})\cr
object created by \code{\link[teal.widgets:basic_table_args]{teal.widgets::basic_table_args()}} with settings for the module table.
The argument is merged with option \code{teal.basic_table_args} and with default module arguments
(hard coded in the module body).

For more details, see the vignette: \code{vignette("custom-basic-table-arguments", package = "teal.widgets")}.}
}
\description{
Teal module: Event rates adjusted for patient-years
}
\examples{
adsl <- tmc_ex_adsl
adaette <- tmc_ex_adaette \%>\%
  dplyr::filter(PARAMCD \%in\% c("AETTE1", "AETTE2", "AETTE3")) \%>\%
  dplyr::mutate(is_event = CNSR == 0) \%>\%
  dplyr::mutate(n_events = as.integer(is_event))

app <- init(
  data = cdisc_data(
    cdisc_dataset("ADSL", adsl),
    cdisc_dataset("ADAETTE", adaette)
  ),
  modules = modules(
    tm_t_events_patyear(
      label = "AE Rate Adjusted for Patient-Years At Risk Table",
      dataname = "ADAETTE",
      arm_var = choices_selected(
        choices = variable_choices(adsl, c("ARM", "ARMCD")),
        selected = "ARMCD"
      ),
      add_total = TRUE,
      events_var = choices_selected(
        choices = variable_choices(adaette, "n_events"),
        selected = "n_events",
        fixed = TRUE
      ),
      paramcd = choices_selected(
        choices = value_choices(adaette, "PARAMCD", "PARAM"),
        selected = "AETTE1"
      )
    )
  )
)
if (interactive()) {
  shinyApp(app$ui, app$server)
}

}

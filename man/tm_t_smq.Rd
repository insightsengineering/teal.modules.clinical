% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_t_smq.R
\name{tm_t_smq}
\alias{tm_t_smq}
\title{Teal Module: SMQ Table}
\usage{
tm_t_smq(
  label,
  dataname,
  parentname = ifelse(is(arm_var, "data_extract_spec"), datanames_input(arm_var),
    "ADSL"),
  arm_var,
  id_var = choices_selected(variable_choices(dataname, subset = "USUBJID"), selected =
    "USUBJID", fixed = TRUE),
  col_by_var,
  llt,
  add_total = TRUE,
  drop_arm_levels = TRUE,
  na_level = "<Missing>",
  smq_varlabel = "Standardized MedDRA Query",
  baskets,
  scopes,
  keys = c("STUDYID", "USUBJID", "ASTDTM", "AESEQ", "AETERM"),
  astdtm = choices_selected(variable_choices(dataname, subset = "ASTDTM"), selected =
    "ASTDTM", fixed = TRUE),
  aeterm = choices_selected(variable_choices(dataname, subset = "AETERM"), selected =
    "AETERM", fixed = TRUE),
  aeseq = choices_selected(variable_choices(dataname, subset = "AESEQ"), selected =
    "AESEQ", fixed = TRUE),
  sort_by_descending = TRUE,
  pre_output = NULL,
  post_output = NULL
)
}
\arguments{
\item{label}{(\code{character})\cr
menu item label of the module in the teal app}

\item{dataname}{(\code{character})\cr
analysis data used in teal module.}

\item{parentname}{(\code{character})\cr
parent analysis data used in teal module, usually this refers to \code{ADSL}.}

\item{arm_var}{(\code{\link[teal:choices_selected]{teal::choices_selected()}} or \code{\link[teal:data_extract_spec]{teal::data_extract_spec()}})\cr
object with all available choices
and preselected option for variable names that can be used as \code{arm_var}.}

\item{id_var}{(\code{\link[teal:choices_selected]{teal::choices_selected()}} or \code{\link[teal:data_extract_spec]{teal::data_extract_spec()}})\cr
object specifying the variable name for subject id.}

\item{col_by_var}{(\code{\link[teal:choices_selected]{teal::choices_selected()}} or \link[teal:data_extract_spec]{teal::data_extract_spec})\cr
object with all available choices and preselected option for
variable names that can be used to split columns.}

\item{llt}{(\code{\link[teal:choices_selected]{teal::choices_selected()}} or \code{\link[teal:data_extract_spec]{teal::data_extract_spec()}})\cr
name of the variable with low level term for events.}

\item{add_total}{(\code{logical})\cr
whether to include column with total number of patients.}

\item{drop_arm_levels}{(\code{logical})\cr drop the unused \code{arm_var} levels.
When \code{TRUE}, \code{arm_var} levels are set to those used in the \code{dataname} dataset. When \code{FALSE},
\code{arm_var} levels are set to those used in the \code{parantname} dataset.}

\item{na_level}{(\code{string})\cr used to replace all \code{NA} or empty values
in character or factor variables in the data.}

\item{smq_varlabel}{(\code{character})\cr label of the new column \code{SMQ}
created by \code{\link[tern:h_stack_by_baskets]{tern::h_stack_by_baskets()}}.}

\item{baskets}{(\code{character})\cr
variable names of the selected Standardized/Customized queries}

\item{keys}{(\code{character})\cr argument from \code{\link[tern:h_stack_by_baskets]{tern::h_stack_by_baskets()}}
with names of the key variables to be returned.}

\item{sort_by_descending}{(\code{flag})\cr whether the table should be
sorted in descending order (alphabetically sorted otherwise).}

\item{pre_output}{optional, (\code{shiny.tag})\cr
with text placed before the output to put the output into context.
For example a title.}

\item{post_output}{optional, (\code{shiny.tag})\cr
with text placed after the output to put the output into context. For example
the \code{\link[shiny:helpText]{shiny::helpText()}} elements are useful.}
}
\description{
Teal Module: SMQ Table
}
\examples{
library(scda)


adsl <- synthetic_cdisc_data("latest")$adsl
adae <- synthetic_cdisc_data("latest")$adae

names_baskets <- grep("^(SMQ|CQ).*NAM$", names(adae), value = TRUE)
names_scopes <- grep("^SMQ.*SC$", names(adae), value = TRUE)

cs_baskets <- choices_selected(
choices = variable_choices(adae, subset = names_baskets),
selected = names_baskets
)

cs_scopes <- choices_selected(
choices = variable_choices(adae, subset = names_scopes),
selected = names_scopes,
fixed = TRUE
)


app <- init(
  data = cdisc_data(
    cdisc_dataset("ADSL", adsl,
    code = "ADSL <- synthetic_cdisc_data('latest')$adsl"
    ),
    cdisc_dataset("ADAE", adae,
      code = "ADAE <- synthetic_cdisc_data('latest')$adae"
      ),
    check = TRUE
  ),
  modules = root_modules(
    tm_t_smq(
      label = "Adverse events by SMQ Table",
      dataname = "ADAE",
      arm_var = choices_selected(
        choices = variable_choices(adsl, subset = c("ARM", "ARMCD")),
        selected = "ARM"
      ),
      add_total = FALSE,
      col_by_var = choices_selected(
        choices = variable_choices(adae, subset = c("SEX", "STRATA1")),
        selected = "SEX"
      ),
      baskets = cs_baskets,
      scopes = cs_scopes,
      llt = choices_selected(
        choices = variable_choices(adae, subset = c("AEDECOD")),
        selected = "AEDECOD"
      )
    )
  )
)

\dontrun{
shinyApp(app$ui, app$server)
}


}

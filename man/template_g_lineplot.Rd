% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_g_lineplot.R
\name{template_g_lineplot}
\alias{template_g_lineplot}
\title{Template: Line Plot}
\usage{
template_g_lineplot(
  dataname = "ANL",
  strata = "ARM",
  x = "AVISIT",
  y = "AVAL",
  y_unit = "AVALU",
  paramcd = "PARAMCD",
  param = "ALT",
  mid = "mean",
  interval = "mean_ci",
  whiskers = c("mean_ci_lwr", "mean_ci_upr"),
  table = c("n", "mean_sd", "median", "range"),
  mid_type = "pl",
  conf_level = 0.95,
  incl_screen = TRUE,
  mid_point_size = 2,
  table_font_size = 4,
  title = "Line Plot",
  y_lab = "",
  ggplot2_args = teal.widgets::ggplot2_args()
)
}
\arguments{
\item{dataname}{(\code{character})\cr
analysis data used in teal module.}

\item{strata}{(\code{character} or \code{NA})\cr strata variable name.}

\item{x}{(\code{character})\cr x variable name.}

\item{y}{(\code{character})\cr y variable name.}

\item{y_unit}{(\code{character} or \code{NA})\cr \code{y_unit} variable name.}

\item{paramcd}{(\code{character} or \code{NA})\cr \code{paramcd} variable name.}

\item{param}{(\code{character})\cr
parameter chosen to filter the data by.}

\item{mid}{(\code{character} or \code{NULL})\cr names of the statistics that will be plotted as midpoints.
All the statistics indicated in \code{mid} variable must be present in the object returned by \code{sfun},
and be of a \code{double} or \code{numeric} type vector of length one.}

\item{interval}{(\code{character} or \code{NULL})\cr names of the statistics that will be plotted as intervals.
All the statistics indicated in \code{interval} variable must be present in the object returned by \code{sfun},
and be of a \code{double} or \code{numeric} type vector of length two.}

\item{whiskers}{(\code{character})\cr names of the interval whiskers that will be plotted. Must match the \code{names}
attribute of the \code{interval} element in the list returned by \code{sfun}. It is possible to specify one whisker only,
lower or upper.}

\item{table}{(\code{character} or \code{NULL})\cr names of the statistics that will be displayed in the table below the plot.
All the statistics indicated in \code{table} variable must be present in the object returned by \code{sfun}.}

\item{mid_type}{(\code{character})\cr controls the type of the \code{mid} plot, it can be point (\code{p}), line (\code{l}),
or point and line (\code{pl}).}

\item{conf_level}{(\code{numeric})\cr
value for the confidence level within the range of (0, 1).}

\item{incl_screen}{(\code{logical})\cr
should the screening visit be included.}

\item{mid_point_size}{(\code{integer} or \code{double})\cr controls the font size of the point for \code{mid} plot.}

\item{table_font_size}{(\code{integer} or \code{double})\cr controls the font size of values in the table.}

\item{title}{(\code{character})\cr plot title.}

\item{y_lab}{(\code{character})\cr y-axis label. If equal to \code{NULL}, then no label will be added.}

\item{ggplot2_args}{optional, (\code{ggplot2_args})\cr
object created by \code{\link[teal.widgets:ggplot2_args]{teal.widgets::ggplot2_args()}} with settings for the module plot.
For this module, this argument will only accept \code{ggplot2_args} object with \code{labs} list of following child elements:
\code{title}, \code{subtitle}, \code{caption}, \code{y}, \code{lty}.
No other elements would be taken into account. The argument is merged with option \code{teal.ggplot2_args} and
with default module arguments (hard coded in the module body).

For more details, see the vignette: \code{vignette("custom-ggplot2-arguments", package = "teal.widgets")}.}
}
\description{
Template: Line Plot
}
\seealso{
\code{\link[=tm_g_lineplot]{tm_g_lineplot()}}
}
\keyword{internal}

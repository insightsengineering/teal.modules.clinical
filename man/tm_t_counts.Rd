% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tm_t_counts.R
\name{tm_t_counts}
\alias{tm_t_counts}
\title{Teal Module: Counts}
\usage{
tm_t_counts(
  label = "Counts Module",
  dataname,
  parentname = ifelse(inherits(arm_var, "data_extract_spec"),
    teal.transform::datanames_input(arm_var), "ADSL"),
  aval_var = teal.transform::choices_selected(teal.transform::variable_choices(dataname,
    "AVAL"), "AVAL", fixed = TRUE),
  arm_var,
  strata_var,
  rate_mean_method = c("emmeans", "ppmeans"),
  distribution = c("negbin", "quasipoisson", "poisson"),
  offset_var,
  cov_var,
  arm_ref_comp = NULL,
  conf_level = teal.transform::choices_selected(c(0.95, 0.9, 0.8), 0.95, keep_order =
    TRUE),
  pre_output = NULL,
  post_output = NULL,
  basic_table_args = teal.widgets::basic_table_args(),
  transformators = list(),
  decorators = list()
)
}
\arguments{
\item{label}{(\code{character})\cr menu item label of the module in the teal app.}

\item{dataname}{(\code{character})\cr analysis data used in teal module.}

\item{parentname}{(\code{character})\cr parent analysis data used in teal module, usually this refers to \code{ADSL}.}

\item{aval_var}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr object with
all available choices and pre-selected option for the analysis variable.}

\item{arm_var}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr object with all
available choices and preselected option for variable names that can be used as \code{arm_var}.
It defines the grouping variable in the results table.}

\item{strata_var}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr names of
the variables for stratified analysis.}

\item{rate_mean_method}{method used to estimate the mean odds ratio. Either "emmeans" or "ppmeans".}

\item{distribution}{a character value specifying the distribution used in the regression (Poisson: \code{"poisson"},  Quasi-Poisson: \code{"quasipoisson"}, negative binomial: \code{"negbin"}).}

\item{offset_var}{a character value specifying a numeric vector adding an offset.}

\item{cov_var}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr object with all
available choices and preselected option for the covariates variables.}

\item{arm_ref_comp}{(\code{list}) optional,\cr if specified it must be a named list with each element corresponding to
an arm variable in \code{ADSL} and the element must be another list (possibly
with delayed \code{\link[teal.transform:variable_choices]{teal.transform::variable_choices()}} or delayed \code{\link[teal.transform:value_choices]{teal.transform::value_choices()}}
with the elements named \code{ref} and \code{comp} that the defined the default
reference and comparison arms when the arm variable is changed.}

\item{conf_level}{(\code{\link[teal.transform:choices_selected]{teal.transform::choices_selected()}})\cr object with all available choices and
pre-selected option for confidence level, each within range of (0, 1).}

\item{pre_output}{(\code{shiny.tag}) optional,\cr with text placed before the output to put the output into context.
For example a title.}

\item{post_output}{(\code{shiny.tag}) optional,\cr with text placed after the output to put the output into context.
For example the \code{\link[shiny:helpText]{shiny::helpText()}} elements are useful.}

\item{basic_table_args}{Other arguments passed to generate the table.}

\item{transformators}{(\code{list} of \code{teal_transform_module}) that will be applied to transform module's data input.
To learn more check \code{vignette("transform-input-data", package = "teal")}.}

\item{decorators}{\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}
(named \code{list} of lists of \code{teal_transform_module}) optional,
decorator for tables or plots included in the module output reported.
The decorators are applied to the respective output objects.

See section "Decorating Module" below for more details.}
}
\value{
a \code{teal_module} object.
}
\description{
This module produces a frequency table.
}
\details{
\itemize{
\item The core functionality of this module is based on \code{\link[tern:summarize_glm_count]{tern::summarize_glm_count()}} from the \code{tern} package.
\item The arm and stratification variables are taken from the \code{parentname} data.
}
}
\section{Decorating Module}{


This module generates the following objects, which can be modified in place using decorators:
\itemize{
\item \code{table} (\code{TableTree} - output of \code{rtables::build_table()})
}

A Decorator is applied to the specific output using a named list of \code{teal_transform_module} objects.
The name of this list corresponds to the name of the output to which the decorator is applied.
See code snippet below:

\if{html}{\out{<div class="sourceCode">}}\preformatted{tm_t_counts(
   ..., # arguments for module
   decorators = list(
     table = teal_transform_module(...) # applied only to `table` output
   )
)
}\if{html}{\out{</div>}}

For additional details and examples of decorators, refer to the vignette
\code{vignette("decorate-module-output", package = "teal.modules.clinical")}.

To learn more please refer to the vignette
\code{vignette("transform-module-output", package = "teal")} or the \code{\link[teal:teal_transform_module]{teal::teal_transform_module()}} documentation.
}

\examples{
data <- within(teal_data(), {
  library("tern")
  ADSL <- tern_ex_adsl
  ADTTE <- tern_ex_adtte
})

join_keys(data) <- default_cdisc_join_keys[names(data)]

arm_ref_comp <- list(
  ACTARMCD = list(
    ref = "ARM B",
    comp = c("ARM A", "ARM C")
  ),
  ARM = list(
    ref = "B: Placebo",
    comp = c("A: Drug X", "C: Combination")
  )
)

ADSL <- data[["ADSL"]]
ADTTE <- data[["ADTTE"]]
# Initialize the teal app
app <- init(
  data = data,
  modules = modules(
    tm_t_counts(
      dataname = "ADTTE",
      arm_var = choices_selected(
        variable_choices(ADTTE, c("ARM", "ARMCD", "ACTARMCD")),
        "ARMCD"
      ),
      arm_ref_comp = arm_ref_comp,
      aval_var = choices_selected(
        variable_choices(ADTTE, "AVAL"),
        "AVAL"
      ),
      strata_var = choices_selected(
        variable_choices(ADSL, "SEX"),
        NULL
      ),
      offset_var = choices_selected(
        variable_choices(ADSL, "AGE"),
        NULL
      ),
      cov_var = choices_selected(
        variable_choices(ADTTE, "SITEID"),
        NULL
      )
    )
  )
)

if (interactive()) {
  shinyApp(ui = app$ui, server = app$server)
}
}
\seealso{
The \href{https://insightsengineering.github.io/tlg-catalog/stable/}{TLG Catalog} where additional example
apps implementing this module can be found.
}
\section{Examples in Shinylive}{
\describe{
  \item{example-1}{
    \href{https://shinylive.io/r/app/#code=NobwRAdghgtgpmAXGKAHVA6ASmANGAYwHsIAXOMpMAGwEsAjAJykYE8AKcqajGIgEwCu1OAGcMBOhFoFuASgA60snGYFStAG5wABAB4AtDoBmgiOtol2cnQBUsAVQCiSpfyiko+owHdapAAtaCE44bgB9d09rXB0QJR0dOiYWDgUwckYIdMUIRIBBABEAZQAZbx1MiHC4AA9wqH5RagSdIttbJwqqmvrG0nIlAF9cpQArImDwgGs4VlF2KKgbQx1+OGMoYVJwgn5aUQJwianZ+eBoeAWluQBdV2hGGHDGDd2iGFQKulFSdlb8gBhWz5LAAWUBhR0AF4kgc-q1Eq9jDCdOlQWCdAAhdK4RE6YifVEEf5gDFtXFosngnSAnKtOR4vJtGmwn4I5lIjao9JYxA6AAK1CgBDg9CIuPxhK+sJJ6P5hUYggA5joABqU9KA-mAj70YIeSzZMC5RK5UYQIplCpLYDAdElUrpW73S2FDpdVa2+1k92dZ2ugDEOgAktINNxaAAvXSBWNhag6NCoJTJirBfz-ZlLVFLJmJPhCESiVGF4RiLOJRKkZ47YhmUgLfGJJaXXSwh0eyWcqssZ6aFjEgKTUWicKiOAidRwfiVqvzgeMWhQegiXbDmQV9qdWJy6lgzX7yGHoEg8HHk2M5tV9Hnwrpa9XnuJPsvN7S1Gv5HvT75+dJgdqHCRchxHMRx0nOBp1na9EkXZdVzgdcwIWbcnFidEADV8idE0-3-Kl8mw3DH3wqtfmYTxgMHWUN1HCCp3IGDnyreCVzXAg6K3R0MLAYonA1PDYJ0AA5BxSidFinwIohjGMCcdhA2iUIYqCmLnAi2MQ5DN1QnjCIAcRcISWMSMSJNI69iE0ajGFA3TVOgjT-y0jiuL0j1eOKENOhDe8TIIszxMkgjTSrMLzQeWgUXYYJMhFDRtGsGx4mZUQgggVh8nQdhBFoT90AAEjy2IJ0YbQ7NhZNCrKirciGMAhluIA}{Open in Shinylive}
    \if{html}{\out{<iframe class="iframe_shinylive" src="https://shinylive.io/r/app/#code=NobwRAdghgtgpmAXGKAHVA6ASmANGAYwHsIAXOMpMAGwEsAjAJykYE8AKcqajGIgEwCu1OAGcMBOhFoFuASgA60snGYFStAG5wABAB4AtDoBmgiOtol2cnQBUsAVQCiSpfyiko+owHdapAAtaCE44bgB9d09rXB0QJR0dOiYWDgUwckYIdMUIRIBBABEAZQAZbx1MiHC4AA9wqH5RagSdIttbJwqqmvrG0nIlAF9cpQArImDwgGs4VlF2KKgbQx1+OGMoYVJwgn5aUQJwianZ+eBoeAWluQBdV2hGGHDGDd2iGFQKulFSdlb8gBhWz5LAAWUBhR0AF4kgc-q1Eq9jDCdOlQWCdAAhdK4RE6YifVEEf5gDFtXFosngnSAnKtOR4vJtGmwn4I5lIjao9JYxA6AAK1CgBDg9CIuPxhK+sJJ6P5hUYggA5joABqU9KA-mAj70YIeSzZMC5RK5UYQIplCpLYDAdElUrpW73S2FDpdVa2+1k92dZ2ugDEOgAktINNxaAAvXSBWNhag6NCoJTJirBfz-ZlLVFLJmJPhCESiVGF4RiLOJRKkZ47YhmUgLfGJJaXXSwh0eyWcqssZ6aFjEgKTUWicKiOAidRwfiVqvzgeMWhQegiXbDmQV9qdWJy6lgzX7yGHoEg8HHk2M5tV9Hnwrpa9XnuJPsvN7S1Gv5HvT75+dJgdqHCRchxHMRx0nOBp1na9EkXZdVzgdcwIWbcnFidEADV8idE0-3-Kl8mw3DH3wqtfmYTxgMHWUN1HCCp3IGDnyreCVzXAg6K3R0MLAYonA1PDYJ0AA5BxSidFinwIohjGMCcdhA2iUIYqCmLnAi2MQ5DN1QnjCIAcRcISWMSMSJNI69iE0ajGFA3TVOgjT-y0jiuL0j1eOKENOhDe8TIIszxMkgjTSrMLzQeWgUXYYJMhFDRtGsGx4mZUQgggVh8nQdhBFoT90AAEjy2IJ0YbQ7NhZNCrKirciGMAhluIA" style="height: 800px; width: 100vw; max-width: 1400px; border: 1px solid rgba(0,0,0,0.175); border-radius: .375rem; position: absolute; left: 50\%; margin-top: 30px; transform: translateX(-50\%); z-index: 1"></iframe>}}
    \if{html}{\out{<a style='height: 800px; display: block;'></a>}}
  }
}
}

